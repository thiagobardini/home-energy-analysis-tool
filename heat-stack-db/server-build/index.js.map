{
  "version": 3,
  "sources": ["../server/index.ts"],
  "sourcesContent": ["import crypto from 'crypto'\nimport { createRequestHandler as _createRequestHandler } from '@remix-run/express'\nimport { type ServerBuild, installGlobals } from '@remix-run/node'\nimport * as Sentry from '@sentry/remix'\nimport { ip as ipAddress } from 'address'\nimport chalk from 'chalk'\nimport closeWithGrace from 'close-with-grace'\nimport compression from 'compression'\nimport express from 'express'\nimport rateLimit from 'express-rate-limit'\nimport getPort, { portNumbers } from 'get-port'\nimport helmet from 'helmet'\nimport morgan from 'morgan'\n\ninstallGlobals()\n\nconst MODE = process.env.NODE_ENV ?? 'development'\nconst IS_PROD = MODE === 'production'\nconst IS_DEV = MODE === 'development'\nconst ALLOW_INDEXING = process.env.ALLOW_INDEXING !== 'false'\n\nconst createRequestHandler = IS_PROD\n\t? Sentry.wrapExpressCreateRequestHandler(_createRequestHandler)\n\t: _createRequestHandler\n\nconst viteDevServer = IS_PROD\n\t? undefined\n\t: await import('vite').then(vite =>\n\t\t\tvite.createServer({\n\t\t\t\tserver: { middlewareMode: true },\n\t\t\t}),\n\t\t)\n\nconst app = express()\n\nconst getHost = (req: { get: (key: string) => string | undefined }) =>\n\treq.get('X-Forwarded-Host') ?? req.get('host') ?? ''\n\n// fly is our proxy\napp.set('trust proxy', true)\n\n// ensure HTTPS only (X-Forwarded-Proto comes from Fly)\napp.use((req, res, next) => {\n\tconst proto = req.get('X-Forwarded-Proto')\n\tconst host = getHost(req)\n\tif (proto === 'http') {\n\t\tres.set('X-Forwarded-Proto', 'https')\n\t\tres.redirect(`https://${host}${req.originalUrl}`)\n\t\treturn\n\t}\n\tnext()\n})\n\n// no ending slashes for SEO reasons\n// https://github.com/epicweb-dev/epic-stack/discussions/108\napp.get('*', (req, res, next) => {\n\tif (req.path.endsWith('/') && req.path.length > 1) {\n\t\tconst query = req.url.slice(req.path.length)\n\t\tconst safepath = req.path.slice(0, -1).replace(/\\/+/g, '/')\n\t\tres.redirect(302, safepath + query)\n\t} else {\n\t\tnext()\n\t}\n})\n\napp.use(compression())\n\n// http://expressjs.com/en/advanced/best-practice-security.html#at-a-minimum-disable-x-powered-by-header\napp.disable('x-powered-by')\n\nif (viteDevServer) {\n\tapp.use(viteDevServer.middlewares)\n} else {\n\t// Remix fingerprints its assets so we can cache forever.\n\tapp.use(\n\t\t'/assets',\n\t\texpress.static('build/client/assets', { immutable: true, maxAge: '1y' }),\n\t)\n\n\t// Everything else (like favicon.ico) is cached for an hour. You may want to be\n\t// more aggressive with this caching.\n\tapp.use(express.static('build/client', { maxAge: '1h' }))\n}\n\napp.get(['/img/*', '/favicons/*'], (_req, res) => {\n\t// if we made it past the express.static for these, then we're missing something.\n\t// So we'll just send a 404 and won't bother calling other middleware.\n\treturn res.status(404).send('Not found')\n})\n\nmorgan.token('url', req => decodeURIComponent(req.url ?? ''))\napp.use(\n\tmorgan('tiny', {\n\t\tskip: (req, res) =>\n\t\t\tres.statusCode === 200 &&\n\t\t\t(req.url?.startsWith('/resources/note-images') ||\n\t\t\t\treq.url?.startsWith('/resources/user-images') ||\n\t\t\t\treq.url?.startsWith('/resources/healthcheck')),\n\t}),\n)\n\napp.use((_, res, next) => {\n\tres.locals.cspNonce = crypto.randomBytes(16).toString('hex')\n\tnext()\n})\n\napp.use(\n\thelmet({\n\t\txPoweredBy: false,\n\t\treferrerPolicy: { policy: 'same-origin' },\n\t\tcrossOriginEmbedderPolicy: false,\n\t\tcontentSecurityPolicy: {\n\t\t\t// NOTE: Remove reportOnly when you're ready to enforce this CSP\n\t\t\treportOnly: true,\n\t\t\tdirectives: {\n\t\t\t\t'connect-src': [\n\t\t\t\t\tMODE === 'development' ? 'ws:' : null,\n\t\t\t\t\tprocess.env.SENTRY_DSN ? '*.sentry.io' : null,\n\t\t\t\t\t\"'self'\",\n\t\t\t\t].filter(Boolean),\n\t\t\t\t'font-src': [\"'self'\"],\n\t\t\t\t'frame-src': [\"'self'\"],\n\t\t\t\t'img-src': [\"'self'\", 'data:'],\n\t\t\t\t'script-src': [\n\t\t\t\t\t\"'strict-dynamic'\",\n\t\t\t\t\t\"'self'\",\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t(_, res) => `'nonce-${res.locals.cspNonce}'`,\n\t\t\t\t],\n\t\t\t\t'script-src-attr': [\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t(_, res) => `'nonce-${res.locals.cspNonce}'`,\n\t\t\t\t],\n\t\t\t\t'upgrade-insecure-requests': null,\n\t\t\t},\n\t\t},\n\t}),\n)\n\n// When running tests or running in development, we want to effectively disable\n// rate limiting because playwright tests are very fast and we don't want to\n// have to wait for the rate limit to reset between tests.\nconst maxMultiple =\n\t!IS_PROD || process.env.PLAYWRIGHT_TEST_BASE_URL ? 10_000 : 1\nconst rateLimitDefault = {\n\twindowMs: 60 * 1000,\n\tmax: 1000 * maxMultiple,\n\tstandardHeaders: true,\n\tlegacyHeaders: false,\n\t// Fly.io prevents spoofing of X-Forwarded-For\n\t// so no need to validate the trustProxy config\n\tvalidate: { trustProxy: false },\n}\n\nconst strongestRateLimit = rateLimit({\n\t...rateLimitDefault,\n\twindowMs: 60 * 1000,\n\tmax: 10 * maxMultiple,\n})\n\nconst strongRateLimit = rateLimit({\n\t...rateLimitDefault,\n\twindowMs: 60 * 1000,\n\tmax: 100 * maxMultiple,\n})\n\nconst generalRateLimit = rateLimit(rateLimitDefault)\napp.use((req, res, next) => {\n\tconst strongPaths = [\n\t\t'/login',\n\t\t'/signup',\n\t\t'/verify',\n\t\t'/admin',\n\t\t'/onboarding',\n\t\t'/reset-password',\n\t\t'/settings/profile',\n\t\t'/resources/login',\n\t\t'/resources/verify',\n\t]\n\tif (req.method !== 'GET' && req.method !== 'HEAD') {\n\t\tif (strongPaths.some(p => req.path.includes(p))) {\n\t\t\treturn strongestRateLimit(req, res, next)\n\t\t}\n\t\treturn strongRateLimit(req, res, next)\n\t}\n\n\t// the verify route is a special case because it's a GET route that\n\t// can have a token in the query string\n\tif (req.path.includes('/verify')) {\n\t\treturn strongestRateLimit(req, res, next)\n\t}\n\n\treturn generalRateLimit(req, res, next)\n})\n\nasync function getBuild() {\n\tconst build = viteDevServer\n\t\t? viteDevServer.ssrLoadModule('virtual:remix/server-build')\n\t\t: // @ts-ignore this should exist before running the server\n\t\t\t// but it may not exist just yet.\n\t\t\tawait import('../build/server/index.js')\n\t// not sure how to make this happy \uD83E\uDD37\u200D\u2642\uFE0F\n\treturn build as unknown as ServerBuild\n}\n\nif (!ALLOW_INDEXING) {\n\tapp.use((_, res, next) => {\n\t\tres.set('X-Robots-Tag', 'noindex, nofollow')\n\t\tnext()\n\t})\n}\n\napp.all(\n\t'*',\n\tcreateRequestHandler({\n\t\tgetLoadContext: (_: any, res: any) => ({\n\t\t\tcspNonce: res.locals.cspNonce,\n\t\t\tserverBuild: getBuild(),\n\t\t}),\n\t\tmode: MODE,\n\t\tbuild: getBuild,\n\t}),\n)\n\nconst desiredPort = Number(process.env.PORT || 3000)\nconst portToUse = await getPort({\n\tport: portNumbers(desiredPort, desiredPort + 100),\n})\nconst portAvailable = desiredPort === portToUse\nif (!portAvailable && !IS_DEV) {\n\tconsole.log(`\u26A0\uFE0F Port ${desiredPort} is not available.`)\n\tprocess.exit(1)\n}\n\nconst server = app.listen(portToUse, () => {\n\tif (!portAvailable) {\n\t\tconsole.warn(\n\t\t\tchalk.yellow(\n\t\t\t\t`\u26A0\uFE0F  Port ${desiredPort} is not available, using ${portToUse} instead.`,\n\t\t\t),\n\t\t)\n\t}\n\tconsole.log(`\uD83D\uDE80  We have liftoff!`)\n\tconst localUrl = `http://localhost:${portToUse}`\n\tlet lanUrl: string | null = null\n\tconst localIp = ipAddress() ?? 'Unknown'\n\t// Check if the address is a private ip\n\t// https://en.wikipedia.org/wiki/Private_network#Private_IPv4_address_spaces\n\t// https://github.com/facebook/create-react-app/blob/d960b9e38c062584ff6cfb1a70e1512509a966e7/packages/react-dev-utils/WebpackDevServerUtils.js#LL48C9-L54C10\n\tif (/^10[.]|^172[.](1[6-9]|2[0-9]|3[0-1])[.]|^192[.]168[.]/.test(localIp)) {\n\t\tlanUrl = `http://${localIp}:${portToUse}`\n\t}\n\n\tconsole.log(\n\t\t`\n${chalk.bold('Local:')}            ${chalk.cyan(localUrl)}\n${lanUrl ? `${chalk.bold('On Your Network:')}  ${chalk.cyan(lanUrl)}` : ''}\n${chalk.bold('Press Ctrl+C to stop')}\n\t\t`.trim(),\n\t)\n})\n\ncloseWithGrace(async () => {\n\tawait new Promise((resolve, reject) => {\n\t\tserver.close(e => (e ? reject(e) : resolve('ok')))\n\t})\n})\n"],
  "mappings": "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",
  "names": []
}
