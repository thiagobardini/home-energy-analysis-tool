{"version":3,"file":"components-C2HTMhgG.js","sources":["../../../node_modules/turbo-stream/dist/turbo-stream.mjs","../../../node_modules/@remix-run/server-runtime/dist/esm/single-fetch.js","../../../node_modules/@remix-run/react/dist/esm/_virtual/_rollupPluginBabelHelpers.js","../../../node_modules/@remix-run/react/dist/esm/invariant.js","../../../node_modules/@remix-run/react/dist/esm/routeModules.js","../../../node_modules/@remix-run/react/dist/esm/links.js","../../../node_modules/@remix-run/react/dist/esm/markup.js","../../../node_modules/@remix-run/react/dist/esm/data.js","../../../node_modules/@remix-run/react/dist/esm/single-fetch.js","../../../node_modules/@remix-run/react/dist/esm/components.js"],"sourcesContent":["// src/utils.ts\nvar HOLE = -1;\nvar NAN = -2;\nvar NEGATIVE_INFINITY = -3;\nvar NEGATIVE_ZERO = -4;\nvar NULL = -5;\nvar POSITIVE_INFINITY = -6;\nvar UNDEFINED = -7;\nvar TYPE_BIGINT = \"B\";\nvar TYPE_DATE = \"D\";\nvar TYPE_ERROR = \"E\";\nvar TYPE_MAP = \"M\";\nvar TYPE_NULL_OBJECT = \"N\";\nvar TYPE_PROMISE = \"P\";\nvar TYPE_REGEXP = \"R\";\nvar TYPE_SET = \"S\";\nvar TYPE_SYMBOL = \"Y\";\nvar TYPE_URL = \"U\";\nvar Deferred = class {\n  promise;\n  resolve;\n  reject;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n};\nfunction createLineSplittingTransform() {\n  const decoder = new TextDecoder();\n  let leftover = \"\";\n  return new TransformStream({\n    transform(chunk, controller) {\n      const str = decoder.decode(chunk, { stream: true });\n      const parts = (leftover + str).split(\"\\n\");\n      leftover = parts.pop() || \"\";\n      for (const part of parts) {\n        controller.enqueue(part);\n      }\n    },\n    flush(controller) {\n      if (leftover) {\n        controller.enqueue(leftover);\n      }\n    }\n  });\n}\n\n// src/flatten.ts\nfunction flatten(input) {\n  const { indices } = this;\n  const existing = indices.get(input);\n  if (existing)\n    return existing;\n  if (input === void 0)\n    return UNDEFINED;\n  if (input === null)\n    return NULL;\n  if (Number.isNaN(input))\n    return NAN;\n  if (input === Number.POSITIVE_INFINITY)\n    return POSITIVE_INFINITY;\n  if (input === Number.NEGATIVE_INFINITY)\n    return NEGATIVE_INFINITY;\n  if (input === 0 && 1 / input < 0)\n    return NEGATIVE_ZERO;\n  const index = this.index++;\n  indices.set(input, index);\n  stringify.call(this, input, index);\n  return index;\n}\nfunction stringify(input, index) {\n  const { deferred, plugins } = this;\n  const str = this.stringified;\n  const partsForObj = (obj) => Object.keys(obj).map((k) => `\"${flatten.call(this, k)}\":${flatten.call(this, obj[k])}`).join(\",\");\n  switch (typeof input) {\n    case \"boolean\":\n    case \"number\":\n    case \"string\":\n      str[index] = JSON.stringify(input);\n      break;\n    case \"bigint\":\n      str[index] = `[\"${TYPE_BIGINT}\",\"${input}\"]`;\n      break;\n    case \"symbol\": {\n      const keyFor = Symbol.keyFor(input);\n      if (!keyFor)\n        throw new Error(\n          \"Cannot encode symbol unless created with Symbol.for()\"\n        );\n      str[index] = `[\"${TYPE_SYMBOL}\",${JSON.stringify(keyFor)}]`;\n      break;\n    }\n    case \"object\": {\n      if (!input) {\n        str[index] = `${NULL}`;\n        break;\n      }\n      const isArray = Array.isArray(input);\n      let pluginHandled = false;\n      if (!isArray && plugins) {\n        for (const plugin of plugins) {\n          const pluginResult = plugin(input);\n          if (Array.isArray(pluginResult)) {\n            pluginHandled = true;\n            const [pluginIdentifier, ...rest] = pluginResult;\n            str[index] = `[${JSON.stringify(pluginIdentifier)}`;\n            if (rest.length > 0) {\n              str[index] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n            }\n            str[index] += \"]\";\n            break;\n          }\n        }\n      }\n      if (!pluginHandled) {\n        let result = isArray ? \"[\" : \"{\";\n        if (isArray) {\n          for (let i = 0; i < input.length; i++)\n            result += (i ? \",\" : \"\") + (i in input ? flatten.call(this, input[i]) : HOLE);\n          str[index] = `${result}]`;\n        } else if (input instanceof Date) {\n          str[index] = `[\"${TYPE_DATE}\",${input.getTime()}]`;\n        } else if (input instanceof URL) {\n          str[index] = `[\"${TYPE_URL}\",${JSON.stringify(input.href)}]`;\n        } else if (input instanceof RegExp) {\n          str[index] = `[\"${TYPE_REGEXP}\",${JSON.stringify(\n            input.source\n          )},${JSON.stringify(input.flags)}]`;\n        } else if (input instanceof Set) {\n          str[index] = `[\"${TYPE_SET}\",${[...input].map((val) => flatten.call(this, val)).join(\",\")}]`;\n        } else if (input instanceof Map) {\n          str[index] = `[\"${TYPE_MAP}\",${[...input].flatMap(([k, v]) => [flatten.call(this, k), flatten.call(this, v)]).join(\",\")}]`;\n        } else if (input instanceof Promise) {\n          str[index] = `[\"${TYPE_PROMISE}\",${index}]`;\n          deferred[index] = input;\n        } else if (input instanceof Error) {\n          str[index] = `[\"${TYPE_ERROR}\",${JSON.stringify(input.message)}`;\n          if (input.name !== \"Error\") {\n            str[index] += `,${JSON.stringify(input.name)}`;\n          }\n          str[index] += \"]\";\n        } else if (Object.getPrototypeOf(input) === null) {\n          str[index] = `[\"${TYPE_NULL_OBJECT}\",{${partsForObj(input)}}]`;\n        } else if (isPlainObject(input)) {\n          str[index] = `{${partsForObj(input)}}`;\n        } else {\n          throw new Error(\"Cannot encode object with prototype\");\n        }\n      }\n      break;\n    }\n    default:\n      throw new Error(\"Cannot encode function or unexpected type\");\n  }\n}\nvar objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join(\"\\0\");\nfunction isPlainObject(thing) {\n  const proto = Object.getPrototypeOf(thing);\n  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === objectProtoNames;\n}\n\n// src/unflatten.ts\nvar globalObj = typeof window !== \"undefined\" ? window : typeof globalThis !== \"undefined\" ? globalThis : void 0;\nfunction unflatten(parsed) {\n  const { hydrated, values } = this;\n  if (typeof parsed === \"number\")\n    return hydrate.call(this, parsed);\n  if (!Array.isArray(parsed) || !parsed.length)\n    throw new SyntaxError();\n  const startIndex = values.length;\n  values.push(...parsed);\n  hydrated.length = values.length;\n  return hydrate.call(this, startIndex);\n}\nfunction hydrate(index) {\n  const { hydrated, values, deferred, plugins } = this;\n  switch (index) {\n    case UNDEFINED:\n      return;\n    case NULL:\n      return null;\n    case NAN:\n      return NaN;\n    case POSITIVE_INFINITY:\n      return Infinity;\n    case NEGATIVE_INFINITY:\n      return -Infinity;\n    case NEGATIVE_ZERO:\n      return -0;\n  }\n  if (hydrated[index])\n    return hydrated[index];\n  const value = values[index];\n  if (!value || typeof value !== \"object\")\n    return hydrated[index] = value;\n  if (Array.isArray(value)) {\n    if (typeof value[0] === \"string\") {\n      const [type, b, c] = value;\n      switch (type) {\n        case TYPE_DATE:\n          return hydrated[index] = new Date(b);\n        case TYPE_URL:\n          return hydrated[index] = new URL(b);\n        case TYPE_BIGINT:\n          return hydrated[index] = BigInt(b);\n        case TYPE_REGEXP:\n          return hydrated[index] = new RegExp(b, c);\n        case TYPE_SYMBOL:\n          return hydrated[index] = Symbol.for(b);\n        case TYPE_SET:\n          const set = /* @__PURE__ */ new Set();\n          hydrated[index] = set;\n          for (let i = 1; i < value.length; i++)\n            set.add(hydrate.call(this, value[i]));\n          return set;\n        case TYPE_MAP:\n          const map = /* @__PURE__ */ new Map();\n          hydrated[index] = map;\n          for (let i = 1; i < value.length; i += 2) {\n            map.set(\n              hydrate.call(this, value[i]),\n              hydrate.call(this, value[i + 1])\n            );\n          }\n          return map;\n        case TYPE_NULL_OBJECT:\n          const obj = /* @__PURE__ */ Object.create(null);\n          hydrated[index] = obj;\n          for (const key in b)\n            obj[hydrate.call(this, Number(key))] = hydrate.call(this, b[key]);\n          return obj;\n        case TYPE_PROMISE:\n          if (hydrated[b]) {\n            return hydrated[index] = hydrated[b];\n          } else {\n            const d = new Deferred();\n            deferred[b] = d;\n            return hydrated[index] = d.promise;\n          }\n        case TYPE_ERROR:\n          const [, message, errorType] = value;\n          let error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);\n          hydrated[index] = error;\n          return error;\n        default:\n          if (Array.isArray(plugins)) {\n            const args = value.slice(1).map((i) => hydrate.call(this, i));\n            for (const plugin of plugins) {\n              const result = plugin(value[0], ...args);\n              if (result)\n                return hydrated[index] = result.value;\n            }\n          }\n          throw new SyntaxError();\n      }\n    } else {\n      const array = [];\n      hydrated[index] = array;\n      for (let i = 0; i < value.length; i++) {\n        const n = value[i];\n        if (n !== HOLE)\n          array[i] = hydrate.call(this, n);\n      }\n      return array;\n    }\n  } else {\n    const object = {};\n    hydrated[index] = object;\n    for (const key in value) {\n      object[hydrate.call(this, Number(key))] = hydrate.call(\n        this,\n        value[key]\n      );\n    }\n    return object;\n  }\n}\n\n// src/turbo-stream.ts\nasync function decode(readable, options) {\n  const { plugins } = options ?? {};\n  const done = new Deferred();\n  const reader = readable.pipeThrough(createLineSplittingTransform()).getReader();\n  const decoder = {\n    values: [],\n    hydrated: [],\n    deferred: {},\n    plugins\n  };\n  const decoded = await decodeInitial.call(decoder, reader);\n  let donePromise = done.promise;\n  if (decoded.done) {\n    done.resolve();\n  } else {\n    donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch((reason) => {\n      for (const deferred of Object.values(decoder.deferred)) {\n        deferred.reject(reason);\n      }\n      done.reject(reason);\n    });\n  }\n  return {\n    done: donePromise.then(() => reader.closed),\n    value: decoded.value\n  };\n}\nasync function decodeInitial(reader) {\n  const read = await reader.read();\n  if (!read.value) {\n    throw new SyntaxError();\n  }\n  let line;\n  try {\n    line = JSON.parse(read.value);\n  } catch (reason) {\n    throw new SyntaxError();\n  }\n  return {\n    done: read.done,\n    value: unflatten.call(this, line)\n  };\n}\nasync function decodeDeferred(reader) {\n  let read = await reader.read();\n  while (!read.done) {\n    if (!read.value)\n      continue;\n    const line = read.value;\n    switch (line[0]) {\n      case TYPE_PROMISE: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.resolve(value);\n        break;\n      }\n      case TYPE_ERROR: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.reject(value);\n        break;\n      }\n      default:\n        throw new SyntaxError();\n    }\n    read = await reader.read();\n  }\n}\nfunction encode(input, options) {\n  const { plugins, signal } = options ?? {};\n  const encoder = {\n    deferred: {},\n    index: 0,\n    indices: /* @__PURE__ */ new Map(),\n    stringified: [],\n    plugins,\n    signal\n  };\n  const textEncoder = new TextEncoder();\n  let lastSentIndex = 0;\n  const readable = new ReadableStream({\n    async start(controller) {\n      const id = flatten.call(encoder, input);\n      if (id < 0) {\n        controller.enqueue(textEncoder.encode(`${id}\n`));\n      } else {\n        controller.enqueue(\n          textEncoder.encode(`[${encoder.stringified.join(\",\")}]\n`)\n        );\n        lastSentIndex = encoder.stringified.length - 1;\n      }\n      const seenPromises = /* @__PURE__ */ new WeakSet();\n      while (Object.keys(encoder.deferred).length > 0) {\n        for (const [deferredId, deferred] of Object.entries(encoder.deferred)) {\n          if (seenPromises.has(deferred))\n            continue;\n          seenPromises.add(\n            encoder.deferred[Number(deferredId)] = raceSignal(\n              deferred,\n              encoder.signal\n            ).then(\n              (resolved) => {\n                const id2 = flatten.call(encoder, resolved);\n                if (id2 < 0) {\n                  controller.enqueue(\n                    textEncoder.encode(`${TYPE_PROMISE}${deferredId}:${id2}\n`)\n                  );\n                } else {\n                  const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                  controller.enqueue(\n                    textEncoder.encode(\n                      `${TYPE_PROMISE}${deferredId}:[${values}]\n`\n                    )\n                  );\n                  lastSentIndex = encoder.stringified.length - 1;\n                }\n              },\n              (reason) => {\n                if (!reason || typeof reason !== \"object\" || !(reason instanceof Error)) {\n                  reason = new Error(\"An unknown error occurred\");\n                }\n                const id2 = flatten.call(encoder, reason);\n                if (id2 < 0) {\n                  controller.enqueue(\n                    textEncoder.encode(`${TYPE_ERROR}${deferredId}:${id2}\n`)\n                  );\n                } else {\n                  const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                  controller.enqueue(\n                    textEncoder.encode(\n                      `${TYPE_ERROR}${deferredId}:[${values}]\n`\n                    )\n                  );\n                  lastSentIndex = encoder.stringified.length - 1;\n                }\n              }\n            ).finally(() => {\n              delete encoder.deferred[Number(deferredId)];\n            })\n          );\n        }\n        await Promise.race(Object.values(encoder.deferred));\n      }\n      await Promise.all(Object.values(encoder.deferred));\n      controller.close();\n    }\n  });\n  return readable;\n}\nfunction raceSignal(promise, signal) {\n  if (!signal)\n    return promise;\n  if (signal.aborted)\n    return Promise.reject(signal.reason || new Error(\"Signal was aborted.\"));\n  const abort = new Promise((resolve, reject) => {\n    signal.addEventListener(\"abort\", (event) => {\n      reject(signal.reason || new Error(\"Signal was aborted.\"));\n    });\n    promise.then(resolve).catch(reject);\n  });\n  abort.catch(() => {\n  });\n  return Promise.race([abort, promise]);\n}\nexport {\n  decode,\n  encode\n};\n","/**\n * @remix-run/server-runtime v2.9.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { UNSAFE_ErrorResponseImpl, isRouteErrorResponse } from '@remix-run/router';\nimport { encode } from 'turbo-stream';\nimport { sanitizeError, sanitizeErrors } from './errors.js';\nimport { ServerMode } from './mode.js';\nimport { isResponse, isDeferredData, isRedirectStatusCode } from './responses.js';\n\nconst SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\nconst ResponseStubActionSymbol = Symbol(\"ResponseStubAction\");\nfunction getSingleFetchDataStrategy(responseStubs, {\n  isActionDataRequest,\n  loadRouteIds\n} = {}) {\n  return async ({\n    request,\n    matches\n  }) => {\n    // Don't call loaders on action data requests\n    if (isActionDataRequest && request.method === \"GET\") {\n      return await Promise.all(matches.map(m => m.resolve(async () => ({\n        type: \"data\",\n        result: null\n      }))));\n    }\n    let results = await Promise.all(matches.map(async match => {\n      let responseStub;\n      if (request.method !== \"GET\") {\n        responseStub = responseStubs[ResponseStubActionSymbol];\n      } else {\n        responseStub = responseStubs[match.route.id];\n      }\n      let result = await match.resolve(async handler => {\n        // Cast `ResponseStubImpl -> ResponseStub` to hide the symbol in userland\n        let ctx = {\n          response: responseStub\n        };\n        // Only run opt-in loaders when fine-grained revalidation is enabled\n        let data = loadRouteIds && !loadRouteIds.includes(match.route.id) ? null : await handler(ctx);\n        return {\n          type: \"data\",\n          result: data\n        };\n      });\n\n      // Transfer raw Response status/headers to responseStubs\n      if (isResponse(result.result)) {\n        proxyResponseToResponseStub(result.result.status, result.result.headers, responseStub);\n      } else if (isDeferredData(result.result) && result.result.init) {\n        proxyResponseToResponseStub(result.result.init.status, new Headers(result.result.init.headers), responseStub);\n      }\n      return result;\n    }));\n    return results;\n  };\n}\nfunction getSingleFetchResourceRouteDataStrategy({\n  responseStubs\n}) {\n  return async ({\n    matches\n  }) => {\n    let results = await Promise.all(matches.map(async match => {\n      let responseStub = match.shouldLoad ? responseStubs[match.route.id] : null;\n      let result = await match.resolve(async handler => {\n        // Cast `ResponseStubImpl -> ResponseStub` to hide the symbol in userland\n        let ctx = {\n          response: responseStub\n        };\n        let data = await handler(ctx);\n        return {\n          type: \"data\",\n          result: data\n        };\n      });\n      return result;\n    }));\n    return results;\n  };\n}\nasync function singleFetchAction(serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\n  try {\n    let handlerRequest = new Request(handlerUrl, {\n      method: request.method,\n      body: request.body,\n      headers: request.headers,\n      signal: request.signal,\n      ...(request.body ? {\n        duplex: \"half\"\n      } : undefined)\n    });\n    let responseStubs = getResponseStubs();\n    let result = await staticHandler.query(handlerRequest, {\n      requestContext: loadContext,\n      skipLoaderErrorBubbling: true,\n      unstable_dataStrategy: getSingleFetchDataStrategy(responseStubs, {\n        isActionDataRequest: true\n      })\n    });\n\n    // Unlike `handleDataRequest`, when singleFetch is enabled, query does\n    // let non-Response return values through\n    if (isResponse(result)) {\n      return {\n        result: getSingleFetchRedirect(result.status, result.headers),\n        headers: result.headers,\n        status: 200\n      };\n    }\n    let context = result;\n    let singleFetchResult;\n    let {\n      statusCode,\n      headers\n    } = mergeResponseStubs(context, responseStubs, {\n      isActionDataRequest: true\n    });\n    if (isRedirectStatusCode(statusCode) && headers.has(\"Location\")) {\n      return {\n        result: getSingleFetchRedirect(statusCode, headers),\n        headers,\n        status: 200 // Don't want the `fetch` call to follow the redirect\n      };\n    }\n\n    // Sanitize errors outside of development environments\n    if (context.errors) {\n      Object.values(context.errors).forEach(err => {\n        // @ts-expect-error This is \"private\" from users but intended for internal use\n        if ((!isRouteErrorResponse(err) || err.error) && !isResponseStub(err)) {\n          handleError(err);\n        }\n      });\n      context.errors = sanitizeErrors(context.errors, serverMode);\n    }\n    if (context.errors) {\n      let error = Object.values(context.errors)[0];\n      singleFetchResult = {\n        error: isResponseStub(error) ? null : error\n      };\n    } else {\n      singleFetchResult = {\n        data: Object.values(context.actionData || {})[0]\n      };\n    }\n    return {\n      result: singleFetchResult,\n      headers,\n      status: statusCode\n    };\n  } catch (error) {\n    handleError(error);\n    // These should only be internal remix errors, no need to deal with responseStubs\n    return {\n      result: {\n        error\n      },\n      headers: new Headers(),\n      status: 500\n    };\n  }\n}\nasync function singleFetchLoaders(serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\n  try {\n    var _URL$searchParams$get;\n    let handlerRequest = new Request(handlerUrl, {\n      headers: request.headers,\n      signal: request.signal\n    });\n    let loadRouteIds = ((_URL$searchParams$get = new URL(request.url).searchParams.get(\"_routes\")) === null || _URL$searchParams$get === void 0 ? void 0 : _URL$searchParams$get.split(\",\")) || undefined;\n    let responseStubs = getResponseStubs();\n    let result = await staticHandler.query(handlerRequest, {\n      requestContext: loadContext,\n      skipLoaderErrorBubbling: true,\n      unstable_dataStrategy: getSingleFetchDataStrategy(responseStubs, {\n        loadRouteIds\n      })\n    });\n    if (isResponse(result)) {\n      return {\n        result: {\n          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(result.status, result.headers)\n        },\n        headers: result.headers,\n        status: 200 // Don't want the `fetch` call to follow the redirect\n      };\n    }\n    let context = result;\n    let {\n      statusCode,\n      headers\n    } = mergeResponseStubs(context, responseStubs);\n    if (isRedirectStatusCode(statusCode) && headers.has(\"Location\")) {\n      return {\n        result: {\n          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(statusCode, headers)\n        },\n        headers,\n        status: 200 // Don't want the `fetch` call to follow the redirect\n      };\n    }\n\n    // Sanitize errors outside of development environments\n    if (context.errors) {\n      Object.values(context.errors).forEach(err => {\n        // @ts-expect-error This is \"private\" from users but intended for internal use\n        if ((!isRouteErrorResponse(err) || err.error) && !isResponseStub(err)) {\n          handleError(err);\n        }\n      });\n      context.errors = sanitizeErrors(context.errors, serverMode);\n    }\n\n    // Aggregate results based on the matches we intended to load since we get\n    // `null` values back in `context.loaderData` for routes we didn't load\n    let results = {};\n    let loadedMatches = loadRouteIds ? context.matches.filter(m => m.route.loader && loadRouteIds.includes(m.route.id)) : context.matches;\n    loadedMatches.forEach(m => {\n      var _context$loaderData, _context$errors;\n      let data = (_context$loaderData = context.loaderData) === null || _context$loaderData === void 0 ? void 0 : _context$loaderData[m.route.id];\n      let error = (_context$errors = context.errors) === null || _context$errors === void 0 ? void 0 : _context$errors[m.route.id];\n      if (error !== undefined) {\n        if (isResponseStub(error)) {\n          results[m.route.id] = {\n            error: null\n          };\n        } else {\n          results[m.route.id] = {\n            error\n          };\n        }\n      } else if (data !== undefined) {\n        results[m.route.id] = {\n          data\n        };\n      }\n    });\n    return {\n      result: results,\n      headers,\n      status: statusCode\n    };\n  } catch (error) {\n    handleError(error);\n    // These should only be internal remix errors, no need to deal with responseStubs\n    return {\n      result: {\n        root: {\n          error\n        }\n      },\n      headers: new Headers(),\n      status: 500\n    };\n  }\n}\nfunction isResponseStub(value) {\n  return value && typeof value === \"object\" && ResponseStubOperationsSymbol in value;\n}\nfunction getResponseStub(status) {\n  let headers = new Headers();\n  let operations = [];\n  let headersProxy = new Proxy(headers, {\n    get(target, prop, receiver) {\n      if (prop === \"set\" || prop === \"append\" || prop === \"delete\") {\n        return (name, value) => {\n          operations.push([prop, name, value]);\n          Reflect.apply(target[prop], target, [name, value]);\n        };\n      }\n      return Reflect.get(target, prop, receiver);\n    }\n  });\n  return {\n    status,\n    headers: headersProxy,\n    [ResponseStubOperationsSymbol]: operations\n  };\n}\nfunction getResponseStubs() {\n  return new Proxy({}, {\n    get(responseStubCache, prop) {\n      let cached = responseStubCache[prop];\n      if (!cached) {\n        responseStubCache[prop] = cached = getResponseStub();\n      }\n      return cached;\n    }\n  });\n}\nfunction proxyResponseToResponseStub(status, headers, responseStub) {\n  if (status != null && responseStub.status == null) {\n    responseStub.status = status;\n  }\n  for (let [k, v] of headers) {\n    if (k.toLowerCase() !== \"set-cookie\") {\n      responseStub.headers.set(k, v);\n    }\n  }\n\n  // Unsure why this is complaining?  It's fine in VSCode but fails with tsc...\n  // @ts-ignore - ignoring instead of expecting because otherwise build fails locally\n  for (let v of headers.getSetCookie()) {\n    responseStub.headers.append(\"Set-Cookie\", v);\n  }\n}\nfunction mergeResponseStubs(context, responseStubs, {\n  isActionDataRequest\n} = {}) {\n  let statusCode = undefined;\n  let headers = new Headers();\n\n  // Action followed by top-down loaders\n  let actionStub = responseStubs[ResponseStubActionSymbol];\n  let stubs = [actionStub];\n\n  // Nothing to merge at the route level on action data requests\n  if (!isActionDataRequest) {\n    stubs.push(...context.matches.map(m => responseStubs[m.route.id]));\n  }\n  for (let stub of stubs) {\n    // Take the highest error/redirect, or the lowest success value - preferring\n    // action 200's over loader 200s\n    if (\n    // first status found on the way down\n    statusCode === undefined && stub.status ||\n    // deeper 2xx status found while not overriding the action status\n    statusCode !== undefined && statusCode < 300 && stub.status && statusCode !== (actionStub === null || actionStub === void 0 ? void 0 : actionStub.status)) {\n      statusCode = stub.status;\n    }\n\n    // Replay headers operations in order\n    let ops = stub[ResponseStubOperationsSymbol];\n    for (let [op, ...args] of ops) {\n      // @ts-expect-error\n      headers[op](...args);\n    }\n  }\n\n  // If no response stubs set it, use whatever we got back from the router\n  // context which handles internal ErrorResponse cases like 404/405's where\n  // we may never run a loader/action\n  if (statusCode === undefined) {\n    statusCode = context.statusCode;\n  }\n  if (statusCode === undefined) {\n    statusCode = 200;\n  }\n  return {\n    statusCode,\n    headers\n  };\n}\nfunction getSingleFetchRedirect(status, headers) {\n  return {\n    redirect: headers.get(\"Location\"),\n    status,\n    revalidate:\n    // Technically X-Remix-Revalidate isn't needed here - that was an implementation\n    // detail of ?_data requests as our way to tell the front end to revalidate when\n    // we didn't have a response body to include that information in.\n    // With single fetch, we tell the front end via this revalidate boolean field.\n    // However, we're respecting it for now because it may be something folks have\n    // used in their own responses\n    // TODO(v3): Consider removing or making this official public API\n    headers.has(\"X-Remix-Revalidate\") || headers.has(\"Set-Cookie\"),\n    reload: headers.has(\"X-Remix-Reload-Document\")\n  };\n}\n\n// Note: If you change this function please change the corresponding\n// decodeViaTurboStream function in server-runtime\nfunction encodeViaTurboStream(data, requestSignal, streamTimeout, serverMode) {\n  let controller = new AbortController();\n  // How long are we willing to wait for all of the promises in `data` to resolve\n  // before timing out?  We default this to 50ms shorter than the default value for\n  // `ABORT_DELAY` in our built-in `entry.server.tsx` so that once we reject we\n  // have time to flush the rejections down through React's rendering stream before `\n  // we call abort() on that.  If the user provides their own it's up to them to\n  // decouple the aborting of the stream from the aborting of React's renderToPipeableStream\n  let timeoutId = setTimeout(() => controller.abort(new Error(\"Server Timeout\")), typeof streamTimeout === \"number\" ? streamTimeout : 4950);\n  requestSignal.addEventListener(\"abort\", () => clearTimeout(timeoutId));\n  return encode(data, {\n    signal: controller.signal,\n    plugins: [value => {\n      // Even though we sanitized errors on context.errors prior to responding,\n      // we still need to handle this for any deferred data that rejects with an\n      // Error - as those will not be sanitized yet\n      if (value instanceof Error) {\n        let {\n          name,\n          message,\n          stack\n        } = serverMode === ServerMode.Production ? sanitizeError(value, serverMode) : value;\n        return [\"SanitizedError\", name, message, stack];\n      }\n      if (value instanceof UNSAFE_ErrorResponseImpl) {\n        let {\n          data,\n          status,\n          statusText\n        } = value;\n        return [\"ErrorResponse\", data, status, statusText];\n      }\n      if (value && typeof value === \"object\" && SingleFetchRedirectSymbol in value) {\n        return [\"SingleFetchRedirect\", value[SingleFetchRedirectSymbol]];\n      }\n    }]\n  });\n}\n\n// Backwards-compatible type for Remix v2 where json/defer still use the old types,\n// and only non-json/defer returns use the new types.  This allows for incremental\n// migration of loaders to return naked objects.  In the next major version,\n// json/defer will be removed so everything will use the new simplified typings.\n// prettier-ignore\n\nconst ResponseStubOperationsSymbol = Symbol(\"ResponseStubOperations\");\n\n/**\n * A stubbed response to let you set the status/headers of your response from\n * loader/action functions\n */\n\n// loader\n\nlet defineLoader = loader => loader;\n\n// action\n\nlet defineAction = action => action;\n\nexport { ResponseStubOperationsSymbol, SingleFetchRedirectSymbol, defineAction, defineLoader, encodeViaTurboStream, getResponseStubs, getSingleFetchDataStrategy, getSingleFetchRedirect, getSingleFetchResourceRouteDataStrategy, isResponseStub, mergeResponseStubs, singleFetchAction, singleFetchLoaders };\n","/**\n * @remix-run/react v2.9.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nexport { _extends as extends };\n","/**\n * @remix-run/react v2.9.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport { invariant as default };\n","/**\n * @remix-run/react v2.9.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n/**\n * A function that handles data mutations for a route on the client\n */\n\n/**\n * Arguments passed to a route `clientAction` function\n */\n\n/**\n * A function that loads data for a route on the client\n */\n\n/**\n * Arguments passed to a route `clientLoader` function\n */\n\n/**\n * ErrorBoundary to display for this route\n */\n\n/**\n * `<Route HydrateFallback>` component to render on initial loads\n * when client loaders are present\n */\n\n/**\n * Optional, root-only `<Route Layout>` component to wrap the root content in.\n * Useful for defining the <html>/<head>/<body> document shell shared by the\n * Component, HydrateFallback, and ErrorBoundary\n */\n\n/**\n * A function that defines `<link>` tags to be inserted into the `<head>` of\n * the document on route transitions.\n *\n * @see https://remix.run/route/meta\n */\n\n/**\n * A React component that is rendered for a route.\n */\n\n/**\n * An arbitrary object that is associated with a route.\n *\n * @see https://remix.run/route/handle\n */\n\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await import( /* webpackIgnore: true */route.module);\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    // User got caught in the middle of a deploy and the CDN no longer has the\n    // asset we're trying to import! Reload from the server and the user\n    // (should) get the new manifest--unless the developer purged the static\n    // assets, the manifest path, but not the documents 😬\n    if (window.__remixContext.isSpaMode &&\n    // @ts-expect-error\n    typeof import.meta.hot !== \"undefined\") {\n      // In SPA Mode (which implies vite) we don't want to perform a hard reload\n      // on dev-time errors since it's a vite compilation error and a reload is\n      // just going to fail with the same issue.  Let the UI bubble to the error\n      // boundary and let them see the error in the overlay or the dev server log\n      console.error(`Error loading route module \\`${route.module}\\`:`, error);\n      throw error;\n    }\n    window.location.reload();\n    return new Promise(() => {\n      // check out of this hook cause the DJs never gonna re[s]olve this\n    });\n  }\n}\n\nexport { loadRouteModule };\n","/**\n * @remix-run/react v2.9.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { parsePath } from 'react-router-dom';\nimport { loadRouteModule } from './routeModules.js';\n\n/**\n * Represents a `<link>` element.\n *\n * WHATWG Specification: https://html.spec.whatwg.org/multipage/semantics.html#the-link-element\n */\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Gets all the links for a set of matches. The modules are assumed to have been\n * loaded already.\n */\nfunction getKeyedLinksForMatches(matches, routeModules, manifest) {\n  let descriptors = matches.map(match => {\n    var _module$links;\n    let module = routeModules[match.route.id];\n    let route = manifest.routes[match.route.id];\n    return [route.css ? route.css.map(href => ({\n      rel: \"stylesheet\",\n      href\n    })) : [], (module === null || module === void 0 ? void 0 : (_module$links = module.links) === null || _module$links === void 0 ? void 0 : _module$links.call(module)) || []];\n  }).flat(2);\n  let preloads = getCurrentPageModulePreloadHrefs(matches, manifest);\n  return dedupeLinkDescriptors(descriptors, preloads);\n}\nasync function prefetchStyleLinks(route, routeModule) {\n  var _route$css, _routeModule$links;\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\n  let descriptors = [((_route$css = route.css) === null || _route$css === void 0 ? void 0 : _route$css.map(href => ({\n    rel: \"stylesheet\",\n    href\n  }))) ?? [], ((_routeModule$links = routeModule.links) === null || _routeModule$links === void 0 ? void 0 : _routeModule$links.call(routeModule)) ?? []].flat(1);\n  if (descriptors.length === 0) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n\n  // don't block for non-matching media queries, or for stylesheets that are\n  // already in the DOM (active route revalidations)\n  let matchingLinks = styleLinks.filter(link => (!link.media || window.matchMedia(link.media).matches) && !document.querySelector(`link[rel=\"stylesheet\"][href=\"${link.href}\"]`));\n  await Promise.all(matchingLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise(resolve => {\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      // if a navigation interrupts this prefetch React will update the <head>\n      // and remove the link we put in there manually, so we check if it's still\n      // there before trying to remove it\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction isHtmlLinkDescriptor(object) {\n  if (object == null) {\n    return false;\n  }\n\n  // <link> may not have an href if <link rel=\"preload\"> is used with imageSrcSet + imageSizes\n  // https://github.com/remix-run/remix/issues/184\n  // https://html.spec.whatwg.org/commit-snapshots/cb4f5ff75de5f4cbd7013c4abad02f21c77d4d1c/#attr-link-imagesrcset\n  if (object.href == null) {\n    return object.rel === \"preload\" && typeof object.imageSrcSet === \"string\" && typeof object.imageSizes === \"string\";\n  }\n  return typeof object.rel === \"string\" && typeof object.href === \"string\";\n}\nasync function getKeyedPrefetchLinks(matches, manifest, routeModules) {\n  let links = await Promise.all(matches.map(async match => {\n    let mod = await loadRouteModule(manifest.routes[match.route.id], routeModules);\n    return mod.links ? mod.links() : [];\n  }));\n  return dedupeLinkDescriptors(links.flat(1).filter(isHtmlLinkDescriptor).filter(link => link.rel === \"stylesheet\" || link.rel === \"preload\").map(link => link.rel === \"stylesheet\" ? {\n    ...link,\n    rel: \"prefetch\",\n    as: \"style\"\n  } : {\n    ...link,\n    rel: \"prefetch\"\n  }));\n}\n\n// This is ridiculously identical to transition.ts `filterMatchesToLoad`\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\n  let path = parsePathPatch(page);\n  let isNew = (match, index) => {\n    if (!currentMatches[index]) return true;\n    return match.route.id !== currentMatches[index].route.id;\n  };\n  let matchPathChanged = (match, index) => {\n    var _currentMatches$index;\n    return (\n      // param change, /users/123 -> /users/456\n      currentMatches[index].pathname !== match.pathname ||\n      // splat param changed, which is not present in match.path\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\n      ((_currentMatches$index = currentMatches[index].route.path) === null || _currentMatches$index === void 0 ? void 0 : _currentMatches$index.endsWith(\"*\")) && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\n    );\n  };\n\n  // NOTE: keep this mostly up-to-date w/ the transition data diff, but this\n  // version doesn't care about submissions\n  let newMatches = mode === \"data\" && location.search !== path.search ?\n  // this is really similar to stuff in transition.ts, maybe somebody smarter\n  // than me (or in less of a hurry) can share some of it. You're the best.\n  nextMatches.filter((match, index) => {\n    let manifestRoute = manifest.routes[match.route.id];\n    if (!manifestRoute.hasLoader) {\n      return false;\n    }\n    if (isNew(match, index) || matchPathChanged(match, index)) {\n      return true;\n    }\n    if (match.route.shouldRevalidate) {\n      var _currentMatches$;\n      let routeChoice = match.route.shouldRevalidate({\n        currentUrl: new URL(location.pathname + location.search + location.hash, window.origin),\n        currentParams: ((_currentMatches$ = currentMatches[0]) === null || _currentMatches$ === void 0 ? void 0 : _currentMatches$.params) || {},\n        nextUrl: new URL(page, window.origin),\n        nextParams: match.params,\n        defaultShouldRevalidate: true\n      });\n      if (typeof routeChoice === \"boolean\") {\n        return routeChoice;\n      }\n    }\n    return true;\n  }) : nextMatches.filter((match, index) => {\n    let manifestRoute = manifest.routes[match.route.id];\n    return (mode === \"assets\" || manifestRoute.hasLoader) && (isNew(match, index) || matchPathChanged(match, index));\n  });\n  return newMatches;\n}\nfunction getDataLinkHrefs(page, matches, manifest) {\n  let path = parsePathPatch(page);\n  return dedupeHrefs(matches.filter(match => manifest.routes[match.route.id].hasLoader).map(match => {\n    let {\n      pathname,\n      search\n    } = path;\n    let searchParams = new URLSearchParams(search);\n    searchParams.set(\"_data\", match.route.id);\n    return `${pathname}?${searchParams}`;\n  }));\n}\nfunction getModuleLinkHrefs(matches, manifestPatch) {\n  return dedupeHrefs(matches.map(match => {\n    let route = manifestPatch.routes[match.route.id];\n    let hrefs = [route.module];\n    if (route.imports) {\n      hrefs = hrefs.concat(route.imports);\n    }\n    return hrefs;\n  }).flat(1));\n}\n\n// The `<Script>` will render rel=modulepreload for the current page, we don't\n// need to include them in a page prefetch, this gives us the list to remove\n// while deduping.\nfunction getCurrentPageModulePreloadHrefs(matches, manifest) {\n  return dedupeHrefs(matches.map(match => {\n    let route = manifest.routes[match.route.id];\n    let hrefs = [route.module];\n    if (route.imports) {\n      hrefs = hrefs.concat(route.imports);\n    }\n    return hrefs;\n  }).flat(1));\n}\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\nfunction sortKeys(obj) {\n  let sorted = {};\n  let keys = Object.keys(obj).sort();\n  for (let key of keys) {\n    sorted[key] = obj[key];\n  }\n  return sorted;\n}\nfunction dedupeLinkDescriptors(descriptors, preloads) {\n  let set = new Set();\n  let preloadsSet = new Set(preloads);\n  return descriptors.reduce((deduped, descriptor) => {\n    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\n    if (alreadyModulePreload) {\n      return deduped;\n    }\n    let key = JSON.stringify(sortKeys(descriptor));\n    if (!set.has(key)) {\n      set.add(key);\n      deduped.push({\n        key,\n        link: descriptor\n      });\n    }\n    return deduped;\n  }, []);\n}\n\n// https://github.com/remix-run/history/issues/897\nfunction parsePathPatch(href) {\n  let path = parsePath(href);\n  if (path.search === undefined) path.search = \"\";\n  return path;\n}\n\n// Detect if this browser supports <link rel=\"preload\"> (or has it enabled).\n// Originally added to handle the firefox `network.preload` config:\n//   https://bugzilla.mozilla.org/show_bug.cgi?id=1847811\nlet _isPreloadSupported;\nfunction isPreloadSupported() {\n  if (_isPreloadSupported !== undefined) {\n    return _isPreloadSupported;\n  }\n  let el = document.createElement(\"link\");\n  _isPreloadSupported = el.relList.supports(\"preload\");\n  el = null;\n  return _isPreloadSupported;\n}\n\nexport { getDataLinkHrefs, getKeyedLinksForMatches, getKeyedPrefetchLinks, getModuleLinkHrefs, getNewMatchesForLinks, isPageLinkDescriptor, prefetchStyleLinks };\n","/**\n * @remix-run/react v2.9.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n// This escapeHtml utility is based on https://github.com/zertosh/htmlescape\n// License: https://github.com/zertosh/htmlescape/blob/0527ca7156a524d256101bb310a9f970f63078ad/LICENSE\n\n// We've chosen to inline the utility here to reduce the number of npm dependencies we have,\n// slightly decrease the code size compared the original package and make it esm compatible.\n\nconst ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nconst ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml(html) {\n  return html.replace(ESCAPE_REGEX, match => ESCAPE_LOOKUP[match]);\n}\nfunction createHtml(html) {\n  return {\n    __html: html\n  };\n}\n\nexport { createHtml, escapeHtml };\n","/**\n * @remix-run/react v2.9.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { AbortedDeferredError, UNSAFE_DeferredData } from '@remix-run/router';\n\n/**\n * Data for a route that was returned from a `loader()`.\n */\n\nfunction isCatchResponse(response) {\n  return response.headers.get(\"X-Remix-Catch\") != null;\n}\nfunction isErrorResponse(response) {\n  return response.headers.get(\"X-Remix-Error\") != null;\n}\nfunction isNetworkErrorResponse(response) {\n  // If we reach the Remix server, we can safely identify response types via the\n  // X-Remix-Error/X-Remix-Catch headers.  However, if we never reach the Remix\n  // server, and instead receive a 4xx/5xx from somewhere in between (like\n  // Cloudflare), then we get a false negative in the isErrorResponse check and\n  // we incorrectly assume that the user returns the 4xx/5xx response and\n  // consider it successful.  To alleviate this, we add X-Remix-Response to any\n  // non-Error/non-Catch responses coming back from the server.  If we don't\n  // see this, we can conclude that a 4xx/5xx response never actually reached\n  // the Remix server and we can bubble it up as an error.\n  return isResponse(response) && response.status >= 400 && response.headers.get(\"X-Remix-Error\") == null && response.headers.get(\"X-Remix-Catch\") == null && response.headers.get(\"X-Remix-Response\") == null;\n}\nfunction isRedirectResponse(response) {\n  return response.headers.get(\"X-Remix-Redirect\") != null;\n}\nfunction isDeferredResponse(response) {\n  var _response$headers$get;\n  return !!((_response$headers$get = response.headers.get(\"Content-Type\")) !== null && _response$headers$get !== void 0 && _response$headers$get.match(/text\\/remix-deferred/));\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nasync function fetchData(request, routeId, retry = 0) {\n  let url = new URL(request.url);\n  url.searchParams.set(\"_data\", routeId);\n  if (retry > 0) {\n    // Retry up to 3 times waiting 50, 250, 1250 ms\n    // between retries for a total of 1550 ms before giving up.\n    await new Promise(resolve => setTimeout(resolve, 5 ** retry * 10));\n  }\n  let init = await createRequestInit(request);\n  let revalidation = window.__remixRevalidation;\n  let response = await fetch(url.href, init).catch(error => {\n    if (typeof revalidation === \"number\" && revalidation === window.__remixRevalidation && (error === null || error === void 0 ? void 0 : error.name) === \"TypeError\" && retry < 3) {\n      return fetchData(request, routeId, retry + 1);\n    }\n    throw error;\n  });\n  if (isErrorResponse(response)) {\n    let data = await response.json();\n    let error = new Error(data.message);\n    error.stack = data.stack;\n    return error;\n  }\n  if (isNetworkErrorResponse(response)) {\n    let text = await response.text();\n    let error = new Error(text);\n    error.stack = undefined;\n    return error;\n  }\n  return response;\n}\nasync function createRequestInit(request) {\n  let init = {\n    signal: request.signal\n  };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      init.headers = {\n        \"Content-Type\": contentType\n      };\n      init.body = JSON.stringify(await request.json());\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n      init.headers = {\n        \"Content-Type\": contentType\n      };\n      init.body = await request.text();\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\n      init.body = new URLSearchParams(await request.text());\n    } else {\n      init.body = await request.formData();\n    }\n  }\n  return init;\n}\nconst DEFERRED_VALUE_PLACEHOLDER_PREFIX = \"__deferred_promise:\";\nasync function parseDeferredReadableStream(stream) {\n  if (!stream) {\n    throw new Error(\"parseDeferredReadableStream requires stream argument\");\n  }\n  let deferredData;\n  let deferredResolvers = {};\n  try {\n    let sectionReader = readStreamSections(stream);\n\n    // Read the first section to get the critical data\n    let initialSectionResult = await sectionReader.next();\n    let initialSection = initialSectionResult.value;\n    if (!initialSection) throw new Error(\"no critical data\");\n    let criticalData = JSON.parse(initialSection);\n\n    // Setup deferred data and resolvers for later based on the critical data\n    if (typeof criticalData === \"object\" && criticalData !== null) {\n      for (let [eventKey, value] of Object.entries(criticalData)) {\n        if (typeof value !== \"string\" || !value.startsWith(DEFERRED_VALUE_PLACEHOLDER_PREFIX)) {\n          continue;\n        }\n        deferredData = deferredData || {};\n        deferredData[eventKey] = new Promise((resolve, reject) => {\n          deferredResolvers[eventKey] = {\n            resolve: value => {\n              resolve(value);\n              delete deferredResolvers[eventKey];\n            },\n            reject: error => {\n              reject(error);\n              delete deferredResolvers[eventKey];\n            }\n          };\n        });\n      }\n    }\n\n    // Read the rest of the stream and resolve deferred promises\n    void (async () => {\n      try {\n        for await (let section of sectionReader) {\n          // Determine event type and data\n          let [event, ...sectionDataStrings] = section.split(\":\");\n          let sectionDataString = sectionDataStrings.join(\":\");\n          let data = JSON.parse(sectionDataString);\n          if (event === \"data\") {\n            for (let [key, value] of Object.entries(data)) {\n              if (deferredResolvers[key]) {\n                deferredResolvers[key].resolve(value);\n              }\n            }\n          } else if (event === \"error\") {\n            for (let [key, value] of Object.entries(data)) {\n              let err = new Error(value.message);\n              err.stack = value.stack;\n              if (deferredResolvers[key]) {\n                deferredResolvers[key].reject(err);\n              }\n            }\n          }\n        }\n        for (let [key, resolver] of Object.entries(deferredResolvers)) {\n          resolver.reject(new AbortedDeferredError(`Deferred ${key} will never be resolved`));\n        }\n      } catch (error) {\n        // Reject any existing deferred promises if something blows up\n        for (let resolver of Object.values(deferredResolvers)) {\n          resolver.reject(error);\n        }\n      }\n    })();\n    return new UNSAFE_DeferredData({\n      ...criticalData,\n      ...deferredData\n    });\n  } catch (error) {\n    for (let resolver of Object.values(deferredResolvers)) {\n      resolver.reject(error);\n    }\n    throw error;\n  }\n}\nasync function* readStreamSections(stream) {\n  let reader = stream.getReader();\n  let buffer = [];\n  let sections = [];\n  let closed = false;\n  let encoder = new TextEncoder();\n  let decoder = new TextDecoder();\n  let readStreamSection = async () => {\n    if (sections.length > 0) return sections.shift();\n\n    // Read from the stream until we have at least one complete section to process\n    while (!closed && sections.length === 0) {\n      let chunk = await reader.read();\n      if (chunk.done) {\n        closed = true;\n        break;\n      }\n      // Buffer the raw chunks\n      buffer.push(chunk.value);\n      try {\n        // Attempt to split off a section from the buffer\n        let bufferedString = decoder.decode(mergeArrays(...buffer));\n        let splitSections = bufferedString.split(\"\\n\\n\");\n        if (splitSections.length >= 2) {\n          // We have a complete section, so add it to the sections array\n          sections.push(...splitSections.slice(0, -1));\n          // Remove the section from the buffer and store the rest for future processing\n          buffer = [encoder.encode(splitSections.slice(-1).join(\"\\n\\n\"))];\n        }\n\n        // If we successfully parsed at least one section, break out of reading the stream\n        // to allow upstream processing of the processable sections\n        if (sections.length > 0) {\n          break;\n        }\n      } catch {\n        // If we failed to parse the buffer it was because we failed to decode the stream\n        // because we are missing bytes that we haven't yet received, so continue reading\n        // from the stream until we have a complete section\n        continue;\n      }\n    }\n\n    // If we have a complete section, return it\n    if (sections.length > 0) {\n      return sections.shift();\n    }\n\n    // If we have no complete section, but we have no more chunks to process,\n    // split those sections and clear out the buffer as there is no more data\n    // to process. If this errors, let it bubble up as the stream ended\n    // without valid data\n    if (buffer.length > 0) {\n      let bufferedString = decoder.decode(mergeArrays(...buffer));\n      sections = bufferedString.split(\"\\n\\n\").filter(s => s);\n      buffer = [];\n    }\n\n    // Return any remaining sections that have been processed\n    return sections.shift();\n  };\n  let section = await readStreamSection();\n  while (section) {\n    yield section;\n    section = await readStreamSection();\n  }\n}\nfunction mergeArrays(...arrays) {\n  let out = new Uint8Array(arrays.reduce((total, arr) => total + arr.length, 0));\n  let offset = 0;\n  for (let arr of arrays) {\n    out.set(arr, offset);\n    offset += arr.length;\n  }\n  return out;\n}\n\nexport { createRequestInit, fetchData, isCatchResponse, isDeferredData, isDeferredResponse, isErrorResponse, isNetworkErrorResponse, isRedirectResponse, isResponse, parseDeferredReadableStream };\n","/**\n * @remix-run/react v2.9.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_ErrorResponseImpl, redirect } from '@remix-run/router';\nimport { UNSAFE_SingleFetchRedirectSymbol } from '@remix-run/server-runtime';\nimport { decode } from 'turbo-stream';\nimport { createRequestInit } from './data.js';\nimport { escapeHtml } from './markup.js';\nimport invariant from './invariant.js';\n\n// clientLoader\n\nlet defineClientLoader = clientLoader => clientLoader;\n\n// clientAction\n\nlet defineClientAction = clientAction => clientAction;\n// StreamTransfer recursively renders down chunks of the `serverHandoffStream`\n// into the client-side `streamController`\nfunction StreamTransfer({\n  context,\n  identifier,\n  reader,\n  textDecoder,\n  nonce\n}) {\n  // If the user didn't render the <Scripts> component then we don't have to\n  // bother streaming anything in\n  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {\n    return null;\n  }\n  if (!context.renderMeta.streamCache) {\n    context.renderMeta.streamCache = {};\n  }\n  let {\n    streamCache\n  } = context.renderMeta;\n  let promise = streamCache[identifier];\n  if (!promise) {\n    promise = streamCache[identifier] = reader.read().then(result => {\n      streamCache[identifier].result = {\n        done: result.done,\n        value: textDecoder.decode(result.value, {\n          stream: true\n        })\n      };\n    }).catch(e => {\n      streamCache[identifier].error = e;\n    });\n  }\n  if (promise.error) {\n    throw promise.error;\n  }\n  if (promise.result === undefined) {\n    throw promise;\n  }\n  let {\n    done,\n    value\n  } = promise.result;\n  let scriptTag = value ? /*#__PURE__*/React.createElement(\"script\", {\n    nonce: nonce,\n    dangerouslySetInnerHTML: {\n      __html: `window.__remixContext.streamController.enqueue(${escapeHtml(JSON.stringify(value))});`\n    }\n  }) : null;\n  if (done) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, scriptTag, /*#__PURE__*/React.createElement(\"script\", {\n      nonce: nonce,\n      dangerouslySetInnerHTML: {\n        __html: `window.__remixContext.streamController.close();`\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, scriptTag, /*#__PURE__*/React.createElement(React.Suspense, null, /*#__PURE__*/React.createElement(StreamTransfer, {\n      context: context,\n      identifier: identifier + 1,\n      reader: reader,\n      textDecoder: textDecoder,\n      nonce: nonce\n    })));\n  }\n}\nfunction getSingleFetchDataStrategy(manifest, routeModules) {\n  return async ({\n    request,\n    matches\n  }) => request.method !== \"GET\" ? singleFetchActionStrategy(request, matches) : singleFetchLoaderStrategy(manifest, routeModules, request, matches);\n}\n\n// Actions are simple since they're singular calls to the server\nfunction singleFetchActionStrategy(request, matches) {\n  return Promise.all(matches.map(async m => {\n    let actionStatus;\n    let result = await m.resolve(async handler => {\n      let result = await handler(async () => {\n        let url = singleFetchUrl(request.url);\n        let init = await createRequestInit(request);\n        let {\n          data,\n          status\n        } = await fetchAndDecode(url, init);\n        actionStatus = status;\n        return unwrapSingleFetchResult(data, m.route.id);\n      });\n      return {\n        type: \"data\",\n        result,\n        status: actionStatus\n      };\n    });\n    return {\n      ...result,\n      // Proxy along the action HTTP response status for thrown errors\n      status: actionStatus\n    };\n  }));\n}\n\n// Loaders are trickier since we only want to hit the server once, so we\n// create a singular promise for all server-loader routes to latch onto.\nfunction singleFetchLoaderStrategy(manifest, routeModules, request, matches) {\n  let singleFetchPromise;\n  return Promise.all(matches.map(async m => m.resolve(async handler => {\n    let result;\n    let url = stripIndexParam(singleFetchUrl(request.url));\n\n    // When a route has a client loader, it calls it's singular server loader\n    if (manifest.routes[m.route.id].hasClientLoader) {\n      result = await handler(async () => {\n        url.searchParams.set(\"_routes\", m.route.id);\n        let {\n          data\n        } = await fetchAndDecode(url);\n        return unwrapSingleFetchResults(data, m.route.id);\n      });\n    } else {\n      result = await handler(async () => {\n        // Otherwise we let multiple routes hook onto the same promise\n        if (!singleFetchPromise) {\n          url = addRevalidationParam(manifest, routeModules, matches.map(m => m.route), matches.filter(m => m.shouldLoad).map(m => m.route), url);\n          singleFetchPromise = fetchAndDecode(url).then(({\n            data\n          }) => data);\n        }\n        let results = await singleFetchPromise;\n        return unwrapSingleFetchResults(results, m.route.id);\n      });\n    }\n    return {\n      type: \"data\",\n      result\n    };\n  })));\n}\nfunction stripIndexParam(url) {\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  return url;\n}\n\n// Determine which routes we want to load so we can add a `?_routes` search param\n// for fine-grained revalidation if necessary. There's some nuance to this decision:\n//\n//  - The presence of `shouldRevalidate` and `clientLoader` functions are the only\n//    way to trigger fine-grained single fetch loader calls.  without either of\n//    these on the route matches we just always ask for the full `.data` request.\n//  - If any routes have a `shouldRevalidate` or `clientLoader` then we do a\n//    comparison of the routes we matched and the routes we're aiming to load\n//  - If they don't match up, then we add the `_routes` param or fine-grained\n//    loading\n//  - This is used by the single fetch implementation above and by the\n//    `<PrefetchPageLinksImpl>` component so we can prefetch routes using the\n//    same logic\nfunction addRevalidationParam(manifest, routeModules, matchedRoutes, loadRoutes, url) {\n  let genRouteIds = arr => arr.filter(id => manifest.routes[id].hasLoader).join(\",\");\n\n  // Look at the `routeModules` for `shouldRevalidate` here instead of the manifest\n  // since HDR adds a wrapper for `shouldRevalidate` even if the route didn't have one\n  // initially.\n  // TODO: We probably can get rid of that wrapper once we're strictly on on\n  // single-fetch in v3 and just leverage a needsRevalidation data structure here\n  // to determine what to fetch\n  let needsParam = matchedRoutes.some(r => {\n    var _routeModules$r$id, _manifest$routes$r$id;\n    return ((_routeModules$r$id = routeModules[r.id]) === null || _routeModules$r$id === void 0 ? void 0 : _routeModules$r$id.shouldRevalidate) || ((_manifest$routes$r$id = manifest.routes[r.id]) === null || _manifest$routes$r$id === void 0 ? void 0 : _manifest$routes$r$id.hasClientLoader);\n  });\n  if (!needsParam) {\n    return url;\n  }\n  let matchedIds = genRouteIds(matchedRoutes.map(r => r.id));\n  let loadIds = genRouteIds(loadRoutes.filter(r => {\n    var _manifest$routes$r$id2;\n    return !((_manifest$routes$r$id2 = manifest.routes[r.id]) !== null && _manifest$routes$r$id2 !== void 0 && _manifest$routes$r$id2.hasClientLoader);\n  }).map(r => r.id));\n  if (matchedIds !== loadIds) {\n    url.searchParams.set(\"_routes\", loadIds);\n  }\n  return url;\n}\nfunction singleFetchUrl(reqUrl) {\n  let url = typeof reqUrl === \"string\" ? new URL(reqUrl, window.location.origin) : reqUrl;\n  url.pathname = `${url.pathname === \"/\" ? \"_root\" : url.pathname}.data`;\n  return url;\n}\nasync function fetchAndDecode(url, init) {\n  let res = await fetch(url, init);\n  // Don't do a hard check against the header here.  We'll get `text/x-turbo`\n  // when we have a running server, but if folks want to prerender `.data` files\n  // and serve them from a CDN we should let them come back with whatever\n  // Content-Type their CDN provides and not force them to make sure `.data`\n  // files are served as `text/x-turbo`.  We'll throw if we can't decode anyway.\n  invariant(res.body, \"No response body to decode\");\n  try {\n    let decoded = await decodeViaTurboStream(res.body, window);\n    return {\n      status: res.status,\n      data: decoded.value\n    };\n  } catch (e) {\n    console.error(e);\n    throw new Error(`Unable to decode turbo-stream response from URL: ${url.toString()}`);\n  }\n}\n\n// Note: If you change this function please change the corresponding\n// encodeViaTurboStream function in server-runtime\nfunction decodeViaTurboStream(body, global) {\n  return decode(body, {\n    plugins: [(type, ...rest) => {\n      // Decode Errors back into Error instances using the right type and with\n      // the right (potentially undefined) stacktrace\n      if (type === \"SanitizedError\") {\n        let [name, message, stack] = rest;\n        let Constructor = Error;\n        // @ts-expect-error\n        if (name && name in global && typeof global[name] === \"function\") {\n          // @ts-expect-error\n          Constructor = global[name];\n        }\n        let error = new Constructor(message);\n        error.stack = stack;\n        return {\n          value: error\n        };\n      }\n      if (type === \"ErrorResponse\") {\n        let [data, status, statusText] = rest;\n        return {\n          value: new UNSAFE_ErrorResponseImpl(status, statusText, data)\n        };\n      }\n      if (type === \"SingleFetchRedirect\") {\n        return {\n          value: {\n            [UNSAFE_SingleFetchRedirectSymbol]: rest[0]\n          }\n        };\n      }\n    }]\n  });\n}\nfunction unwrapSingleFetchResults(results, routeId) {\n  let redirect = results[UNSAFE_SingleFetchRedirectSymbol];\n  if (redirect) {\n    return unwrapSingleFetchResult(redirect, routeId);\n  }\n  return results[routeId] !== undefined ? unwrapSingleFetchResult(results[routeId], routeId) : null;\n}\nfunction unwrapSingleFetchResult(result, routeId) {\n  if (\"error\" in result) {\n    throw result.error;\n  } else if (\"redirect\" in result) {\n    let headers = {};\n    if (result.revalidate) {\n      headers[\"X-Remix-Revalidate\"] = \"yes\";\n    }\n    if (result.reload) {\n      headers[\"X-Remix-Reload-Document\"] = \"yes\";\n    }\n    return redirect(result.redirect, {\n      status: result.status,\n      headers\n    });\n  } else if (\"data\" in result) {\n    return result.data;\n  } else {\n    throw new Error(`No response found for routeId \"${routeId}\"`);\n  }\n}\n\nexport { StreamTransfer, addRevalidationParam, decodeViaTurboStream, defineClientAction, defineClientLoader, getSingleFetchDataStrategy, singleFetchUrl };\n","/**\n * @remix-run/react v2.9.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { extends as _extends } from './_virtual/_rollupPluginBabelHelpers.js';\nimport * as React from 'react';\nimport { useHref, NavLink as NavLink$1, Link as Link$1, matchRoutes, useLocation, Await as Await$1, useNavigation, useAsyncError, useMatches as useMatches$1, useLoaderData as useLoaderData$1, useRouteLoaderData as useRouteLoaderData$1, useActionData as useActionData$1, useFetcher as useFetcher$1, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext } from 'react-router-dom';\nimport invariant from './invariant.js';\nimport { getKeyedLinksForMatches, isPageLinkDescriptor, getNewMatchesForLinks, getDataLinkHrefs, getModuleLinkHrefs, getKeyedPrefetchLinks } from './links.js';\nimport { escapeHtml, createHtml } from './markup.js';\nimport { addRevalidationParam, singleFetchUrl } from './single-fetch.js';\n\nfunction useDataRouterContext() {\n  let context = React.useContext(UNSAFE_DataRouterContext);\n  invariant(context, \"You must render this element inside a <DataRouterContext.Provider> element\");\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React.useContext(UNSAFE_DataRouterStateContext);\n  invariant(context, \"You must render this element inside a <DataRouterStateContext.Provider> element\");\n  return context;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// RemixContext\n\nconst RemixContext = /*#__PURE__*/React.createContext(undefined);\nRemixContext.displayName = \"Remix\";\nfunction useRemixContext() {\n  let context = React.useContext(RemixContext);\n  invariant(context, \"You must render this element inside a <Remix> element\");\n  return context;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Public API\n\n/**\n * Defines the prefetching behavior of the link:\n *\n * - \"none\": Never fetched\n * - \"intent\": Fetched when the user focuses or hovers the link\n * - \"render\": Fetched when the link is rendered\n * - \"viewport\": Fetched when the link is in the viewport\n */\n\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\n  let [maybePrefetch, setMaybePrefetch] = React.useState(false);\n  let [shouldPrefetch, setShouldPrefetch] = React.useState(false);\n  let {\n    onFocus,\n    onBlur,\n    onMouseEnter,\n    onMouseLeave,\n    onTouchStart\n  } = theirElementProps;\n  let ref = React.useRef(null);\n  React.useEffect(() => {\n    if (prefetch === \"render\") {\n      setShouldPrefetch(true);\n    }\n    if (prefetch === \"viewport\") {\n      let callback = entries => {\n        entries.forEach(entry => {\n          setShouldPrefetch(entry.isIntersecting);\n        });\n      };\n      let observer = new IntersectionObserver(callback, {\n        threshold: 0.5\n      });\n      if (ref.current) observer.observe(ref.current);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [prefetch]);\n  let setIntent = () => {\n    if (prefetch === \"intent\") {\n      setMaybePrefetch(true);\n    }\n  };\n  let cancelIntent = () => {\n    if (prefetch === \"intent\") {\n      setMaybePrefetch(false);\n      setShouldPrefetch(false);\n    }\n  };\n  React.useEffect(() => {\n    if (maybePrefetch) {\n      let id = setTimeout(() => {\n        setShouldPrefetch(true);\n      }, 100);\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [maybePrefetch]);\n  return [shouldPrefetch, ref, {\n    onFocus: composeEventHandlers(onFocus, setIntent),\n    onBlur: composeEventHandlers(onBlur, cancelIntent),\n    onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\n    onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\n    onTouchStart: composeEventHandlers(onTouchStart, setIntent)\n  }];\n}\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * A special kind of `<Link>` that knows whether it is \"active\".\n *\n * @see https://remix.run/components/nav-link\n */\nlet NavLink = /*#__PURE__*/React.forwardRef(({\n  to,\n  prefetch = \"none\",\n  ...props\n}, forwardedRef) => {\n  let isAbsolute = typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to);\n  let href = useHref(to);\n  let [shouldPrefetch, ref, prefetchHandlers] = usePrefetchBehavior(prefetch, props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavLink$1, _extends({}, props, prefetchHandlers, {\n    ref: mergeRefs(forwardedRef, ref),\n    to: to\n  })), shouldPrefetch && !isAbsolute ? /*#__PURE__*/React.createElement(PrefetchPageLinks, {\n    page: href\n  }) : null);\n});\nNavLink.displayName = \"NavLink\";\n\n/**\n * This component renders an anchor tag and is the primary way the user will\n * navigate around your website.\n *\n * @see https://remix.run/components/link\n */\nlet Link = /*#__PURE__*/React.forwardRef(({\n  to,\n  prefetch = \"none\",\n  ...props\n}, forwardedRef) => {\n  let isAbsolute = typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to);\n  let href = useHref(to);\n  let [shouldPrefetch, ref, prefetchHandlers] = usePrefetchBehavior(prefetch, props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link$1, _extends({}, props, prefetchHandlers, {\n    ref: mergeRefs(forwardedRef, ref),\n    to: to\n  })), shouldPrefetch && !isAbsolute ? /*#__PURE__*/React.createElement(PrefetchPageLinks, {\n    page: href\n  }) : null);\n});\nLink.displayName = \"Link\";\nfunction composeEventHandlers(theirHandler, ourHandler) {\n  return event => {\n    theirHandler && theirHandler(event);\n    if (!event.defaultPrevented) {\n      ourHandler(event);\n    }\n  };\n}\n\n// Return the matches actively being displayed:\n// - In SPA Mode we only SSR/hydrate the root match, and include all matches\n//   after hydration. This lets the router handle initial match loads via lazy().\n// - When an error boundary is rendered, we slice off matches up to the\n//   boundary for <Links>/<Meta>\nfunction getActiveMatches(matches, errors, isSpaMode) {\n  if (isSpaMode && !isHydrated) {\n    return [matches[0]];\n  }\n  if (errors) {\n    let errorIdx = matches.findIndex(m => errors[m.route.id] !== undefined);\n    return matches.slice(0, errorIdx + 1);\n  }\n  return matches;\n}\n\n/**\n * Renders the `<link>` tags for the current routes.\n *\n * @see https://remix.run/components/links\n */\nfunction Links() {\n  let {\n    isSpaMode,\n    manifest,\n    routeModules,\n    criticalCss\n  } = useRemixContext();\n  let {\n    errors,\n    matches: routerMatches\n  } = useDataRouterStateContext();\n  let matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let keyedLinks = React.useMemo(() => getKeyedLinksForMatches(matches, routeModules, manifest), [matches, routeModules, manifest]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, criticalCss ? /*#__PURE__*/React.createElement(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: criticalCss\n    }\n  }) : null, keyedLinks.map(({\n    key,\n    link\n  }) => isPageLinkDescriptor(link) ? /*#__PURE__*/React.createElement(PrefetchPageLinks, _extends({\n    key: key\n  }, link)) : /*#__PURE__*/React.createElement(\"link\", _extends({\n    key: key\n  }, link))));\n}\n\n/**\n * This component renders all the `<link rel=\"prefetch\">` and\n * `<link rel=\"modulepreload\"/>` tags for all the assets (data, modules, css) of\n * a given page.\n *\n * @param props\n * @param props.page\n * @see https://remix.run/components/prefetch-page-links\n */\nfunction PrefetchPageLinks({\n  page,\n  ...dataLinkProps\n}) {\n  let {\n    router\n  } = useDataRouterContext();\n  let matches = React.useMemo(() => matchRoutes(router.routes, page, router.basename), [router.routes, page, router.basename]);\n  if (!matches) {\n    console.warn(`Tried to prefetch ${page} but no routes matched.`);\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(PrefetchPageLinksImpl, _extends({\n    page: page,\n    matches: matches\n  }, dataLinkProps));\n}\nfunction useKeyedPrefetchLinks(matches) {\n  let {\n    manifest,\n    routeModules\n  } = useRemixContext();\n  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = React.useState([]);\n  React.useEffect(() => {\n    let interrupted = false;\n    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(links => {\n      if (!interrupted) {\n        setKeyedPrefetchLinks(links);\n      }\n    });\n    return () => {\n      interrupted = true;\n    };\n  }, [matches, manifest, routeModules]);\n  return keyedPrefetchLinks;\n}\nfunction PrefetchPageLinksImpl({\n  page,\n  matches: nextMatches,\n  ...linkProps\n}) {\n  let location = useLocation();\n  let {\n    future,\n    manifest,\n    routeModules\n  } = useRemixContext();\n  let {\n    matches\n  } = useDataRouterStateContext();\n  let newMatchesForData = React.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, manifest, location, \"data\"), [page, nextMatches, matches, manifest, location]);\n  let newMatchesForAssets = React.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, manifest, location, \"assets\"), [page, nextMatches, matches, manifest, location]);\n  let dataHrefs = React.useMemo(() => getDataLinkHrefs(page, newMatchesForData, manifest), [newMatchesForData, page, manifest]);\n  let moduleHrefs = React.useMemo(() => getModuleLinkHrefs(newMatchesForAssets, manifest), [newMatchesForAssets, manifest]);\n\n  // needs to be a hook with async behavior because we need the modules, not\n  // just the manifest like the other links in here.\n  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);\n  let linksToRender = null;\n  if (!future.unstable_singleFetch) {\n    // Non-single-fetch prefetching\n    linksToRender = dataHrefs.map(href => /*#__PURE__*/React.createElement(\"link\", _extends({\n      key: href,\n      rel: \"prefetch\",\n      as: \"fetch\",\n      href: href\n    }, linkProps)));\n  } else if (newMatchesForData.length > 0) {\n    // Single-fetch with routes that require data\n    let url = addRevalidationParam(manifest, routeModules, nextMatches.map(m => m.route), newMatchesForData.map(m => m.route), singleFetchUrl(page));\n    if (url.searchParams.get(\"_routes\") !== \"\") {\n      linksToRender = /*#__PURE__*/React.createElement(\"link\", _extends({\n        key: url.pathname + url.search,\n        rel: \"prefetch\",\n        as: \"fetch\",\n        href: url.pathname + url.search\n      }, linkProps));\n    }\n  } else ;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, linksToRender, moduleHrefs.map(href => /*#__PURE__*/React.createElement(\"link\", _extends({\n    key: href,\n    rel: \"modulepreload\",\n    href: href\n  }, linkProps))), keyedPrefetchLinks.map(({\n    key,\n    link\n  }) =>\n  /*#__PURE__*/\n  // these don't spread `linkProps` because they are full link descriptors\n  // already with their own props\n  React.createElement(\"link\", _extends({\n    key: key\n  }, link))));\n}\n\n/**\n * Renders HTML tags related to metadata for the current route.\n *\n * @see https://remix.run/components/meta\n */\nfunction Meta() {\n  let {\n    isSpaMode,\n    routeModules\n  } = useRemixContext();\n  let {\n    errors,\n    matches: routerMatches,\n    loaderData\n  } = useDataRouterStateContext();\n  let location = useLocation();\n  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let error = null;\n  if (errors) {\n    error = errors[_matches[_matches.length - 1].route.id];\n  }\n  let meta = [];\n  let leafMeta = null;\n  let matches = [];\n  for (let i = 0; i < _matches.length; i++) {\n    let _match = _matches[i];\n    let routeId = _match.route.id;\n    let data = loaderData[routeId];\n    let params = _match.params;\n    let routeModule = routeModules[routeId];\n    let routeMeta = [];\n    let match = {\n      id: routeId,\n      data,\n      meta: [],\n      params: _match.params,\n      pathname: _match.pathname,\n      handle: _match.route.handle,\n      error\n    };\n    matches[i] = match;\n    if (routeModule !== null && routeModule !== void 0 && routeModule.meta) {\n      routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n        data,\n        params,\n        location,\n        matches,\n        error\n      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;\n    } else if (leafMeta) {\n      // We only assign the route's meta to the nearest leaf if there is no meta\n      // export in the route. The meta function may return a falsy value which\n      // is effectively the same as an empty array.\n      routeMeta = [...leafMeta];\n    }\n    routeMeta = routeMeta || [];\n    if (!Array.isArray(routeMeta)) {\n      throw new Error(\"The route at \" + _match.route.path + \" returns an invalid value. All route meta functions must \" + \"return an array of meta objects.\" + \"\\n\\nTo reference the meta function API, see https://remix.run/route/meta\");\n    }\n    match.meta = routeMeta;\n    matches[i] = match;\n    meta = [...routeMeta];\n    leafMeta = meta;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, meta.flat().map(metaProps => {\n    if (!metaProps) {\n      return null;\n    }\n    if (\"tagName\" in metaProps) {\n      let {\n        tagName,\n        ...rest\n      } = metaProps;\n      if (!isValidMetaTag(tagName)) {\n        console.warn(`A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`);\n        return null;\n      }\n      let Comp = tagName;\n      return /*#__PURE__*/React.createElement(Comp, _extends({\n        key: JSON.stringify(rest)\n      }, rest));\n    }\n    if (\"title\" in metaProps) {\n      return /*#__PURE__*/React.createElement(\"title\", {\n        key: \"title\"\n      }, String(metaProps.title));\n    }\n    if (\"charset\" in metaProps) {\n      metaProps.charSet ??= metaProps.charset;\n      delete metaProps.charset;\n    }\n    if (\"charSet\" in metaProps && metaProps.charSet != null) {\n      return typeof metaProps.charSet === \"string\" ? /*#__PURE__*/React.createElement(\"meta\", {\n        key: \"charSet\",\n        charSet: metaProps.charSet\n      }) : null;\n    }\n    if (\"script:ld+json\" in metaProps) {\n      try {\n        let json = JSON.stringify(metaProps[\"script:ld+json\"]);\n        return /*#__PURE__*/React.createElement(\"script\", {\n          key: `script:ld+json:${json}`,\n          type: \"application/ld+json\",\n          dangerouslySetInnerHTML: {\n            __html: json\n          }\n        });\n      } catch (err) {\n        return null;\n      }\n    }\n    return /*#__PURE__*/React.createElement(\"meta\", _extends({\n      key: JSON.stringify(metaProps)\n    }, metaProps));\n  }));\n}\nfunction isValidMetaTag(tagName) {\n  return typeof tagName === \"string\" && /^(meta|link)$/.test(tagName);\n}\nfunction Await(props) {\n  return /*#__PURE__*/React.createElement(Await$1, props);\n}\n\n/**\n * Tracks whether Remix has finished hydrating or not, so scripts can be skipped\n * during client-side updates.\n */\nlet isHydrated = false;\n/**\n * Renders the `<script>` tags needed for the initial render. Bundles for\n * additional routes are loaded later as needed.\n *\n * @param props Additional properties to add to each script tag that is rendered.\n * In addition to scripts, \\<link rel=\"modulepreload\"> tags receive the crossOrigin\n * property if provided.\n *\n * @see https://remix.run/components/scripts\n */\nfunction Scripts(props) {\n  let {\n    manifest,\n    serverHandoffString,\n    abortDelay,\n    serializeError,\n    isSpaMode,\n    future,\n    renderMeta\n  } = useRemixContext();\n  let {\n    router,\n    static: isStatic,\n    staticContext\n  } = useDataRouterContext();\n  let {\n    matches: routerMatches\n  } = useDataRouterStateContext();\n  let navigation = useNavigation();\n\n  // Let <RemixServer> know that we hydrated and we should render the single\n  // fetch streaming scripts\n  if (renderMeta) {\n    renderMeta.didRenderScripts = true;\n  }\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\n  React.useEffect(() => {\n    isHydrated = true;\n  }, []);\n  let serializePreResolvedErrorImp = (key, error) => {\n    let toSerialize;\n    if (serializeError && error instanceof Error) {\n      toSerialize = serializeError(error);\n    } else {\n      toSerialize = error;\n    }\n    return `${JSON.stringify(key)}:__remixContext.p(!1, ${escapeHtml(JSON.stringify(toSerialize))})`;\n  };\n  let serializePreresolvedDataImp = (routeId, key, data) => {\n    let serializedData;\n    try {\n      serializedData = JSON.stringify(data);\n    } catch (error) {\n      return serializePreResolvedErrorImp(key, error);\n    }\n    return `${JSON.stringify(key)}:__remixContext.p(${escapeHtml(serializedData)})`;\n  };\n  let serializeErrorImp = (routeId, key, error) => {\n    let toSerialize;\n    if (serializeError && error instanceof Error) {\n      toSerialize = serializeError(error);\n    } else {\n      toSerialize = error;\n    }\n    return `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(key)}, !1, ${escapeHtml(JSON.stringify(toSerialize))})`;\n  };\n  let serializeDataImp = (routeId, key, data) => {\n    let serializedData;\n    try {\n      serializedData = JSON.stringify(data);\n    } catch (error) {\n      return serializeErrorImp(routeId, key, error);\n    }\n    return `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(key)}, ${escapeHtml(serializedData)})`;\n  };\n  let deferredScripts = [];\n  let initialScripts = React.useMemo(() => {\n    var _manifest$hmr;\n    let streamScript = future.unstable_singleFetch ?\n    // prettier-ignore\n    \"window.__remixContext.stream = new ReadableStream({\" + \"start(controller){\" + \"window.__remixContext.streamController = controller;\" + \"}\" + \"}).pipeThrough(new TextEncoderStream());\" : \"\";\n    let contextScript = staticContext ? `window.__remixContext = ${serverHandoffString};${streamScript}` : \" \";\n\n    // When single fetch is enabled, deferred is handled by turbo-stream\n    let activeDeferreds = future.unstable_singleFetch ? undefined : staticContext === null || staticContext === void 0 ? void 0 : staticContext.activeDeferreds;\n\n    // This sets up the __remixContext with utility functions used by the\n    // deferred scripts.\n    // - __remixContext.p is a function that takes a resolved value or error and returns a promise.\n    //   This is used for transmitting pre-resolved promises from the server to the client.\n    // - __remixContext.n is a function that takes a routeID and key to returns a promise for later\n    //   resolution by the subsequently streamed chunks.\n    // - __remixContext.r is a function that takes a routeID, key and value or error and resolves\n    //   the promise created by __remixContext.n.\n    // - __remixContext.t is a map or routeId to keys to an object containing `e` and `r` methods\n    //   to resolve or reject the promise created by __remixContext.n.\n    // - __remixContext.a is the active number of deferred scripts that should be rendered to match\n    //   the SSR tree for hydration on the client.\n    contextScript += !activeDeferreds ? \"\" : [\"__remixContext.p = function(v,e,p,x) {\", \"  if (typeof e !== 'undefined') {\", process.env.NODE_ENV === \"development\" ? \"    x=new Error(e.message);\\n    x.stack=e.stack;\" : '    x=new Error(\"Unexpected Server Error\");\\n    x.stack=undefined;', \"    p=Promise.reject(x);\", \"  } else {\", \"    p=Promise.resolve(v);\", \"  }\", \"  return p;\", \"};\", \"__remixContext.n = function(i,k) {\", \"  __remixContext.t = __remixContext.t || {};\", \"  __remixContext.t[i] = __remixContext.t[i] || {};\", \"  let p = new Promise((r, e) => {__remixContext.t[i][k] = {r:(v)=>{r(v);},e:(v)=>{e(v);}};});\", typeof abortDelay === \"number\" ? `setTimeout(() => {if(typeof p._error !== \"undefined\" || typeof p._data !== \"undefined\"){return;} __remixContext.t[i][k].e(new Error(\"Server timeout.\"))}, ${abortDelay});` : \"\", \"  return p;\", \"};\", \"__remixContext.r = function(i,k,v,e,p,x) {\", \"  p = __remixContext.t[i][k];\", \"  if (typeof e !== 'undefined') {\", process.env.NODE_ENV === \"development\" ? \"    x=new Error(e.message);\\n    x.stack=e.stack;\" : '    x=new Error(\"Unexpected Server Error\");\\n    x.stack=undefined;', \"    p.e(x);\", \"  } else {\", \"    p.r(v);\", \"  }\", \"};\"].join(\"\\n\") + Object.entries(activeDeferreds).map(([routeId, deferredData]) => {\n      let pendingKeys = new Set(deferredData.pendingKeys);\n      let promiseKeyValues = deferredData.deferredKeys.map(key => {\n        if (pendingKeys.has(key)) {\n          deferredScripts.push( /*#__PURE__*/React.createElement(DeferredHydrationScript, {\n            key: `${routeId} | ${key}`,\n            deferredData: deferredData,\n            routeId: routeId,\n            dataKey: key,\n            scriptProps: props,\n            serializeData: serializeDataImp,\n            serializeError: serializeErrorImp\n          }));\n          return `${JSON.stringify(key)}:__remixContext.n(${JSON.stringify(routeId)}, ${JSON.stringify(key)})`;\n        } else {\n          let trackedPromise = deferredData.data[key];\n          if (typeof trackedPromise._error !== \"undefined\") {\n            return serializePreResolvedErrorImp(key, trackedPromise._error);\n          } else {\n            return serializePreresolvedDataImp(routeId, key, trackedPromise._data);\n          }\n        }\n      }).join(\",\\n\");\n      return `Object.assign(__remixContext.state.loaderData[${JSON.stringify(routeId)}], {${promiseKeyValues}});`;\n    }).join(\"\\n\") + (deferredScripts.length > 0 ? `__remixContext.a=${deferredScripts.length};` : \"\");\n    let routeModulesScript = !isStatic ? \" \" : `${(_manifest$hmr = manifest.hmr) !== null && _manifest$hmr !== void 0 && _manifest$hmr.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}import ${JSON.stringify(manifest.url)};\n${matches.map((match, index) => `import * as route${index} from ${JSON.stringify(manifest.routes[match.route.id].module)};`).join(\"\\n\")}\nwindow.__remixRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"script\", _extends({}, props, {\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: createHtml(contextScript),\n      type: undefined\n    })), /*#__PURE__*/React.createElement(\"script\", _extends({}, props, {\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: createHtml(routeModulesScript),\n      type: \"module\",\n      async: true\n    })));\n    // disabled deps array because we are purposefully only rendering this once\n    // for hydration, after that we want to just continue rendering the initial\n    // scripts as they were when the page first loaded\n    // eslint-disable-next-line\n  }, []);\n  if (!isStatic && typeof __remixContext === \"object\" && __remixContext.a) {\n    for (let i = 0; i < __remixContext.a; i++) {\n      deferredScripts.push( /*#__PURE__*/React.createElement(DeferredHydrationScript, {\n        key: i,\n        scriptProps: props,\n        serializeData: serializeDataImp,\n        serializeError: serializeErrorImp\n      }));\n    }\n  }\n\n  // avoid waterfall when importing the next route module\n  let nextMatches = React.useMemo(() => {\n    if (navigation.location) {\n      // FIXME: can probably use transitionManager `nextMatches`\n      let matches = matchRoutes(router.routes, navigation.location, router.basename);\n      invariant(matches, `No routes match path \"${navigation.location.pathname}\"`);\n      return matches;\n    }\n    return [];\n  }, [navigation.location, router.routes, router.basename]);\n  let routePreloads = matches.concat(nextMatches).map(match => {\n    let route = manifest.routes[match.route.id];\n    return (route.imports || []).concat([route.module]);\n  }).flat(1);\n  let preloads = isHydrated ? [] : manifest.entry.imports.concat(routePreloads);\n  return isHydrated ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"link\", {\n    rel: \"modulepreload\",\n    href: manifest.url,\n    crossOrigin: props.crossOrigin\n  }), /*#__PURE__*/React.createElement(\"link\", {\n    rel: \"modulepreload\",\n    href: manifest.entry.module,\n    crossOrigin: props.crossOrigin\n  }), dedupe(preloads).map(path => /*#__PURE__*/React.createElement(\"link\", {\n    key: path,\n    rel: \"modulepreload\",\n    href: path,\n    crossOrigin: props.crossOrigin\n  })), initialScripts, deferredScripts);\n}\nfunction DeferredHydrationScript({\n  dataKey,\n  deferredData,\n  routeId,\n  scriptProps,\n  serializeData,\n  serializeError\n}) {\n  if (typeof document === \"undefined\" && deferredData && dataKey && routeId) {\n    invariant(deferredData.pendingKeys.includes(dataKey), `Deferred data for route ${routeId} with key ${dataKey} was not pending but tried to render a script for it.`);\n  }\n  return /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback:\n    // This makes absolutely no sense. The server renders null as a fallback,\n    // but when hydrating, we need to render a script tag to avoid a hydration issue.\n    // To reproduce a hydration mismatch, just render null as a fallback.\n    typeof document === \"undefined\" && deferredData && dataKey && routeId ? null : /*#__PURE__*/React.createElement(\"script\", _extends({}, scriptProps, {\n      async: true,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: \" \"\n      }\n    }))\n  }, typeof document === \"undefined\" && deferredData && dataKey && routeId ? /*#__PURE__*/React.createElement(Await, {\n    resolve: deferredData.data[dataKey],\n    errorElement: /*#__PURE__*/React.createElement(ErrorDeferredHydrationScript, {\n      dataKey: dataKey,\n      routeId: routeId,\n      scriptProps: scriptProps,\n      serializeError: serializeError\n    }),\n    children: data => {\n      return /*#__PURE__*/React.createElement(\"script\", _extends({}, scriptProps, {\n        async: true,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: {\n          __html: serializeData(routeId, dataKey, data)\n        }\n      }));\n    }\n  }) : /*#__PURE__*/React.createElement(\"script\", _extends({}, scriptProps, {\n    async: true,\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: \" \"\n    }\n  })));\n}\nfunction ErrorDeferredHydrationScript({\n  dataKey,\n  routeId,\n  scriptProps,\n  serializeError\n}) {\n  let error = useAsyncError();\n  return /*#__PURE__*/React.createElement(\"script\", _extends({}, scriptProps, {\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: serializeError(routeId, dataKey, error)\n    }\n  }));\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n *\n * @see https://remix.run/hooks/use-matches\n */\nfunction useMatches() {\n  return useMatches$1();\n}\n\n/**\n * Returns the JSON parsed data from the current route's `loader`.\n *\n * @see https://remix.run/hooks/use-loader-data\n */\nfunction useLoaderData() {\n  return useLoaderData$1();\n}\n\n/**\n * Returns the loaderData for the given routeId.\n *\n * @see https://remix.run/hooks/use-route-loader-data\n */\nfunction useRouteLoaderData(routeId) {\n  return useRouteLoaderData$1(routeId);\n}\n\n/**\n * Returns the JSON parsed data from the current route's `action`.\n *\n * @see https://remix.run/hooks/use-action-data\n */\nfunction useActionData() {\n  return useActionData$1();\n}\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n *\n * @see https://remix.run/hooks/use-fetcher\n */\nfunction useFetcher(opts = {}) {\n  return useFetcher$1(opts);\n}\n\n/**\n * This component connects your app to the Remix asset server and\n * automatically reloads the page when files change in development.\n * In production, it renders null, so you can safely render it always in your root route.\n *\n * @see https://remix.run/docs/components/live-reload\n */\nconst LiveReload =\n// Dead Code Elimination magic for production builds.\n// This way devs don't have to worry about doing the NODE_ENV check themselves.\nprocess.env.NODE_ENV !== \"development\" ? () => null : function LiveReload({\n  origin,\n  port,\n  timeoutMs = 1000,\n  nonce = undefined\n}) {\n  // @ts-expect-error\n  let isViteClient = import.meta && import.meta.env !== undefined;\n  if (isViteClient) {\n    console.warn([\"`<LiveReload />` is obsolete when using Vite and can conflict with Vite's built-in HMR runtime.\", \"\", \"Remove `<LiveReload />` from your code and instead only use `<Scripts />`.\", \"Then refresh the page to remove lingering scripts from `<LiveReload />`.\"].join(\"\\n\"));\n    return null;\n  }\n  origin ??= process.env.REMIX_DEV_ORIGIN;\n  let js = String.raw;\n  return /*#__PURE__*/React.createElement(\"script\", {\n    nonce: nonce,\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: js`\n                function remixLiveReloadConnect(config) {\n                  let LIVE_RELOAD_ORIGIN = ${JSON.stringify(origin)};\n                  let protocol =\n                    LIVE_RELOAD_ORIGIN ? new URL(LIVE_RELOAD_ORIGIN).protocol.replace(/^http/, \"ws\") :\n                    location.protocol === \"https:\" ? \"wss:\" : \"ws:\"; // remove in v2?\n                  let hostname = LIVE_RELOAD_ORIGIN ? new URL(LIVE_RELOAD_ORIGIN).hostname : location.hostname;\n                  let url = new URL(protocol + \"//\" + hostname + \"/socket\");\n\n                  url.port =\n                    ${port} ||\n                    (LIVE_RELOAD_ORIGIN ? new URL(LIVE_RELOAD_ORIGIN).port : 8002);\n\n                  let ws = new WebSocket(url.href);\n                  ws.onmessage = async (message) => {\n                    let event = JSON.parse(message.data);\n                    if (event.type === \"LOG\") {\n                      console.log(event.message);\n                    }\n                    if (event.type === \"RELOAD\") {\n                      console.log(\"💿 Reloading window ...\");\n                      window.location.reload();\n                    }\n                    if (event.type === \"HMR\") {\n                      if (!window.__hmr__ || !window.__hmr__.contexts) {\n                        console.log(\"💿 [HMR] No HMR context, reloading window ...\");\n                        window.location.reload();\n                        return;\n                      }\n                      if (!event.updates || !event.updates.length) return;\n                      let updateAccepted = false;\n                      let needsRevalidation = new Set();\n                      for (let update of event.updates) {\n                        console.log(\"[HMR] \" + update.reason + \" [\" + update.id +\"]\")\n                        if (update.revalidate) {\n                          needsRevalidation.add(update.routeId);\n                          console.log(\"[HMR] Revalidating [\" + update.routeId + \"]\");\n                        }\n                        let imported = await import(update.url +  '?t=' + event.assetsManifest.hmr.timestamp);\n                        if (window.__hmr__.contexts[update.id]) {\n                          let accepted = window.__hmr__.contexts[update.id].emit(\n                            imported\n                          );\n                          if (accepted) {\n                            console.log(\"[HMR] Update accepted by\", update.id);\n                            updateAccepted = true;\n                          }\n                        }\n                      }\n                      if (event.assetsManifest && window.__hmr__.contexts[\"remix:manifest\"]) {\n                        let accepted = window.__hmr__.contexts[\"remix:manifest\"].emit(\n                          { needsRevalidation, assetsManifest: event.assetsManifest }\n                        );\n                        if (accepted) {\n                          console.log(\"[HMR] Update accepted by\", \"remix:manifest\");\n                          updateAccepted = true;\n                        }\n                      }\n                      if (!updateAccepted) {\n                        console.log(\"[HMR] Update rejected, reloading...\");\n                        window.location.reload();\n                      }\n                    }\n                  };\n                  ws.onopen = () => {\n                    if (config && typeof config.onOpen === \"function\") {\n                      config.onOpen();\n                    }\n                  };\n                  ws.onclose = (event) => {\n                    if (event.code === 1006) {\n                      console.log(\"Remix dev asset server web socket closed. Reconnecting...\");\n                      setTimeout(\n                        () =>\n                          remixLiveReloadConnect({\n                            onOpen: () => window.location.reload(),\n                          }),\n                      ${String(timeoutMs)}\n                      );\n                    }\n                  };\n                  ws.onerror = (error) => {\n                    console.log(\"Remix dev asset server web socket error:\");\n                    console.error(error);\n                  };\n                }\n                remixLiveReloadConnect();\n              `\n    }\n  });\n};\nfunction mergeRefs(...refs) {\n  return value => {\n    refs.forEach(ref => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\nexport { Await, Link, Links, LiveReload, Meta, NavLink, PrefetchPageLinks, RemixContext, Scripts, composeEventHandlers, useActionData, useFetcher, useLoaderData, useMatches, useRemixContext, useRouteLoaderData };\n"],"names":["HOLE","NAN","NEGATIVE_INFINITY","NEGATIVE_ZERO","NULL","POSITIVE_INFINITY","UNDEFINED","TYPE_BIGINT","TYPE_DATE","TYPE_ERROR","TYPE_MAP","TYPE_NULL_OBJECT","TYPE_PROMISE","TYPE_REGEXP","TYPE_SET","TYPE_SYMBOL","TYPE_URL","Deferred","__publicField","resolve","reject","createLineSplittingTransform","decoder","leftover","chunk","controller","str","parts","part","globalObj","unflatten","parsed","hydrated","values","hydrate","startIndex","index","deferred","plugins","value","type","b","c","set","i","map","obj","key","d","message","errorType","error","args","plugin","result","array","n","object","decode","readable","options","done","reader","decoded","decodeInitial","donePromise","decodeDeferred","reason","read","line","colonIndex","deferredId","lineData","jsonLine","SingleFetchRedirectSymbol","_extends","target","source","invariant","loadRouteModule","route","routeModulesCache","routeModule","getKeyedLinksForMatches","matches","routeModules","manifest","descriptors","match","_module$links","module","href","preloads","getCurrentPageModulePreloadHrefs","dedupeLinkDescriptors","prefetchStyleLinks","_route$css","_routeModule$links","isPreloadSupported","styleLinks","descriptor","isPageLinkDescriptor","matchingLinks","link","prefetchStyleLink","removeLink","isHtmlLinkDescriptor","getKeyedPrefetchLinks","links","mod","getNewMatchesForLinks","page","nextMatches","currentMatches","location","mode","path","parsePathPatch","isNew","matchPathChanged","_currentMatches$index","_currentMatches$","routeChoice","manifestRoute","getDataLinkHrefs","dedupeHrefs","pathname","search","searchParams","getModuleLinkHrefs","manifestPatch","hrefs","sortKeys","sorted","keys","preloadsSet","deduped","parsePath","_isPreloadSupported","el","ESCAPE_LOOKUP","ESCAPE_REGEX","escapeHtml","html","createHtml","isCatchResponse","response","isErrorResponse","isNetworkErrorResponse","isResponse","isRedirectResponse","isDeferredResponse","_response$headers$get","isDeferredData","fetchData","request","routeId","retry","url","init","createRequestInit","revalidation","data","text","contentType","DEFERRED_VALUE_PLACEHOLDER_PREFIX","parseDeferredReadableStream","stream","deferredData","deferredResolvers","sectionReader","readStreamSections","initialSection","criticalData","eventKey","section","event","sectionDataStrings","sectionDataString","err","resolver","AbortedDeferredError","UNSAFE_DeferredData","buffer","sections","closed","encoder","readStreamSection","splitSections","mergeArrays","s","arrays","out","total","arr","offset","getSingleFetchDataStrategy","singleFetchActionStrategy","singleFetchLoaderStrategy","m","actionStatus","handler","singleFetchUrl","status","fetchAndDecode","unwrapSingleFetchResult","singleFetchPromise","stripIndexParam","unwrapSingleFetchResults","addRevalidationParam","results","indexValues","indexValuesToKeep","indexValue","toKeep","matchedRoutes","loadRoutes","genRouteIds","id","r","_routeModules$r$id","_manifest$routes$r$id","matchedIds","loadIds","_manifest$routes$r$id2","reqUrl","res","decodeViaTurboStream","e","body","global","rest","name","stack","Constructor","statusText","UNSAFE_ErrorResponseImpl","UNSAFE_SingleFetchRedirectSymbol","redirect","headers","useDataRouterContext","context","React.useContext","UNSAFE_DataRouterContext","useDataRouterStateContext","UNSAFE_DataRouterStateContext","RemixContext","React.createContext","useRemixContext","usePrefetchBehavior","prefetch","theirElementProps","maybePrefetch","setMaybePrefetch","React.useState","shouldPrefetch","setShouldPrefetch","onFocus","onBlur","onMouseEnter","onMouseLeave","onTouchStart","ref","React.useRef","React.useEffect","callback","entries","entry","observer","setIntent","cancelIntent","composeEventHandlers","ABSOLUTE_URL_REGEX","NavLink","React.forwardRef","to","props","forwardedRef","isAbsolute","useHref","prefetchHandlers","React.createElement","React.Fragment","NavLink$1","mergeRefs","PrefetchPageLinks","Link","Link$1","theirHandler","ourHandler","getActiveMatches","errors","isSpaMode","isHydrated","errorIdx","Links","criticalCss","routerMatches","keyedLinks","React.useMemo","dataLinkProps","router","matchRoutes","PrefetchPageLinksImpl","useKeyedPrefetchLinks","keyedPrefetchLinks","setKeyedPrefetchLinks","interrupted","linkProps","useLocation","future","newMatchesForData","newMatchesForAssets","dataHrefs","moduleHrefs","linksToRender","Meta","loaderData","_matches","meta","leafMeta","_match","params","routeMeta","metaProps","tagName","isValidMetaTag","Comp","json","Await","Await$1","Scripts","serverHandoffString","abortDelay","serializeError","renderMeta","isStatic","staticContext","navigation","useNavigation","serializePreResolvedErrorImp","toSerialize","serializePreresolvedDataImp","serializedData","serializeErrorImp","serializeDataImp","deferredScripts","initialScripts","_manifest$hmr","streamScript","contextScript","activeDeferreds","pendingKeys","promiseKeyValues","DeferredHydrationScript","trackedPromise","routeModulesScript","routePreloads","dedupe","dataKey","scriptProps","serializeData","React.Suspense","ErrorDeferredHydrationScript","useAsyncError","useMatches","useMatches$1","useLoaderData","useLoaderData$1","useRouteLoaderData","useRouteLoaderData$1","useActionData","useActionData$1","useFetcher","opts","useFetcher$1","refs"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}