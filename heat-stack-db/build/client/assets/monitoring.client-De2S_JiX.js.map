{"version":3,"file":"monitoring.client-De2S_JiX.js","sources":["../../../node_modules/@sentry/utils/esm/isBrowser.js","../../../node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js","../../../node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js","../../../node_modules/@sentry-internal/replay/esm/index.js","../../../node_modules/@sentry/browser/esm/profiling/utils.js","../../../node_modules/@sentry/browser/esm/profiling/startProfileForSpan.js","../../../node_modules/@sentry/browser/esm/profiling/integration.js","../../../node_modules/@sentry/react/esm/sdk.js","../../../node_modules/@sentry/remix/esm/client/browserTracingIntegration.js","../../../node_modules/@sentry/remix/esm/index.client.js","../../../app/utils/monitoring.client.tsx"],"sourcesContent":["import { isNodeEnv } from './node.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * Returns true if we are in the browser.\n */\nfunction isBrowser() {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!isNodeEnv() || isElectronNodeRenderer());\n}\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer() {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    (GLOBAL_OBJ ).process !== undefined && ((GLOBAL_OBJ ).process ).type === 'renderer'\n  );\n}\n\nexport { isBrowser };\n//# sourceMappingURL=isBrowser.js.map\n","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\nexport { _nullishCoalesce };\n//# sourceMappingURL=_nullishCoalesce.js.map\n","/**\n * Checks whether given url points to Sentry server\n *\n * @param url url to verify\n */\nfunction isSentryRequestUrl(url, client) {\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url, tunnel) {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url, dsn) {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str) {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\nexport { isSentryRequestUrl };\n//# sourceMappingURL=isSentryRequestUrl.js.map\n","import { _nullishCoalesce, _optionalChain } from '@sentry/utils';\nimport { addBreadcrumb, getClient, isSentryRequestUrl, addEventProcessor, prepareEvent, getIsolationScope, getCurrentScope, setContext, captureException, getActiveSpan, getRootSpan, spanToJSON, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, parseSampleRate } from '@sentry/core';\nimport { GLOBAL_OBJ, normalize, fill, htmlTreeAsString, browserPerformanceTimeOrigin, logger, uuid4, dropUndefinedKeys, stringMatchesSomePattern, createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader, resolvedSyncPromise, updateRateLimits, isRateLimited, isBrowser, consoleSandbox } from '@sentry/utils';\nimport { setTimeout as setTimeout$2, addPerformanceInstrumentationHandler, addLcpInstrumentationHandler, SENTRY_XHR_DATA_KEY, addClickKeypressInstrumentationHandler, addHistoryInstrumentationHandler } from '@sentry-internal/browser-utils';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nconst WINDOW = GLOBAL_OBJ ;\n\nconst REPLAY_SESSION_KEY = 'sentryReplaySession';\nconst REPLAY_EVENT_NAME = 'replay_event';\nconst UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nconst SESSION_IDLE_PAUSE_DURATION = 300000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nconst SESSION_IDLE_EXPIRE_DURATION = 900000; // 15 minutes in ms\n\n/** Default flush delays */\nconst DEFAULT_FLUSH_MIN_DELAY = 5000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nconst DEFAULT_FLUSH_MAX_DELAY = 5500;\n\n/* How long to wait for error checkouts */\nconst BUFFER_CHECKOUT_TIME = 60000;\n\nconst RETRY_BASE_INTERVAL = 5000;\nconst RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nconst NETWORK_BODY_MAX_SIZE = 150000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nconst CONSOLE_ARG_MAX_SIZE = 5000;\n\n/* Min. time to wait before we consider something a slow click. */\nconst SLOW_CLICK_THRESHOLD = 3000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nconst SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nconst REPLAY_MAX_EVENT_BUFFER_SIZE = 20000000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nconst MIN_REPLAY_DURATION = 4999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nconst MIN_REPLAY_DURATION_LIMIT = 15000;\n\n/** The max. length of a replay. */\nconst MAX_REPLAY_DURATION = 3600000; // 60 minutes in ms;\n\nfunction _nullishCoalesce$1(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }function _optionalChain$5(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var NodeType$1;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType$1 || (NodeType$1 = {}));\n\nfunction isElement$1(n) {\n    return n.nodeType === n.ELEMENT_NODE;\n}\nfunction isShadowRoot(n) {\n    const host = _optionalChain$5([n, 'optionalAccess', _ => _.host]);\n    return Boolean(_optionalChain$5([host, 'optionalAccess', _2 => _2.shadowRoot]) === n);\n}\nfunction isNativeShadowDom(shadowRoot) {\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\n}\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\n    if (cssText.includes(' background-clip: text;') &&\n        !cssText.includes(' -webkit-background-clip: text;')) {\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\n    }\n    return cssText;\n}\nfunction escapeImportStatement(rule) {\n    const { cssText } = rule;\n    if (cssText.split('\"').length < 3)\n        return cssText;\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\n    if (rule.layerName === '') {\n        statement.push(`layer`);\n    }\n    else if (rule.layerName) {\n        statement.push(`layer(${rule.layerName})`);\n    }\n    if (rule.supportsText) {\n        statement.push(`supports(${rule.supportsText})`);\n    }\n    if (rule.media.length) {\n        statement.push(rule.media.mediaText);\n    }\n    return statement.join(' ') + ';';\n}\nfunction stringifyStylesheet(s) {\n    try {\n        const rules = s.rules || s.cssRules;\n        return rules\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\n            : null;\n    }\n    catch (error) {\n        return null;\n    }\n}\nfunction stringifyRule(rule) {\n    let importStringified;\n    if (isCSSImportRule(rule)) {\n        try {\n            importStringified =\n                stringifyStylesheet(rule.styleSheet) ||\n                    escapeImportStatement(rule);\n        }\n        catch (error) {\n        }\n    }\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\n        return fixSafariColons(rule.cssText);\n    }\n    return importStringified || rule.cssText;\n}\nfunction fixSafariColons(cssStringified) {\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\n    return cssStringified.replace(regex, '$1\\\\$2');\n}\nfunction isCSSImportRule(rule) {\n    return 'styleSheet' in rule;\n}\nfunction isCSSStyleRule(rule) {\n    return 'selectorText' in rule;\n}\nclass Mirror {\n    constructor() {\n        this.idNodeMap = new Map();\n        this.nodeMetaMap = new WeakMap();\n    }\n    getId(n) {\n        if (!n)\n            return -1;\n        const id = _optionalChain$5([this, 'access', _3 => _3.getMeta, 'call', _4 => _4(n), 'optionalAccess', _5 => _5.id]);\n        return _nullishCoalesce$1(id, () => ( -1));\n    }\n    getNode(id) {\n        return this.idNodeMap.get(id) || null;\n    }\n    getIds() {\n        return Array.from(this.idNodeMap.keys());\n    }\n    getMeta(n) {\n        return this.nodeMetaMap.get(n) || null;\n    }\n    removeNodeFromMap(n) {\n        const id = this.getId(n);\n        this.idNodeMap.delete(id);\n        if (n.childNodes) {\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\n        }\n    }\n    has(id) {\n        return this.idNodeMap.has(id);\n    }\n    hasNode(node) {\n        return this.nodeMetaMap.has(node);\n    }\n    add(n, meta) {\n        const id = meta.id;\n        this.idNodeMap.set(id, n);\n        this.nodeMetaMap.set(n, meta);\n    }\n    replace(id, n) {\n        const oldNode = this.getNode(id);\n        if (oldNode) {\n            const meta = this.nodeMetaMap.get(oldNode);\n            if (meta)\n                this.nodeMetaMap.set(n, meta);\n        }\n        this.idNodeMap.set(id, n);\n    }\n    reset() {\n        this.idNodeMap = new Map();\n        this.nodeMetaMap = new WeakMap();\n    }\n}\nfunction createMirror() {\n    return new Mirror();\n}\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\n    if (tagName === 'OPTION') {\n        tagName = 'SELECT';\n    }\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\n        (type && maskInputOptions[type]) ||\n        type === 'password' ||\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\n}\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\n    let text = value || '';\n    if (!isMasked) {\n        return text;\n    }\n    if (maskInputFn) {\n        text = maskInputFn(text, element);\n    }\n    return '*'.repeat(text.length);\n}\nfunction toLowerCase(str) {\n    return str.toLowerCase();\n}\nfunction toUpperCase(str) {\n    return str.toUpperCase();\n}\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\nfunction is2DCanvasBlank(canvas) {\n    const ctx = canvas.getContext('2d');\n    if (!ctx)\n        return true;\n    const chunkSize = 50;\n    for (let x = 0; x < canvas.width; x += chunkSize) {\n        for (let y = 0; y < canvas.height; y += chunkSize) {\n            const getImageData = ctx.getImageData;\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\n                : getImageData;\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\n            if (pixelBuffer.some((pixel) => pixel !== 0))\n                return false;\n        }\n    }\n    return true;\n}\nfunction getInputType(element) {\n    const type = element.type;\n    return element.hasAttribute('data-rr-is-password')\n        ? 'password'\n        : type\n            ?\n                toLowerCase(type)\n            : null;\n}\nfunction getInputValue(el, tagName, type) {\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\n        return el.getAttribute('value') || '';\n    }\n    return el.value;\n}\n\nlet _id = 1;\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\nconst IGNORED_NODE = -2;\nfunction genId() {\n    return _id++;\n}\nfunction getValidTagName(element) {\n    if (element instanceof HTMLFormElement) {\n        return 'form';\n    }\n    const processedTagName = toLowerCase(element.tagName);\n    if (tagNameRegex.test(processedTagName)) {\n        return 'div';\n    }\n    return processedTagName;\n}\nfunction extractOrigin(url) {\n    let origin = '';\n    if (url.indexOf('//') > -1) {\n        origin = url.split('/').slice(0, 3).join('/');\n    }\n    else {\n        origin = url.split('/')[0];\n    }\n    origin = origin.split('?')[0];\n    return origin;\n}\nlet canvasService;\nlet canvasCtx;\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\nconst URL_WWW_MATCH = /^www\\..*/i;\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\nfunction absoluteToStylesheet(cssText, href) {\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\n        const filePath = path1 || path2 || path3;\n        const maybeQuote = quote1 || quote2 || '';\n        if (!filePath) {\n            return origin;\n        }\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (DATA_URI.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (filePath[0] === '/') {\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\n        }\n        const stack = href.split('/');\n        const parts = filePath.split('/');\n        stack.pop();\n        for (const part of parts) {\n            if (part === '.') {\n                continue;\n            }\n            else if (part === '..') {\n                stack.pop();\n            }\n            else {\n                stack.push(part);\n            }\n        }\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\n    });\n}\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\n    if (attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    let pos = 0;\n    function collectCharacters(regEx) {\n        let chars;\n        const match = regEx.exec(attributeValue.substring(pos));\n        if (match) {\n            chars = match[0];\n            pos += chars.length;\n            return chars;\n        }\n        return '';\n    }\n    const output = [];\n    while (true) {\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\n        if (pos >= attributeValue.length) {\n            break;\n        }\n        let url = collectCharacters(SRCSET_NOT_SPACES);\n        if (url.slice(-1) === ',') {\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\n            output.push(url);\n        }\n        else {\n            let descriptorsStr = '';\n            url = absoluteToDoc(doc, url);\n            let inParens = false;\n            while (true) {\n                const c = attributeValue.charAt(pos);\n                if (c === '') {\n                    output.push((url + descriptorsStr).trim());\n                    break;\n                }\n                else if (!inParens) {\n                    if (c === ',') {\n                        pos += 1;\n                        output.push((url + descriptorsStr).trim());\n                        break;\n                    }\n                    else if (c === '(') {\n                        inParens = true;\n                    }\n                }\n                else {\n                    if (c === ')') {\n                        inParens = false;\n                    }\n                }\n                descriptorsStr += c;\n                pos += 1;\n            }\n        }\n    }\n    return output.join(', ');\n}\nfunction absoluteToDoc(doc, attributeValue) {\n    if (!attributeValue || attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    const a = doc.createElement('a');\n    a.href = attributeValue;\n    return a.href;\n}\nfunction isSVGElement(el) {\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\n}\nfunction getHref() {\n    const a = document.createElement('a');\n    a.href = '';\n    return a.href;\n}\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\n    if (!value) {\n        return value;\n    }\n    if (name === 'src' ||\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'xlink:href' && value[0] !== '#') {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'background' &&\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'srcset') {\n        return getAbsoluteSrcsetString(doc, value);\n    }\n    else if (name === 'style') {\n        return absoluteToStylesheet(value, getHref());\n    }\n    else if (tagName === 'object' && name === 'data') {\n        return absoluteToDoc(doc, value);\n    }\n    if (typeof maskAttributeFn === 'function') {\n        return maskAttributeFn(name, value, element);\n    }\n    return value;\n}\nfunction ignoreAttribute(tagName, name, _value) {\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\n}\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\n    try {\n        if (unblockSelector && element.matches(unblockSelector)) {\n            return false;\n        }\n        if (typeof blockClass === 'string') {\n            if (element.classList.contains(blockClass)) {\n                return true;\n            }\n        }\n        else {\n            for (let eIndex = element.classList.length; eIndex--;) {\n                const className = element.classList[eIndex];\n                if (blockClass.test(className)) {\n                    return true;\n                }\n            }\n        }\n        if (blockSelector) {\n            return element.matches(blockSelector);\n        }\n    }\n    catch (e) {\n    }\n    return false;\n}\nfunction elementClassMatchesRegex(el, regex) {\n    for (let eIndex = el.classList.length; eIndex--;) {\n        const className = el.classList[eIndex];\n        if (regex.test(className)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\n    if (!node)\n        return -1;\n    if (node.nodeType !== node.ELEMENT_NODE)\n        return -1;\n    if (distance > limit)\n        return -1;\n    if (matchPredicate(node))\n        return distance;\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\n}\nfunction createMatchPredicate(className, selector) {\n    return (node) => {\n        const el = node;\n        if (el === null)\n            return false;\n        try {\n            if (className) {\n                if (typeof className === 'string') {\n                    if (el.matches(`.${className}`))\n                        return true;\n                }\n                else if (elementClassMatchesRegex(el, className)) {\n                    return true;\n                }\n            }\n            if (selector && el.matches(selector))\n                return true;\n            return false;\n        }\n        catch (e2) {\n            return false;\n        }\n    };\n}\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\n    try {\n        const el = node.nodeType === node.ELEMENT_NODE\n            ? node\n            : node.parentElement;\n        if (el === null)\n            return false;\n        if (el.tagName === 'INPUT') {\n            const autocomplete = el.getAttribute('autocomplete');\n            const disallowedAutocompleteValues = [\n                'current-password',\n                'new-password',\n                'cc-number',\n                'cc-exp',\n                'cc-exp-month',\n                'cc-exp-year',\n                'cc-csc',\n            ];\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\n                return true;\n            }\n        }\n        let maskDistance = -1;\n        let unmaskDistance = -1;\n        if (maskAllText) {\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\n            if (unmaskDistance < 0) {\n                return true;\n            }\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\n        }\n        else {\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\n            if (maskDistance < 0) {\n                return false;\n            }\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\n        }\n        return maskDistance >= 0\n            ? unmaskDistance >= 0\n                ? maskDistance <= unmaskDistance\n                : true\n            : unmaskDistance >= 0\n                ? false\n                : !!maskAllText;\n    }\n    catch (e) {\n    }\n    return !!maskAllText;\n}\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\n    const win = iframeEl.contentWindow;\n    if (!win) {\n        return;\n    }\n    let fired = false;\n    let readyState;\n    try {\n        readyState = win.document.readyState;\n    }\n    catch (error) {\n        return;\n    }\n    if (readyState !== 'complete') {\n        const timer = setTimeout(() => {\n            if (!fired) {\n                listener();\n                fired = true;\n            }\n        }, iframeLoadTimeout);\n        iframeEl.addEventListener('load', () => {\n            clearTimeout(timer);\n            fired = true;\n            listener();\n        });\n        return;\n    }\n    const blankUrl = 'about:blank';\n    if (win.location.href !== blankUrl ||\n        iframeEl.src === blankUrl ||\n        iframeEl.src === '') {\n        setTimeout(listener, 0);\n        return iframeEl.addEventListener('load', listener);\n    }\n    iframeEl.addEventListener('load', listener);\n}\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\n    let fired = false;\n    let styleSheetLoaded;\n    try {\n        styleSheetLoaded = link.sheet;\n    }\n    catch (error) {\n        return;\n    }\n    if (styleSheetLoaded)\n        return;\n    const timer = setTimeout(() => {\n        if (!fired) {\n            listener();\n            fired = true;\n        }\n    }, styleSheetLoadTimeout);\n    link.addEventListener('load', () => {\n        clearTimeout(timer);\n        fired = true;\n        listener();\n    });\n}\nfunction serializeNode(n, options) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\n    const rootId = getRootId(doc, mirror);\n    switch (n.nodeType) {\n        case n.DOCUMENT_NODE:\n            if (n.compatMode !== 'CSS1Compat') {\n                return {\n                    type: NodeType$1.Document,\n                    childNodes: [],\n                    compatMode: n.compatMode,\n                };\n            }\n            else {\n                return {\n                    type: NodeType$1.Document,\n                    childNodes: [],\n                };\n            }\n        case n.DOCUMENT_TYPE_NODE:\n            return {\n                type: NodeType$1.DocumentType,\n                name: n.name,\n                publicId: n.publicId,\n                systemId: n.systemId,\n                rootId,\n            };\n        case n.ELEMENT_NODE:\n            return serializeElementNode(n, {\n                doc,\n                blockClass,\n                blockSelector,\n                unblockSelector,\n                inlineStylesheet,\n                maskAttributeFn,\n                maskInputOptions,\n                maskInputFn,\n                dataURLOptions,\n                inlineImages,\n                recordCanvas,\n                keepIframeSrcFn,\n                newlyAddedElement,\n                rootId,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n            });\n        case n.TEXT_NODE:\n            return serializeTextNode(n, {\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                maskTextFn,\n                maskInputOptions,\n                maskInputFn,\n                rootId,\n            });\n        case n.CDATA_SECTION_NODE:\n            return {\n                type: NodeType$1.CDATA,\n                textContent: '',\n                rootId,\n            };\n        case n.COMMENT_NODE:\n            return {\n                type: NodeType$1.Comment,\n                textContent: n.textContent || '',\n                rootId,\n            };\n        default:\n            return false;\n    }\n}\nfunction getRootId(doc, mirror) {\n    if (!mirror.hasNode(doc))\n        return undefined;\n    const docId = mirror.getId(doc);\n    return docId === 1 ? undefined : docId;\n}\nfunction serializeTextNode(n, options) {\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\n    const parentTagName = n.parentNode && n.parentNode.tagName;\n    let textContent = n.textContent;\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\n    if (isStyle && textContent) {\n        try {\n            if (n.nextSibling || n.previousSibling) {\n            }\n            else if (_optionalChain$5([n, 'access', _6 => _6.parentNode, 'access', _7 => _7.sheet, 'optionalAccess', _8 => _8.cssRules])) {\n                textContent = stringifyStylesheet(n.parentNode.sheet);\n            }\n        }\n        catch (err) {\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\n        }\n        textContent = absoluteToStylesheet(textContent, getHref());\n    }\n    if (isScript) {\n        textContent = 'SCRIPT_PLACEHOLDER';\n    }\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\n        textContent = maskTextFn\n            ? maskTextFn(textContent, n.parentElement)\n            : textContent.replace(/[\\S]/g, '*');\n    }\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\n        textContent = maskInputFn\n            ? maskInputFn(textContent, n.parentNode)\n            : textContent.replace(/[\\S]/g, '*');\n    }\n    if (parentTagName === 'OPTION' && textContent) {\n        const isInputMasked = shouldMaskInput({\n            type: null,\n            tagName: parentTagName,\n            maskInputOptions,\n        });\n        textContent = maskInputValue({\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\n            element: n,\n            value: textContent,\n            maskInputFn,\n        });\n    }\n    return {\n        type: NodeType$1.Text,\n        textContent: textContent || '',\n        isStyle,\n        rootId,\n    };\n}\nfunction serializeElementNode(n, options) {\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\n    const tagName = getValidTagName(n);\n    let attributes = {};\n    const len = n.attributes.length;\n    for (let i = 0; i < len; i++) {\n        const attr = n.attributes[i];\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\n        }\n    }\n    if (tagName === 'link' && inlineStylesheet) {\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\n            return s.href === n.href;\n        });\n        let cssText = null;\n        if (stylesheet) {\n            cssText = stringifyStylesheet(stylesheet);\n        }\n        if (cssText) {\n            delete attributes.rel;\n            delete attributes.href;\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\n        }\n    }\n    if (tagName === 'style' &&\n        n.sheet &&\n        !(n.innerText || n.textContent || '').trim().length) {\n        const cssText = stringifyStylesheet(n.sheet);\n        if (cssText) {\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\n        }\n    }\n    if (tagName === 'input' ||\n        tagName === 'textarea' ||\n        tagName === 'select' ||\n        tagName === 'option') {\n        const el = n;\n        const type = getInputType(el);\n        const value = getInputValue(el, toUpperCase(tagName), type);\n        const checked = el.checked;\n        if (type !== 'submit' && type !== 'button' && value) {\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\n                type,\n                tagName: toUpperCase(tagName),\n                maskInputOptions,\n            }));\n            attributes.value = maskInputValue({\n                isMasked: forceMask,\n                element: el,\n                value,\n                maskInputFn,\n            });\n        }\n        if (checked) {\n            attributes.checked = checked;\n        }\n    }\n    if (tagName === 'option') {\n        if (n.selected && !maskInputOptions['select']) {\n            attributes.selected = true;\n        }\n        else {\n            delete attributes.selected;\n        }\n    }\n    if (tagName === 'canvas' && recordCanvas) {\n        if (n.__context === '2d') {\n            if (!is2DCanvasBlank(n)) {\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            }\n        }\n        else if (!('__context' in n)) {\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            const blankCanvas = document.createElement('canvas');\n            blankCanvas.width = n.width;\n            blankCanvas.height = n.height;\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            if (canvasDataURL !== blankCanvasDataURL) {\n                attributes.rr_dataURL = canvasDataURL;\n            }\n        }\n    }\n    if (tagName === 'img' && inlineImages) {\n        if (!canvasService) {\n            canvasService = doc.createElement('canvas');\n            canvasCtx = canvasService.getContext('2d');\n        }\n        const image = n;\n        const oldValue = image.crossOrigin;\n        image.crossOrigin = 'anonymous';\n        const recordInlineImage = () => {\n            image.removeEventListener('load', recordInlineImage);\n            try {\n                canvasService.width = image.naturalWidth;\n                canvasService.height = image.naturalHeight;\n                canvasCtx.drawImage(image, 0, 0);\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            }\n            catch (err) {\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\n            }\n            oldValue\n                ? (attributes.crossOrigin = oldValue)\n                : image.removeAttribute('crossorigin');\n        };\n        if (image.complete && image.naturalWidth !== 0)\n            recordInlineImage();\n        else\n            image.addEventListener('load', recordInlineImage);\n    }\n    if (tagName === 'audio' || tagName === 'video') {\n        attributes.rr_mediaState = n.paused\n            ? 'paused'\n            : 'played';\n        attributes.rr_mediaCurrentTime = n.currentTime;\n    }\n    if (!newlyAddedElement) {\n        if (n.scrollLeft) {\n            attributes.rr_scrollLeft = n.scrollLeft;\n        }\n        if (n.scrollTop) {\n            attributes.rr_scrollTop = n.scrollTop;\n        }\n    }\n    if (needBlock) {\n        const { width, height } = n.getBoundingClientRect();\n        attributes = {\n            class: attributes.class,\n            rr_width: `${width}px`,\n            rr_height: `${height}px`,\n        };\n    }\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\n        if (!n.contentDocument) {\n            attributes.rr_src = attributes.src;\n        }\n        delete attributes.src;\n    }\n    let isCustomElement;\n    try {\n        if (customElements.get(tagName))\n            isCustomElement = true;\n    }\n    catch (e) {\n    }\n    return {\n        type: NodeType$1.Element,\n        tagName,\n        attributes,\n        childNodes: [],\n        isSVG: isSVGElement(n) || undefined,\n        needBlock,\n        rootId,\n        isCustom: isCustomElement,\n    };\n}\nfunction lowerIfExists(maybeAttr) {\n    if (maybeAttr === undefined || maybeAttr === null) {\n        return '';\n    }\n    else {\n        return maybeAttr.toLowerCase();\n    }\n}\nfunction slimDOMExcluded(sn, slimDOMOptions) {\n    if (slimDOMOptions.comment && sn.type === NodeType$1.Comment) {\n        return true;\n    }\n    else if (sn.type === NodeType$1.Element) {\n        if (slimDOMOptions.script &&\n            (sn.tagName === 'script' ||\n                (sn.tagName === 'link' &&\n                    (sn.attributes.rel === 'preload' ||\n                        sn.attributes.rel === 'modulepreload') &&\n                    sn.attributes.as === 'script') ||\n                (sn.tagName === 'link' &&\n                    sn.attributes.rel === 'prefetch' &&\n                    typeof sn.attributes.href === 'string' &&\n                    sn.attributes.href.endsWith('.js')))) {\n            return true;\n        }\n        else if (slimDOMOptions.headFavicon &&\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\n                (sn.tagName === 'meta' &&\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\n            return true;\n        }\n        else if (sn.tagName === 'meta') {\n            if (slimDOMOptions.headMetaDescKeywords &&\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaSocial &&\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaRobots &&\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaHttpEquiv &&\n                sn.attributes['http-equiv'] !== undefined) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaAuthorship &&\n                (lowerIfExists(sn.attributes.name) === 'author' ||\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaVerification &&\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction serializeNodeWithId(n, options) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\n    let { preserveWhiteSpace = true } = options;\n    const _serializedNode = serializeNode(n, {\n        doc,\n        mirror,\n        blockClass,\n        blockSelector,\n        maskAllText,\n        unblockSelector,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        inlineStylesheet,\n        maskInputOptions,\n        maskAttributeFn,\n        maskTextFn,\n        maskInputFn,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        keepIframeSrcFn,\n        newlyAddedElement,\n    });\n    if (!_serializedNode) {\n        console.warn(n, 'not serialized');\n        return null;\n    }\n    let id;\n    if (mirror.hasNode(n)) {\n        id = mirror.getId(n);\n    }\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\n        (!preserveWhiteSpace &&\n            _serializedNode.type === NodeType$1.Text &&\n            !_serializedNode.isStyle &&\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\n        id = IGNORED_NODE;\n    }\n    else {\n        id = genId();\n    }\n    const serializedNode = Object.assign(_serializedNode, { id });\n    mirror.add(n, serializedNode);\n    if (id === IGNORED_NODE) {\n        return null;\n    }\n    if (onSerialize) {\n        onSerialize(n);\n    }\n    let recordChild = !skipChild;\n    if (serializedNode.type === NodeType$1.Element) {\n        recordChild = recordChild && !serializedNode.needBlock;\n        delete serializedNode.needBlock;\n        const shadowRoot = n.shadowRoot;\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\n            serializedNode.isShadowHost = true;\n    }\n    if ((serializedNode.type === NodeType$1.Document ||\n        serializedNode.type === NodeType$1.Element) &&\n        recordChild) {\n        if (slimDOMOptions.headWhitespace &&\n            serializedNode.type === NodeType$1.Element &&\n            serializedNode.tagName === 'head') {\n            preserveWhiteSpace = false;\n        }\n        const bypassOptions = {\n            doc,\n            mirror,\n            blockClass,\n            blockSelector,\n            maskAllText,\n            unblockSelector,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild,\n            inlineStylesheet,\n            maskInputOptions,\n            maskAttributeFn,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            onStylesheetLoad,\n            stylesheetLoadTimeout,\n            keepIframeSrcFn,\n        };\n        for (const childN of Array.from(n.childNodes)) {\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n            if (serializedChildNode) {\n                serializedNode.childNodes.push(serializedChildNode);\n            }\n        }\n        if (isElement$1(n) && n.shadowRoot) {\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n                if (serializedChildNode) {\n                    isNativeShadowDom(n.shadowRoot) &&\n                        (serializedChildNode.isShadow = true);\n                    serializedNode.childNodes.push(serializedChildNode);\n                }\n            }\n        }\n    }\n    if (n.parentNode &&\n        isShadowRoot(n.parentNode) &&\n        isNativeShadowDom(n.parentNode)) {\n        serializedNode.isShadow = true;\n    }\n    if (serializedNode.type === NodeType$1.Element &&\n        serializedNode.tagName === 'iframe') {\n        onceIframeLoaded(n, () => {\n            const iframeDoc = n.contentDocument;\n            if (iframeDoc && onIframeLoad) {\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\n                    doc: iframeDoc,\n                    mirror,\n                    blockClass,\n                    blockSelector,\n                    unblockSelector,\n                    maskAllText,\n                    maskTextClass,\n                    unmaskTextClass,\n                    maskTextSelector,\n                    unmaskTextSelector,\n                    skipChild: false,\n                    inlineStylesheet,\n                    maskInputOptions,\n                    maskAttributeFn,\n                    maskTextFn,\n                    maskInputFn,\n                    slimDOMOptions,\n                    dataURLOptions,\n                    inlineImages,\n                    recordCanvas,\n                    preserveWhiteSpace,\n                    onSerialize,\n                    onIframeLoad,\n                    iframeLoadTimeout,\n                    onStylesheetLoad,\n                    stylesheetLoadTimeout,\n                    keepIframeSrcFn,\n                });\n                if (serializedIframeNode) {\n                    onIframeLoad(n, serializedIframeNode);\n                }\n            }\n        }, iframeLoadTimeout);\n    }\n    if (serializedNode.type === NodeType$1.Element &&\n        serializedNode.tagName === 'link' &&\n        serializedNode.attributes.rel === 'stylesheet') {\n        onceStylesheetLoaded(n, () => {\n            if (onStylesheetLoad) {\n                const serializedLinkNode = serializeNodeWithId(n, {\n                    doc,\n                    mirror,\n                    blockClass,\n                    blockSelector,\n                    unblockSelector,\n                    maskAllText,\n                    maskTextClass,\n                    unmaskTextClass,\n                    maskTextSelector,\n                    unmaskTextSelector,\n                    skipChild: false,\n                    inlineStylesheet,\n                    maskInputOptions,\n                    maskAttributeFn,\n                    maskTextFn,\n                    maskInputFn,\n                    slimDOMOptions,\n                    dataURLOptions,\n                    inlineImages,\n                    recordCanvas,\n                    preserveWhiteSpace,\n                    onSerialize,\n                    onIframeLoad,\n                    iframeLoadTimeout,\n                    onStylesheetLoad,\n                    stylesheetLoadTimeout,\n                    keepIframeSrcFn,\n                });\n                if (serializedLinkNode) {\n                    onStylesheetLoad(n, serializedLinkNode);\n                }\n            }\n        }, stylesheetLoadTimeout);\n    }\n    return serializedNode;\n}\nfunction snapshot(n, options) {\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n        }\n        : maskAllInputs === false\n            ? {}\n            : maskAllInputs;\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\n        ?\n            {\n                script: true,\n                comment: true,\n                headFavicon: true,\n                headWhitespace: true,\n                headMetaDescKeywords: slimDOM === 'all',\n                headMetaSocial: true,\n                headMetaRobots: true,\n                headMetaHttpEquiv: true,\n                headMetaAuthorship: true,\n                headMetaVerification: true,\n            }\n        : slimDOM === false\n            ? {}\n            : slimDOM;\n    return serializeNodeWithId(n, {\n        doc: n,\n        mirror,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        maskAllText,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        skipChild: false,\n        inlineStylesheet,\n        maskInputOptions,\n        maskAttributeFn,\n        maskTextFn,\n        maskInputFn,\n        slimDOMOptions,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        preserveWhiteSpace,\n        onSerialize,\n        onIframeLoad,\n        iframeLoadTimeout,\n        onStylesheetLoad,\n        stylesheetLoadTimeout,\n        keepIframeSrcFn,\n        newlyAddedElement: false,\n    });\n}\n\nfunction _optionalChain$4(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nfunction on(type, fn, target = document) {\n    const options = { capture: true, passive: true };\n    target.addEventListener(type, fn, options);\n    return () => target.removeEventListener(type, fn, options);\n}\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\n    '\\r\\n' +\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\n    '\\r\\n' +\n    'or you can use record.mirror to access the mirror instance during recording.';\nlet _mirror = {\n    map: {},\n    getId() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return -1;\n    },\n    getNode() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return null;\n    },\n    removeNodeFromMap() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n    has() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return false;\n    },\n    reset() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n};\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\n    _mirror = new Proxy(_mirror, {\n        get(target, prop, receiver) {\n            if (prop === 'map') {\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n}\nfunction throttle$1(func, wait, options = {}) {\n    let timeout = null;\n    let previous = 0;\n    return function (...args) {\n        const now = Date.now();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        const remaining = wait - (now - previous);\n        const context = this;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout$1(timeout);\n                timeout = null;\n            }\n            previous = now;\n            func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout$1(() => {\n                previous = options.leading === false ? 0 : Date.now();\n                timeout = null;\n                func.apply(context, args);\n            }, remaining);\n        }\n    };\n}\nfunction hookSetter(target, key, d, isRevoked, win = window) {\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\n    win.Object.defineProperty(target, key, isRevoked\n        ? d\n        : {\n            set(value) {\n                setTimeout$1(() => {\n                    d.set.call(this, value);\n                }, 0);\n                if (original && original.set) {\n                    original.set.call(this, value);\n                }\n            },\n        });\n    return () => hookSetter(target, key, original || {}, true);\n}\nfunction patch(source, name, replacement) {\n    try {\n        if (!(name in source)) {\n            return () => {\n            };\n        }\n        const original = source[name];\n        const wrapped = replacement(original);\n        if (typeof wrapped === 'function') {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __rrweb_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n            });\n        }\n        source[name] = wrapped;\n        return () => {\n            source[name] = original;\n        };\n    }\n    catch (e2) {\n        return () => {\n        };\n    }\n}\nlet nowTimestamp = Date.now;\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\n    nowTimestamp = () => new Date().getTime();\n}\nfunction getWindowScroll(win) {\n    const doc = win.document;\n    return {\n        left: doc.scrollingElement\n            ? doc.scrollingElement.scrollLeft\n            : win.pageXOffset !== undefined\n                ? win.pageXOffset\n                : _optionalChain$4([doc, 'optionalAccess', _ => _.documentElement, 'access', _2 => _2.scrollLeft]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _3 => _3.body, 'optionalAccess', _4 => _4.parentElement, 'optionalAccess', _5 => _5.scrollLeft]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _6 => _6.body, 'optionalAccess', _7 => _7.scrollLeft]) ||\n                    0,\n        top: doc.scrollingElement\n            ? doc.scrollingElement.scrollTop\n            : win.pageYOffset !== undefined\n                ? win.pageYOffset\n                : _optionalChain$4([doc, 'optionalAccess', _8 => _8.documentElement, 'access', _9 => _9.scrollTop]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _10 => _10.body, 'optionalAccess', _11 => _11.parentElement, 'optionalAccess', _12 => _12.scrollTop]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _13 => _13.body, 'optionalAccess', _14 => _14.scrollTop]) ||\n                    0,\n    };\n}\nfunction getWindowHeight() {\n    return (window.innerHeight ||\n        (document.documentElement && document.documentElement.clientHeight) ||\n        (document.body && document.body.clientHeight));\n}\nfunction getWindowWidth() {\n    return (window.innerWidth ||\n        (document.documentElement && document.documentElement.clientWidth) ||\n        (document.body && document.body.clientWidth));\n}\nfunction closestElementOfNode(node) {\n    if (!node) {\n        return null;\n    }\n    const el = node.nodeType === node.ELEMENT_NODE\n        ? node\n        : node.parentElement;\n    return el;\n}\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\n    if (!node) {\n        return false;\n    }\n    const el = closestElementOfNode(node);\n    if (!el) {\n        return false;\n    }\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\n    if (!checkAncestors) {\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\n        return blockedPredicate(el) && !isUnblocked;\n    }\n    const blockDistance = distanceToMatch(el, blockedPredicate);\n    let unblockDistance = -1;\n    if (blockDistance < 0) {\n        return false;\n    }\n    if (unblockSelector) {\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\n    }\n    if (blockDistance > -1 && unblockDistance < 0) {\n        return true;\n    }\n    return blockDistance < unblockDistance;\n}\nfunction isSerialized(n, mirror) {\n    return mirror.getId(n) !== -1;\n}\nfunction isIgnored(n, mirror) {\n    return mirror.getId(n) === IGNORED_NODE;\n}\nfunction isAncestorRemoved(target, mirror) {\n    if (isShadowRoot(target)) {\n        return false;\n    }\n    const id = mirror.getId(target);\n    if (!mirror.has(id)) {\n        return true;\n    }\n    if (target.parentNode &&\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\n        return false;\n    }\n    if (!target.parentNode) {\n        return true;\n    }\n    return isAncestorRemoved(target.parentNode, mirror);\n}\nfunction legacy_isTouchEvent(event) {\n    return Boolean(event.changedTouches);\n}\nfunction polyfill(win = window) {\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\n        win.NodeList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\n        win.DOMTokenList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if (!Node.prototype.contains) {\n        Node.prototype.contains = (...args) => {\n            let node = args[0];\n            if (!(0 in args)) {\n                throw new TypeError('1 argument is required');\n            }\n            do {\n                if (this === node) {\n                    return true;\n                }\n            } while ((node = node && node.parentNode));\n            return false;\n        };\n    }\n}\nfunction isSerializedIframe(n, mirror) {\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\n}\nfunction isSerializedStylesheet(n, mirror) {\n    return Boolean(n.nodeName === 'LINK' &&\n        n.nodeType === n.ELEMENT_NODE &&\n        n.getAttribute &&\n        n.getAttribute('rel') === 'stylesheet' &&\n        mirror.getMeta(n));\n}\nfunction hasShadowRoot(n) {\n    return Boolean(_optionalChain$4([n, 'optionalAccess', _18 => _18.shadowRoot]));\n}\nclass StyleSheetMirror {\n    constructor() {\n        this.id = 1;\n        this.styleIDMap = new WeakMap();\n        this.idStyleMap = new Map();\n    }\n    getId(stylesheet) {\n        return _nullishCoalesce(this.styleIDMap.get(stylesheet), () => ( -1));\n    }\n    has(stylesheet) {\n        return this.styleIDMap.has(stylesheet);\n    }\n    add(stylesheet, id) {\n        if (this.has(stylesheet))\n            return this.getId(stylesheet);\n        let newId;\n        if (id === undefined) {\n            newId = this.id++;\n        }\n        else\n            newId = id;\n        this.styleIDMap.set(stylesheet, newId);\n        this.idStyleMap.set(newId, stylesheet);\n        return newId;\n    }\n    getStyle(id) {\n        return this.idStyleMap.get(id) || null;\n    }\n    reset() {\n        this.styleIDMap = new WeakMap();\n        this.idStyleMap = new Map();\n        this.id = 1;\n    }\n    generateId() {\n        return this.id++;\n    }\n}\nfunction getShadowHost(n) {\n    let shadowHost = null;\n    if (_optionalChain$4([n, 'access', _19 => _19.getRootNode, 'optionalCall', _20 => _20(), 'optionalAccess', _21 => _21.nodeType]) === Node.DOCUMENT_FRAGMENT_NODE &&\n        n.getRootNode().host)\n        shadowHost = n.getRootNode().host;\n    return shadowHost;\n}\nfunction getRootShadowHost(n) {\n    let rootShadowHost = n;\n    let shadowHost;\n    while ((shadowHost = getShadowHost(rootShadowHost)))\n        rootShadowHost = shadowHost;\n    return rootShadowHost;\n}\nfunction shadowHostInDom(n) {\n    const doc = n.ownerDocument;\n    if (!doc)\n        return false;\n    const shadowHost = getRootShadowHost(n);\n    return doc.contains(shadowHost);\n}\nfunction inDom(n) {\n    const doc = n.ownerDocument;\n    if (!doc)\n        return false;\n    return doc.contains(n) || shadowHostInDom(n);\n}\nconst cachedImplementations = {};\nfunction getImplementation(name) {\n    const cached = cachedImplementations[name];\n    if (cached) {\n        return cached;\n    }\n    const document = window.document;\n    let impl = window[name];\n    if (document && typeof document.createElement === 'function') {\n        try {\n            const sandbox = document.createElement('iframe');\n            sandbox.hidden = true;\n            document.head.appendChild(sandbox);\n            const contentWindow = sandbox.contentWindow;\n            if (contentWindow && contentWindow[name]) {\n                impl =\n                    contentWindow[name];\n            }\n            document.head.removeChild(sandbox);\n        }\n        catch (e) {\n        }\n    }\n    return (cachedImplementations[name] = impl.bind(window));\n}\nfunction onRequestAnimationFrame(...rest) {\n    return getImplementation('requestAnimationFrame')(...rest);\n}\nfunction setTimeout$1(...rest) {\n    return getImplementation('setTimeout')(...rest);\n}\nfunction clearTimeout$1(...rest) {\n    return getImplementation('clearTimeout')(...rest);\n}\n\nvar EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\n\nfunction _optionalChain$3(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nfunction isNodeInLinkedList(n) {\n    return '__ln' in n;\n}\nclass DoubleLinkedList {\n    constructor() {\n        this.length = 0;\n        this.head = null;\n        this.tail = null;\n    }\n    get(position) {\n        if (position >= this.length) {\n            throw new Error('Position outside of list range');\n        }\n        let current = this.head;\n        for (let index = 0; index < position; index++) {\n            current = _optionalChain$3([current, 'optionalAccess', _ => _.next]) || null;\n        }\n        return current;\n    }\n    addNode(n) {\n        const node = {\n            value: n,\n            previous: null,\n            next: null,\n        };\n        n.__ln = node;\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\n            const current = n.previousSibling.__ln.next;\n            node.next = current;\n            node.previous = n.previousSibling.__ln;\n            n.previousSibling.__ln.next = node;\n            if (current) {\n                current.previous = node;\n            }\n        }\n        else if (n.nextSibling &&\n            isNodeInLinkedList(n.nextSibling) &&\n            n.nextSibling.__ln.previous) {\n            const current = n.nextSibling.__ln.previous;\n            node.previous = current;\n            node.next = n.nextSibling.__ln;\n            n.nextSibling.__ln.previous = node;\n            if (current) {\n                current.next = node;\n            }\n        }\n        else {\n            if (this.head) {\n                this.head.previous = node;\n            }\n            node.next = this.head;\n            this.head = node;\n        }\n        if (node.next === null) {\n            this.tail = node;\n        }\n        this.length++;\n    }\n    removeNode(n) {\n        const current = n.__ln;\n        if (!this.head) {\n            return;\n        }\n        if (!current.previous) {\n            this.head = current.next;\n            if (this.head) {\n                this.head.previous = null;\n            }\n            else {\n                this.tail = null;\n            }\n        }\n        else {\n            current.previous.next = current.next;\n            if (current.next) {\n                current.next.previous = current.previous;\n            }\n            else {\n                this.tail = current.previous;\n            }\n        }\n        if (n.__ln) {\n            delete n.__ln;\n        }\n        this.length--;\n    }\n}\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\nclass MutationBuffer {\n    constructor() {\n        this.frozen = false;\n        this.locked = false;\n        this.texts = [];\n        this.attributes = [];\n        this.attributeMap = new WeakMap();\n        this.removes = [];\n        this.mapRemoves = [];\n        this.movedMap = {};\n        this.addedSet = new Set();\n        this.movedSet = new Set();\n        this.droppedSet = new Set();\n        this.processMutations = (mutations) => {\n            mutations.forEach(this.processMutation);\n            this.emit();\n        };\n        this.emit = () => {\n            if (this.frozen || this.locked) {\n                return;\n            }\n            const adds = [];\n            const addedIds = new Set();\n            const addList = new DoubleLinkedList();\n            const getNextId = (n) => {\n                let ns = n;\n                let nextId = IGNORED_NODE;\n                while (nextId === IGNORED_NODE) {\n                    ns = ns && ns.nextSibling;\n                    nextId = ns && this.mirror.getId(ns);\n                }\n                return nextId;\n            };\n            const pushAdd = (n) => {\n                if (!n.parentNode || !inDom(n)) {\n                    return;\n                }\n                const parentId = isShadowRoot(n.parentNode)\n                    ? this.mirror.getId(getShadowHost(n))\n                    : this.mirror.getId(n.parentNode);\n                const nextId = getNextId(n);\n                if (parentId === -1 || nextId === -1) {\n                    return addList.addNode(n);\n                }\n                const sn = serializeNodeWithId(n, {\n                    doc: this.doc,\n                    mirror: this.mirror,\n                    blockClass: this.blockClass,\n                    blockSelector: this.blockSelector,\n                    maskAllText: this.maskAllText,\n                    unblockSelector: this.unblockSelector,\n                    maskTextClass: this.maskTextClass,\n                    unmaskTextClass: this.unmaskTextClass,\n                    maskTextSelector: this.maskTextSelector,\n                    unmaskTextSelector: this.unmaskTextSelector,\n                    skipChild: true,\n                    newlyAddedElement: true,\n                    inlineStylesheet: this.inlineStylesheet,\n                    maskInputOptions: this.maskInputOptions,\n                    maskAttributeFn: this.maskAttributeFn,\n                    maskTextFn: this.maskTextFn,\n                    maskInputFn: this.maskInputFn,\n                    slimDOMOptions: this.slimDOMOptions,\n                    dataURLOptions: this.dataURLOptions,\n                    recordCanvas: this.recordCanvas,\n                    inlineImages: this.inlineImages,\n                    onSerialize: (currentN) => {\n                        if (isSerializedIframe(currentN, this.mirror)) {\n                            this.iframeManager.addIframe(currentN);\n                        }\n                        if (isSerializedStylesheet(currentN, this.mirror)) {\n                            this.stylesheetManager.trackLinkElement(currentN);\n                        }\n                        if (hasShadowRoot(n)) {\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, this.doc);\n                        }\n                    },\n                    onIframeLoad: (iframe, childSn) => {\n                        this.iframeManager.attachIframe(iframe, childSn);\n                        this.shadowDomManager.observeAttachShadow(iframe);\n                    },\n                    onStylesheetLoad: (link, childSn) => {\n                        this.stylesheetManager.attachLinkElement(link, childSn);\n                    },\n                });\n                if (sn) {\n                    adds.push({\n                        parentId,\n                        nextId,\n                        node: sn,\n                    });\n                    addedIds.add(sn.id);\n                }\n            };\n            while (this.mapRemoves.length) {\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\n            }\n            for (const n of this.movedSet) {\n                if (isParentRemoved(this.removes, n, this.mirror) &&\n                    !this.movedSet.has(n.parentNode)) {\n                    continue;\n                }\n                pushAdd(n);\n            }\n            for (const n of this.addedSet) {\n                if (!isAncestorInSet(this.droppedSet, n) &&\n                    !isParentRemoved(this.removes, n, this.mirror)) {\n                    pushAdd(n);\n                }\n                else if (isAncestorInSet(this.movedSet, n)) {\n                    pushAdd(n);\n                }\n                else {\n                    this.droppedSet.add(n);\n                }\n            }\n            let candidate = null;\n            while (addList.length) {\n                let node = null;\n                if (candidate) {\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\n                    const nextId = getNextId(candidate.value);\n                    if (parentId !== -1 && nextId !== -1) {\n                        node = candidate;\n                    }\n                }\n                if (!node) {\n                    let tailNode = addList.tail;\n                    while (tailNode) {\n                        const _node = tailNode;\n                        tailNode = tailNode.previous;\n                        if (_node) {\n                            const parentId = this.mirror.getId(_node.value.parentNode);\n                            const nextId = getNextId(_node.value);\n                            if (nextId === -1)\n                                continue;\n                            else if (parentId !== -1) {\n                                node = _node;\n                                break;\n                            }\n                            else {\n                                const unhandledNode = _node.value;\n                                if (unhandledNode.parentNode &&\n                                    unhandledNode.parentNode.nodeType ===\n                                        Node.DOCUMENT_FRAGMENT_NODE) {\n                                    const shadowHost = unhandledNode.parentNode\n                                        .host;\n                                    const parentId = this.mirror.getId(shadowHost);\n                                    if (parentId !== -1) {\n                                        node = _node;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!node) {\n                    while (addList.head) {\n                        addList.removeNode(addList.head.value);\n                    }\n                    break;\n                }\n                candidate = node.previous;\n                addList.removeNode(node.value);\n                pushAdd(node.value);\n            }\n            const payload = {\n                texts: this.texts\n                    .map((text) => ({\n                    id: this.mirror.getId(text.node),\n                    value: text.value,\n                }))\n                    .filter((text) => !addedIds.has(text.id))\n                    .filter((text) => this.mirror.has(text.id)),\n                attributes: this.attributes\n                    .map((attribute) => {\n                    const { attributes } = attribute;\n                    if (typeof attributes.style === 'string') {\n                        const diffAsStr = JSON.stringify(attribute.styleDiff);\n                        const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\n                        if (diffAsStr.length < attributes.style.length) {\n                            if ((diffAsStr + unchangedAsStr).split('var(').length ===\n                                attributes.style.split('var(').length) {\n                                attributes.style = attribute.styleDiff;\n                            }\n                        }\n                    }\n                    return {\n                        id: this.mirror.getId(attribute.node),\n                        attributes: attributes,\n                    };\n                })\n                    .filter((attribute) => !addedIds.has(attribute.id))\n                    .filter((attribute) => this.mirror.has(attribute.id)),\n                removes: this.removes,\n                adds,\n            };\n            if (!payload.texts.length &&\n                !payload.attributes.length &&\n                !payload.removes.length &&\n                !payload.adds.length) {\n                return;\n            }\n            this.texts = [];\n            this.attributes = [];\n            this.attributeMap = new WeakMap();\n            this.removes = [];\n            this.addedSet = new Set();\n            this.movedSet = new Set();\n            this.droppedSet = new Set();\n            this.movedMap = {};\n            this.mutationCb(payload);\n        };\n        this.processMutation = (m) => {\n            if (isIgnored(m.target, this.mirror)) {\n                return;\n            }\n            switch (m.type) {\n                case 'characterData': {\n                    const value = m.target.textContent;\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) &&\n                        value !== m.oldValue) {\n                        this.texts.push({\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && value\n                                ? this.maskTextFn\n                                    ? this.maskTextFn(value, closestElementOfNode(m.target))\n                                    : value.replace(/[\\S]/g, '*')\n                                : value,\n                            node: m.target,\n                        });\n                    }\n                    break;\n                }\n                case 'attributes': {\n                    const target = m.target;\n                    let attributeName = m.attributeName;\n                    let value = m.target.getAttribute(attributeName);\n                    if (attributeName === 'value') {\n                        const type = getInputType(target);\n                        const tagName = target.tagName;\n                        value = getInputValue(target, tagName, type);\n                        const isInputMasked = shouldMaskInput({\n                            maskInputOptions: this.maskInputOptions,\n                            tagName,\n                            type,\n                        });\n                        const forceMask = needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, isInputMasked);\n                        value = maskInputValue({\n                            isMasked: forceMask,\n                            element: target,\n                            value,\n                            maskInputFn: this.maskInputFn,\n                        });\n                    }\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\n                        value === m.oldValue) {\n                        return;\n                    }\n                    let item = this.attributeMap.get(m.target);\n                    if (target.tagName === 'IFRAME' &&\n                        attributeName === 'src' &&\n                        !this.keepIframeSrcFn(value)) {\n                        if (!target.contentDocument) {\n                            attributeName = 'rr_src';\n                        }\n                        else {\n                            return;\n                        }\n                    }\n                    if (!item) {\n                        item = {\n                            node: m.target,\n                            attributes: {},\n                            styleDiff: {},\n                            _unchangedStyles: {},\n                        };\n                        this.attributes.push(item);\n                        this.attributeMap.set(m.target, item);\n                    }\n                    if (attributeName === 'type' &&\n                        target.tagName === 'INPUT' &&\n                        (m.oldValue || '').toLowerCase() === 'password') {\n                        target.setAttribute('data-rr-is-password', 'true');\n                    }\n                    if (!ignoreAttribute(target.tagName, attributeName)) {\n                        item.attributes[attributeName] = transformAttribute(this.doc, toLowerCase(target.tagName), toLowerCase(attributeName), value, target, this.maskAttributeFn);\n                        if (attributeName === 'style') {\n                            if (!this.unattachedDoc) {\n                                try {\n                                    this.unattachedDoc =\n                                        document.implementation.createHTMLDocument();\n                                }\n                                catch (e) {\n                                    this.unattachedDoc = this.doc;\n                                }\n                            }\n                            const old = this.unattachedDoc.createElement('span');\n                            if (m.oldValue) {\n                                old.setAttribute('style', m.oldValue);\n                            }\n                            for (const pname of Array.from(target.style)) {\n                                const newValue = target.style.getPropertyValue(pname);\n                                const newPriority = target.style.getPropertyPriority(pname);\n                                if (newValue !== old.style.getPropertyValue(pname) ||\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\n                                    if (newPriority === '') {\n                                        item.styleDiff[pname] = newValue;\n                                    }\n                                    else {\n                                        item.styleDiff[pname] = [newValue, newPriority];\n                                    }\n                                }\n                                else {\n                                    item._unchangedStyles[pname] = [newValue, newPriority];\n                                }\n                            }\n                            for (const pname of Array.from(old.style)) {\n                                if (target.style.getPropertyValue(pname) === '') {\n                                    item.styleDiff[pname] = false;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                }\n                case 'childList': {\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) {\n                        return;\n                    }\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\n                    m.removedNodes.forEach((n) => {\n                        const nodeId = this.mirror.getId(n);\n                        const parentId = isShadowRoot(m.target)\n                            ? this.mirror.getId(m.target.host)\n                            : this.mirror.getId(m.target);\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\n                            isIgnored(n, this.mirror) ||\n                            !isSerialized(n, this.mirror)) {\n                            return;\n                        }\n                        if (this.addedSet.has(n)) {\n                            deepDelete(this.addedSet, n);\n                            this.droppedSet.add(n);\n                        }\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\n                        else if (this.movedSet.has(n) &&\n                            this.movedMap[moveKey(nodeId, parentId)]) {\n                            deepDelete(this.movedSet, n);\n                        }\n                        else {\n                            this.removes.push({\n                                parentId,\n                                id: nodeId,\n                                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target)\n                                    ? true\n                                    : undefined,\n                            });\n                        }\n                        this.mapRemoves.push(n);\n                    });\n                    break;\n                }\n            }\n        };\n        this.genAdds = (n, target) => {\n            if (this.processedNodeManager.inOtherBuffer(n, this))\n                return;\n            if (this.addedSet.has(n) || this.movedSet.has(n))\n                return;\n            if (this.mirror.hasNode(n)) {\n                if (isIgnored(n, this.mirror)) {\n                    return;\n                }\n                this.movedSet.add(n);\n                let targetId = null;\n                if (target && this.mirror.hasNode(target)) {\n                    targetId = this.mirror.getId(target);\n                }\n                if (targetId && targetId !== -1) {\n                    this.movedMap[moveKey(this.mirror.getId(n), targetId)] = true;\n                }\n            }\n            else {\n                this.addedSet.add(n);\n                this.droppedSet.delete(n);\n            }\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\n                n.childNodes.forEach((childN) => this.genAdds(childN));\n                if (hasShadowRoot(n)) {\n                    n.shadowRoot.childNodes.forEach((childN) => {\n                        this.processedNodeManager.add(childN, this);\n                        this.genAdds(childN, n);\n                    });\n                }\n            }\n        };\n    }\n    init(options) {\n        [\n            'mutationCb',\n            'blockClass',\n            'blockSelector',\n            'unblockSelector',\n            'maskAllText',\n            'maskTextClass',\n            'unmaskTextClass',\n            'maskTextSelector',\n            'unmaskTextSelector',\n            'inlineStylesheet',\n            'maskInputOptions',\n            'maskAttributeFn',\n            'maskTextFn',\n            'maskInputFn',\n            'keepIframeSrcFn',\n            'recordCanvas',\n            'inlineImages',\n            'slimDOMOptions',\n            'dataURLOptions',\n            'doc',\n            'mirror',\n            'iframeManager',\n            'stylesheetManager',\n            'shadowDomManager',\n            'canvasManager',\n            'processedNodeManager',\n        ].forEach((key) => {\n            this[key] = options[key];\n        });\n    }\n    freeze() {\n        this.frozen = true;\n        this.canvasManager.freeze();\n    }\n    unfreeze() {\n        this.frozen = false;\n        this.canvasManager.unfreeze();\n        this.emit();\n    }\n    isFrozen() {\n        return this.frozen;\n    }\n    lock() {\n        this.locked = true;\n        this.canvasManager.lock();\n    }\n    unlock() {\n        this.locked = false;\n        this.canvasManager.unlock();\n        this.emit();\n    }\n    reset() {\n        this.shadowDomManager.reset();\n        this.canvasManager.reset();\n    }\n}\nfunction deepDelete(addsSet, n) {\n    addsSet.delete(n);\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\n}\nfunction isParentRemoved(removes, n, mirror) {\n    if (removes.length === 0)\n        return false;\n    return _isParentRemoved(removes, n, mirror);\n}\nfunction _isParentRemoved(removes, n, mirror) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    const parentId = mirror.getId(parentNode);\n    if (removes.some((r) => r.id === parentId)) {\n        return true;\n    }\n    return _isParentRemoved(removes, parentNode, mirror);\n}\nfunction isAncestorInSet(set, n) {\n    if (set.size === 0)\n        return false;\n    return _isAncestorInSet(set, n);\n}\nfunction _isAncestorInSet(set, n) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    if (set.has(parentNode)) {\n        return true;\n    }\n    return _isAncestorInSet(set, parentNode);\n}\n\nlet errorHandler;\nfunction registerErrorHandler(handler) {\n    errorHandler = handler;\n}\nfunction unregisterErrorHandler() {\n    errorHandler = undefined;\n}\nconst callbackWrapper = (cb) => {\n    if (!errorHandler) {\n        return cb;\n    }\n    const rrwebWrapped = ((...rest) => {\n        try {\n            return cb(...rest);\n        }\n        catch (error) {\n            if (errorHandler && errorHandler(error) === true) {\n                return () => {\n                };\n            }\n            throw error;\n        }\n    });\n    return rrwebWrapped;\n};\n\nfunction _optionalChain$2(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nconst mutationBuffers = [];\nfunction getEventTarget(event) {\n    try {\n        if ('composedPath' in event) {\n            const path = event.composedPath();\n            if (path.length) {\n                return path[0];\n            }\n        }\n        else if ('path' in event && event.path.length) {\n            return event.path[0];\n        }\n    }\n    catch (e2) {\n    }\n    return event && event.target;\n}\nfunction initMutationObserver(options, rootEl) {\n    const mutationBuffer = new MutationBuffer();\n    mutationBuffers.push(mutationBuffer);\n    mutationBuffer.init(options);\n    let mutationObserverCtor = window.MutationObserver ||\n        window.__rrMutationObserver;\n    const angularZoneSymbol = _optionalChain$2([window, 'optionalAccess', _ => _.Zone, 'optionalAccess', _2 => _2.__symbol__, 'optionalCall', _3 => _3('MutationObserver')]);\n    if (angularZoneSymbol &&\n        window[angularZoneSymbol]) {\n        mutationObserverCtor = window[angularZoneSymbol];\n    }\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\n        if (options.onMutation && options.onMutation(mutations) === false) {\n            return;\n        }\n        mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\n    }));\n    observer.observe(rootEl, {\n        attributes: true,\n        attributeOldValue: true,\n        characterData: true,\n        characterDataOldValue: true,\n        childList: true,\n        subtree: true,\n    });\n    return observer;\n}\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\n    if (sampling.mousemove === false) {\n        return () => {\n        };\n    }\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\n        ? sampling.mousemoveCallback\n        : 500;\n    let positions = [];\n    let timeBaseline;\n    const wrappedCb = throttle$1(callbackWrapper((source) => {\n        const totalOffset = Date.now() - timeBaseline;\n        mousemoveCb(positions.map((p) => {\n            p.timeOffset -= totalOffset;\n            return p;\n        }), source);\n        positions = [];\n        timeBaseline = null;\n    }), callbackThreshold);\n    const updatePosition = callbackWrapper(throttle$1(callbackWrapper((evt) => {\n        const target = getEventTarget(evt);\n        const { clientX, clientY } = legacy_isTouchEvent(evt)\n            ? evt.changedTouches[0]\n            : evt;\n        if (!timeBaseline) {\n            timeBaseline = nowTimestamp();\n        }\n        positions.push({\n            x: clientX,\n            y: clientY,\n            id: mirror.getId(target),\n            timeOffset: nowTimestamp() - timeBaseline,\n        });\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\n            ? IncrementalSource.Drag\n            : evt instanceof MouseEvent\n                ? IncrementalSource.MouseMove\n                : IncrementalSource.TouchMove);\n    }), threshold, {\n        trailing: false,\n    }));\n    const handlers = [\n        on('mousemove', updatePosition, doc),\n        on('touchmove', updatePosition, doc),\n        on('drag', updatePosition, doc),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    if (sampling.mouseInteraction === false) {\n        return () => {\n        };\n    }\n    const disableMap = sampling.mouseInteraction === true ||\n        sampling.mouseInteraction === undefined\n        ? {}\n        : sampling.mouseInteraction;\n    const handlers = [];\n    let currentPointerType = null;\n    const getHandler = (eventKey) => {\n        return (event) => {\n            const target = getEventTarget(event);\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n                return;\n            }\n            let pointerType = null;\n            let thisEventKey = eventKey;\n            if ('pointerType' in event) {\n                switch (event.pointerType) {\n                    case 'mouse':\n                        pointerType = PointerTypes.Mouse;\n                        break;\n                    case 'touch':\n                        pointerType = PointerTypes.Touch;\n                        break;\n                    case 'pen':\n                        pointerType = PointerTypes.Pen;\n                        break;\n                }\n                if (pointerType === PointerTypes.Touch) {\n                    if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\n                        thisEventKey = 'TouchStart';\n                    }\n                    else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\n                        thisEventKey = 'TouchEnd';\n                    }\n                }\n                else if (pointerType === PointerTypes.Pen) ;\n            }\n            else if (legacy_isTouchEvent(event)) {\n                pointerType = PointerTypes.Touch;\n            }\n            if (pointerType !== null) {\n                currentPointerType = pointerType;\n                if ((thisEventKey.startsWith('Touch') &&\n                    pointerType === PointerTypes.Touch) ||\n                    (thisEventKey.startsWith('Mouse') &&\n                        pointerType === PointerTypes.Mouse)) {\n                    pointerType = null;\n                }\n            }\n            else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\n                pointerType = currentPointerType;\n                currentPointerType = null;\n            }\n            const e = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\n            if (!e) {\n                return;\n            }\n            const id = mirror.getId(target);\n            const { clientX, clientY } = e;\n            callbackWrapper(mouseInteractionCb)({\n                type: MouseInteractions[thisEventKey],\n                id,\n                x: clientX,\n                y: clientY,\n                ...(pointerType !== null && { pointerType }),\n            });\n        };\n    };\n    Object.keys(MouseInteractions)\n        .filter((key) => Number.isNaN(Number(key)) &&\n        !key.endsWith('_Departed') &&\n        disableMap[key] !== false)\n        .forEach((eventKey) => {\n        let eventName = toLowerCase(eventKey);\n        const handler = getHandler(eventKey);\n        if (window.PointerEvent) {\n            switch (MouseInteractions[eventKey]) {\n                case MouseInteractions.MouseDown:\n                case MouseInteractions.MouseUp:\n                    eventName = eventName.replace('mouse', 'pointer');\n                    break;\n                case MouseInteractions.TouchStart:\n                case MouseInteractions.TouchEnd:\n                    return;\n            }\n        }\n        handlers.push(on(eventName, handler, doc));\n    });\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    const updatePosition = callbackWrapper(throttle$1(callbackWrapper((evt) => {\n        const target = getEventTarget(evt);\n        if (!target ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const id = mirror.getId(target);\n        if (target === doc && doc.defaultView) {\n            const scrollLeftTop = getWindowScroll(doc.defaultView);\n            scrollCb({\n                id,\n                x: scrollLeftTop.left,\n                y: scrollLeftTop.top,\n            });\n        }\n        else {\n            scrollCb({\n                id,\n                x: target.scrollLeft,\n                y: target.scrollTop,\n            });\n        }\n    }), sampling.scroll || 100));\n    return on('scroll', updatePosition, doc);\n}\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\n    let lastH = -1;\n    let lastW = -1;\n    const updateDimension = callbackWrapper(throttle$1(callbackWrapper(() => {\n        const height = getWindowHeight();\n        const width = getWindowWidth();\n        if (lastH !== height || lastW !== width) {\n            viewportResizeCb({\n                width: Number(width),\n                height: Number(height),\n            });\n            lastH = height;\n            lastW = width;\n        }\n    }), 200));\n    return on('resize', updateDimension, win);\n}\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\nconst lastInputValueMap = new WeakMap();\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, }) {\n    function eventHandler(event) {\n        let target = getEventTarget(event);\n        const userTriggered = event.isTrusted;\n        const tagName = target && toUpperCase(target.tagName);\n        if (tagName === 'OPTION')\n            target = target.parentElement;\n        if (!target ||\n            !tagName ||\n            INPUT_TAGS.indexOf(tagName) < 0 ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const el = target;\n        if (el.classList.contains(ignoreClass) ||\n            (ignoreSelector && el.matches(ignoreSelector))) {\n            return;\n        }\n        const type = getInputType(target);\n        let text = getInputValue(el, tagName, type);\n        let isChecked = false;\n        const isInputMasked = shouldMaskInput({\n            maskInputOptions,\n            tagName,\n            type,\n        });\n        const forceMask = needMaskingText(target, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked);\n        if (type === 'radio' || type === 'checkbox') {\n            isChecked = target.checked;\n        }\n        text = maskInputValue({\n            isMasked: forceMask,\n            element: target,\n            value: text,\n            maskInputFn,\n        });\n        cbWithDedup(target, userTriggeredOnInput\n            ? { text, isChecked, userTriggered }\n            : { text, isChecked });\n        const name = target.name;\n        if (type === 'radio' && name && isChecked) {\n            doc\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\n                .forEach((el) => {\n                if (el !== target) {\n                    const text = maskInputValue({\n                        isMasked: forceMask,\n                        element: el,\n                        value: getInputValue(el, tagName, type),\n                        maskInputFn,\n                    });\n                    cbWithDedup(el, userTriggeredOnInput\n                        ? { text, isChecked: !isChecked, userTriggered: false }\n                        : { text, isChecked: !isChecked });\n                }\n            });\n        }\n    }\n    function cbWithDedup(target, v) {\n        const lastInputValue = lastInputValueMap.get(target);\n        if (!lastInputValue ||\n            lastInputValue.text !== v.text ||\n            lastInputValue.isChecked !== v.isChecked) {\n            lastInputValueMap.set(target, v);\n            const id = mirror.getId(target);\n            callbackWrapper(inputCb)({\n                ...v,\n                id,\n            });\n        }\n    }\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\n    const currentWindow = doc.defaultView;\n    if (!currentWindow) {\n        return () => {\n            handlers.forEach((h) => h());\n        };\n    }\n    const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(currentWindow.HTMLInputElement.prototype, 'value');\n    const hookProperties = [\n        [currentWindow.HTMLInputElement.prototype, 'value'],\n        [currentWindow.HTMLInputElement.prototype, 'checked'],\n        [currentWindow.HTMLSelectElement.prototype, 'value'],\n        [currentWindow.HTMLTextAreaElement.prototype, 'value'],\n        [currentWindow.HTMLSelectElement.prototype, 'selectedIndex'],\n        [currentWindow.HTMLOptionElement.prototype, 'selected'],\n    ];\n    if (propertyDescriptor && propertyDescriptor.set) {\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\n            set() {\n                callbackWrapper(eventHandler)({\n                    target: this,\n                    isTrusted: false,\n                });\n            },\n        }, false, currentWindow)));\n    }\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction getNestedCSSRulePositions(rule) {\n    const positions = [];\n    function recurse(childRule, pos) {\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\n            childRule.parentRule instanceof CSSGroupingRule) ||\n            (hasNestedCSSRule('CSSMediaRule') &&\n                childRule.parentRule instanceof CSSMediaRule) ||\n            (hasNestedCSSRule('CSSSupportsRule') &&\n                childRule.parentRule instanceof CSSSupportsRule) ||\n            (hasNestedCSSRule('CSSConditionRule') &&\n                childRule.parentRule instanceof CSSConditionRule)) {\n            const rules = Array.from(childRule.parentRule.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        else if (childRule.parentStyleSheet) {\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        return pos;\n    }\n    return recurse(rule, positions);\n}\nfunction getIdAndStyleId(sheet, mirror, styleMirror) {\n    let id, styleId;\n    if (!sheet)\n        return {};\n    if (sheet.ownerNode)\n        id = mirror.getId(sheet.ownerNode);\n    else\n        styleId = styleMirror.getId(sheet);\n    return {\n        styleId,\n        id,\n    };\n}\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror, stylesheetManager }, { win }) {\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\n        return () => {\n        };\n    }\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [rule, index] = argumentsList;\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleSheetRuleCb({\n                    id,\n                    styleId,\n                    adds: [{ rule, index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [index] = argumentsList;\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleSheetRuleCb({\n                    id,\n                    styleId,\n                    removes: [{ index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    let replace;\n    if (win.CSSStyleSheet.prototype.replace) {\n        replace = win.CSSStyleSheet.prototype.replace;\n        win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [text] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        replace: text,\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    }\n    let replaceSync;\n    if (win.CSSStyleSheet.prototype.replaceSync) {\n        replaceSync = win.CSSStyleSheet.prototype.replaceSync;\n        win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [text] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        replaceSync: text,\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    }\n    const supportedNestedCSSRuleTypes = {};\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\n    }\n    else {\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\n        }\n    }\n    const unmodifiedFunctions = {};\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n        unmodifiedFunctions[typeKey] = {\n            insertRule: type.prototype.insertRule,\n            deleteRule: type.prototype.deleteRule,\n        };\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [rule, index] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        adds: [\n                            {\n                                rule,\n                                index: [\n                                    ...getNestedCSSRulePositions(thisArg),\n                                    index || 0,\n                                ],\n                            },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [index] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        removes: [\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\n        replace && (win.CSSStyleSheet.prototype.replace = replace);\n        replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\n        });\n    });\n}\nfunction initAdoptedStyleSheetObserver({ mirror, stylesheetManager, }, host) {\n    let hostId = null;\n    if (host.nodeName === '#document')\n        hostId = mirror.getId(host);\n    else\n        hostId = mirror.getId(host.host);\n    const patchTarget = host.nodeName === '#document'\n        ? _optionalChain$2([host, 'access', _4 => _4.defaultView, 'optionalAccess', _5 => _5.Document])\n        : _optionalChain$2([host, 'access', _6 => _6.ownerDocument, 'optionalAccess', _7 => _7.defaultView, 'optionalAccess', _8 => _8.ShadowRoot]);\n    const originalPropertyDescriptor = _optionalChain$2([patchTarget, 'optionalAccess', _9 => _9.prototype])\n        ? Object.getOwnPropertyDescriptor(_optionalChain$2([patchTarget, 'optionalAccess', _10 => _10.prototype]), 'adoptedStyleSheets')\n        : undefined;\n    if (hostId === null ||\n        hostId === -1 ||\n        !patchTarget ||\n        !originalPropertyDescriptor)\n        return () => {\n        };\n    Object.defineProperty(host, 'adoptedStyleSheets', {\n        configurable: originalPropertyDescriptor.configurable,\n        enumerable: originalPropertyDescriptor.enumerable,\n        get() {\n            return _optionalChain$2([originalPropertyDescriptor, 'access', _11 => _11.get, 'optionalAccess', _12 => _12.call, 'call', _13 => _13(this)]);\n        },\n        set(sheets) {\n            const result = _optionalChain$2([originalPropertyDescriptor, 'access', _14 => _14.set, 'optionalAccess', _15 => _15.call, 'call', _16 => _16(this, sheets)]);\n            if (hostId !== null && hostId !== -1) {\n                try {\n                    stylesheetManager.adoptStyleSheets(sheets, hostId);\n                }\n                catch (e) {\n                }\n            }\n            return result;\n        },\n    });\n    return callbackWrapper(() => {\n        Object.defineProperty(host, 'adoptedStyleSheets', {\n            configurable: originalPropertyDescriptor.configurable,\n            enumerable: originalPropertyDescriptor.enumerable,\n            get: originalPropertyDescriptor.get,\n            set: originalPropertyDescriptor.set,\n        });\n    });\n}\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror, ignoreCSSAttributes, stylesheetManager, }, { win }) {\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [property, value, priority] = argumentsList;\n            if (ignoreCSSAttributes.has(property)) {\n                return setProperty.apply(thisArg, [property, value, priority]);\n            }\n            const { id, styleId } = getIdAndStyleId(_optionalChain$2([thisArg, 'access', _17 => _17.parentRule, 'optionalAccess', _18 => _18.parentStyleSheet]), mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleDeclarationCb({\n                    id,\n                    styleId,\n                    set: {\n                        property,\n                        value,\n                        priority,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [property] = argumentsList;\n            if (ignoreCSSAttributes.has(property)) {\n                return removeProperty.apply(thisArg, [property]);\n            }\n            const { id, styleId } = getIdAndStyleId(_optionalChain$2([thisArg, 'access', _19 => _19.parentRule, 'optionalAccess', _20 => _20.parentStyleSheet]), mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleDeclarationCb({\n                    id,\n                    styleId,\n                    remove: {\n                        property,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\n    });\n}\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, doc, }) {\n    const handler = callbackWrapper((type) => throttle$1(callbackWrapper((event) => {\n        const target = getEventTarget(event);\n        if (!target ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const { currentTime, volume, muted, playbackRate } = target;\n        mediaInteractionCb({\n            type,\n            id: mirror.getId(target),\n            currentTime,\n            volume,\n            muted,\n            playbackRate,\n        });\n    }), sampling.media || 500));\n    const handlers = [\n        on('play', handler(0), doc),\n        on('pause', handler(1), doc),\n        on('seeked', handler(2), doc),\n        on('volumechange', handler(3), doc),\n        on('ratechange', handler(4), doc),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initFontObserver({ fontCb, doc }) {\n    const win = doc.defaultView;\n    if (!win) {\n        return () => {\n        };\n    }\n    const handlers = [];\n    const fontMap = new WeakMap();\n    const originalFontFace = win.FontFace;\n    win.FontFace = function FontFace(family, source, descriptors) {\n        const fontFace = new originalFontFace(family, source, descriptors);\n        fontMap.set(fontFace, {\n            family,\n            buffer: typeof source !== 'string',\n            descriptors,\n            fontSource: typeof source === 'string'\n                ? source\n                : JSON.stringify(Array.from(new Uint8Array(source))),\n        });\n        return fontFace;\n    };\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\n        return function (fontFace) {\n            setTimeout$1(callbackWrapper(() => {\n                const p = fontMap.get(fontFace);\n                if (p) {\n                    fontCb(p);\n                    fontMap.delete(fontFace);\n                }\n            }), 0);\n            return original.apply(this, [fontFace]);\n        };\n    });\n    handlers.push(() => {\n        win.FontFace = originalFontFace;\n    });\n    handlers.push(restoreHandler);\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initSelectionObserver(param) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, selectionCb, } = param;\n    let collapsed = true;\n    const updateSelection = callbackWrapper(() => {\n        const selection = doc.getSelection();\n        if (!selection || (collapsed && _optionalChain$2([selection, 'optionalAccess', _21 => _21.isCollapsed])))\n            return;\n        collapsed = selection.isCollapsed || false;\n        const ranges = [];\n        const count = selection.rangeCount || 0;\n        for (let i = 0; i < count; i++) {\n            const range = selection.getRangeAt(i);\n            const { startContainer, startOffset, endContainer, endOffset } = range;\n            const blocked = isBlocked(startContainer, blockClass, blockSelector, unblockSelector, true) ||\n                isBlocked(endContainer, blockClass, blockSelector, unblockSelector, true);\n            if (blocked)\n                continue;\n            ranges.push({\n                start: mirror.getId(startContainer),\n                startOffset,\n                end: mirror.getId(endContainer),\n                endOffset,\n            });\n        }\n        selectionCb({ ranges });\n    });\n    updateSelection();\n    return on('selectionchange', updateSelection);\n}\nfunction initCustomElementObserver({ doc, customElementCb, }) {\n    const win = doc.defaultView;\n    if (!win || !win.customElements)\n        return () => { };\n    const restoreHandler = patch(win.customElements, 'define', function (original) {\n        return function (name, constructor, options) {\n            try {\n                customElementCb({\n                    define: {\n                        name,\n                    },\n                });\n            }\n            catch (e) {\n            }\n            return original.apply(this, [name, constructor, options]);\n        };\n    });\n    return restoreHandler;\n}\nfunction initObservers(o, _hooks = {}) {\n    const currentWindow = o.doc.defaultView;\n    if (!currentWindow) {\n        return () => {\n        };\n    }\n    const mutationObserver = initMutationObserver(o, o.doc);\n    const mousemoveHandler = initMoveObserver(o);\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\n    const scrollHandler = initScrollObserver(o);\n    const viewportResizeHandler = initViewportResizeObserver(o, {\n        win: currentWindow,\n    });\n    const inputHandler = initInputObserver(o);\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\n    const adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o, o.doc);\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\n        win: currentWindow,\n    });\n    const fontObserver = o.collectFonts\n        ? initFontObserver(o)\n        : () => {\n        };\n    const selectionObserver = initSelectionObserver(o);\n    const customElementObserver = initCustomElementObserver(o);\n    const pluginHandlers = [];\n    for (const plugin of o.plugins) {\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\n    }\n    return callbackWrapper(() => {\n        mutationBuffers.forEach((b) => b.reset());\n        mutationObserver.disconnect();\n        mousemoveHandler();\n        mouseInteractionHandler();\n        scrollHandler();\n        viewportResizeHandler();\n        inputHandler();\n        mediaInteractionHandler();\n        styleSheetObserver();\n        adoptedStyleSheetObserver();\n        styleDeclarationObserver();\n        fontObserver();\n        selectionObserver();\n        customElementObserver();\n        pluginHandlers.forEach((h) => h());\n    });\n}\nfunction hasNestedCSSRule(prop) {\n    return typeof window[prop] !== 'undefined';\n}\nfunction canMonkeyPatchNestedCSSRule(prop) {\n    return Boolean(typeof window[prop] !== 'undefined' &&\n        window[prop].prototype &&\n        'insertRule' in window[prop].prototype &&\n        'deleteRule' in window[prop].prototype);\n}\n\nclass CrossOriginIframeMirror {\n    constructor(generateIdFn) {\n        this.generateIdFn = generateIdFn;\n        this.iframeIdToRemoteIdMap = new WeakMap();\n        this.iframeRemoteIdToIdMap = new WeakMap();\n    }\n    getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\n        const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\n        const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\n        let id = idToRemoteIdMap.get(remoteId);\n        if (!id) {\n            id = this.generateIdFn();\n            idToRemoteIdMap.set(remoteId, id);\n            remoteIdToIdMap.set(id, remoteId);\n        }\n        return id;\n    }\n    getIds(iframe, remoteId) {\n        const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\n        return remoteId.map((id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap));\n    }\n    getRemoteId(iframe, id, map) {\n        const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\n        if (typeof id !== 'number')\n            return id;\n        const remoteId = remoteIdToIdMap.get(id);\n        if (!remoteId)\n            return -1;\n        return remoteId;\n    }\n    getRemoteIds(iframe, ids) {\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\n        return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\n    }\n    reset(iframe) {\n        if (!iframe) {\n            this.iframeIdToRemoteIdMap = new WeakMap();\n            this.iframeRemoteIdToIdMap = new WeakMap();\n            return;\n        }\n        this.iframeIdToRemoteIdMap.delete(iframe);\n        this.iframeRemoteIdToIdMap.delete(iframe);\n    }\n    getIdToRemoteIdMap(iframe) {\n        let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\n        if (!idToRemoteIdMap) {\n            idToRemoteIdMap = new Map();\n            this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\n        }\n        return idToRemoteIdMap;\n    }\n    getRemoteIdToIdMap(iframe) {\n        let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\n        if (!remoteIdToIdMap) {\n            remoteIdToIdMap = new Map();\n            this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\n        }\n        return remoteIdToIdMap;\n    }\n}\n\nfunction _optionalChain$1(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nclass IframeManagerNoop {\n    constructor() {\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\n        this.crossOriginIframeRootIdMap = new WeakMap();\n    }\n    addIframe() {\n    }\n    addLoadListener() {\n    }\n    attachIframe() {\n    }\n}\nclass IframeManager {\n    constructor(options) {\n        this.iframes = new WeakMap();\n        this.crossOriginIframeMap = new WeakMap();\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\n        this.crossOriginIframeRootIdMap = new WeakMap();\n        this.mutationCb = options.mutationCb;\n        this.wrappedEmit = options.wrappedEmit;\n        this.stylesheetManager = options.stylesheetManager;\n        this.recordCrossOriginIframes = options.recordCrossOriginIframes;\n        this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror));\n        this.mirror = options.mirror;\n        if (this.recordCrossOriginIframes) {\n            window.addEventListener('message', this.handleMessage.bind(this));\n        }\n    }\n    addIframe(iframeEl) {\n        this.iframes.set(iframeEl, true);\n        if (iframeEl.contentWindow)\n            this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\n    }\n    addLoadListener(cb) {\n        this.loadListener = cb;\n    }\n    attachIframe(iframeEl, childSn) {\n        this.mutationCb({\n            adds: [\n                {\n                    parentId: this.mirror.getId(iframeEl),\n                    nextId: null,\n                    node: childSn,\n                },\n            ],\n            removes: [],\n            texts: [],\n            attributes: [],\n            isAttachIframe: true,\n        });\n        _optionalChain$1([this, 'access', _ => _.loadListener, 'optionalCall', _2 => _2(iframeEl)]);\n        if (iframeEl.contentDocument &&\n            iframeEl.contentDocument.adoptedStyleSheets &&\n            iframeEl.contentDocument.adoptedStyleSheets.length > 0)\n            this.stylesheetManager.adoptStyleSheets(iframeEl.contentDocument.adoptedStyleSheets, this.mirror.getId(iframeEl.contentDocument));\n    }\n    handleMessage(message) {\n        const crossOriginMessageEvent = message;\n        if (crossOriginMessageEvent.data.type !== 'rrweb' ||\n            crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\n            return;\n        const iframeSourceWindow = message.source;\n        if (!iframeSourceWindow)\n            return;\n        const iframeEl = this.crossOriginIframeMap.get(message.source);\n        if (!iframeEl)\n            return;\n        const transformedEvent = this.transformCrossOriginEvent(iframeEl, crossOriginMessageEvent.data.event);\n        if (transformedEvent)\n            this.wrappedEmit(transformedEvent, crossOriginMessageEvent.data.isCheckout);\n    }\n    transformCrossOriginEvent(iframeEl, e) {\n        switch (e.type) {\n            case EventType.FullSnapshot: {\n                this.crossOriginIframeMirror.reset(iframeEl);\n                this.crossOriginIframeStyleMirror.reset(iframeEl);\n                this.replaceIdOnNode(e.data.node, iframeEl);\n                const rootId = e.data.node.id;\n                this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\n                this.patchRootIdOnNode(e.data.node, rootId);\n                return {\n                    timestamp: e.timestamp,\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Mutation,\n                        adds: [\n                            {\n                                parentId: this.mirror.getId(iframeEl),\n                                nextId: null,\n                                node: e.data.node,\n                            },\n                        ],\n                        removes: [],\n                        texts: [],\n                        attributes: [],\n                        isAttachIframe: true,\n                    },\n                };\n            }\n            case EventType.Meta:\n            case EventType.Load:\n            case EventType.DomContentLoaded: {\n                return false;\n            }\n            case EventType.Plugin: {\n                return e;\n            }\n            case EventType.Custom: {\n                this.replaceIds(e.data.payload, iframeEl, ['id', 'parentId', 'previousId', 'nextId']);\n                return e;\n            }\n            case EventType.IncrementalSnapshot: {\n                switch (e.data.source) {\n                    case IncrementalSource.Mutation: {\n                        e.data.adds.forEach((n) => {\n                            this.replaceIds(n, iframeEl, [\n                                'parentId',\n                                'nextId',\n                                'previousId',\n                            ]);\n                            this.replaceIdOnNode(n.node, iframeEl);\n                            const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\n                            rootId && this.patchRootIdOnNode(n.node, rootId);\n                        });\n                        e.data.removes.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['parentId', 'id']);\n                        });\n                        e.data.attributes.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['id']);\n                        });\n                        e.data.texts.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['id']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.Drag:\n                    case IncrementalSource.TouchMove:\n                    case IncrementalSource.MouseMove: {\n                        e.data.positions.forEach((p) => {\n                            this.replaceIds(p, iframeEl, ['id']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.ViewportResize: {\n                        return false;\n                    }\n                    case IncrementalSource.MediaInteraction:\n                    case IncrementalSource.MouseInteraction:\n                    case IncrementalSource.Scroll:\n                    case IncrementalSource.CanvasMutation:\n                    case IncrementalSource.Input: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        return e;\n                    }\n                    case IncrementalSource.StyleSheetRule:\n                    case IncrementalSource.StyleDeclaration: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        this.replaceStyleIds(e.data, iframeEl, ['styleId']);\n                        return e;\n                    }\n                    case IncrementalSource.Font: {\n                        return e;\n                    }\n                    case IncrementalSource.Selection: {\n                        e.data.ranges.forEach((range) => {\n                            this.replaceIds(range, iframeEl, ['start', 'end']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.AdoptedStyleSheet: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        this.replaceStyleIds(e.data, iframeEl, ['styleIds']);\n                        _optionalChain$1([e, 'access', _3 => _3.data, 'access', _4 => _4.styles, 'optionalAccess', _5 => _5.forEach, 'call', _6 => _6((style) => {\n                            this.replaceStyleIds(style, iframeEl, ['styleId']);\n                        })]);\n                        return e;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    replace(iframeMirror, obj, iframeEl, keys) {\n        for (const key of keys) {\n            if (!Array.isArray(obj[key]) && typeof obj[key] !== 'number')\n                continue;\n            if (Array.isArray(obj[key])) {\n                obj[key] = iframeMirror.getIds(iframeEl, obj[key]);\n            }\n            else {\n                obj[key] = iframeMirror.getId(iframeEl, obj[key]);\n            }\n        }\n        return obj;\n    }\n    replaceIds(obj, iframeEl, keys) {\n        return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\n    }\n    replaceStyleIds(obj, iframeEl, keys) {\n        return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\n    }\n    replaceIdOnNode(node, iframeEl) {\n        this.replaceIds(node, iframeEl, ['id', 'rootId']);\n        if ('childNodes' in node) {\n            node.childNodes.forEach((child) => {\n                this.replaceIdOnNode(child, iframeEl);\n            });\n        }\n    }\n    patchRootIdOnNode(node, rootId) {\n        if (node.type !== NodeType$1.Document && !node.rootId)\n            node.rootId = rootId;\n        if ('childNodes' in node) {\n            node.childNodes.forEach((child) => {\n                this.patchRootIdOnNode(child, rootId);\n            });\n        }\n    }\n}\n\nclass ShadowDomManagerNoop {\n    init() {\n    }\n    addShadowRoot() {\n    }\n    observeAttachShadow() {\n    }\n    reset() {\n    }\n}\nclass ShadowDomManager {\n    constructor(options) {\n        this.shadowDoms = new WeakSet();\n        this.restoreHandlers = [];\n        this.mutationCb = options.mutationCb;\n        this.scrollCb = options.scrollCb;\n        this.bypassOptions = options.bypassOptions;\n        this.mirror = options.mirror;\n        this.init();\n    }\n    init() {\n        this.reset();\n        this.patchAttachShadow(Element, document);\n    }\n    addShadowRoot(shadowRoot, doc) {\n        if (!isNativeShadowDom(shadowRoot))\n            return;\n        if (this.shadowDoms.has(shadowRoot))\n            return;\n        this.shadowDoms.add(shadowRoot);\n        const observer = initMutationObserver({\n            ...this.bypassOptions,\n            doc,\n            mutationCb: this.mutationCb,\n            mirror: this.mirror,\n            shadowDomManager: this,\n        }, shadowRoot);\n        this.restoreHandlers.push(() => observer.disconnect());\n        this.restoreHandlers.push(initScrollObserver({\n            ...this.bypassOptions,\n            scrollCb: this.scrollCb,\n            doc: shadowRoot,\n            mirror: this.mirror,\n        }));\n        setTimeout$1(() => {\n            if (shadowRoot.adoptedStyleSheets &&\n                shadowRoot.adoptedStyleSheets.length > 0)\n                this.bypassOptions.stylesheetManager.adoptStyleSheets(shadowRoot.adoptedStyleSheets, this.mirror.getId(shadowRoot.host));\n            this.restoreHandlers.push(initAdoptedStyleSheetObserver({\n                mirror: this.mirror,\n                stylesheetManager: this.bypassOptions.stylesheetManager,\n            }, shadowRoot));\n        }, 0);\n    }\n    observeAttachShadow(iframeElement) {\n        if (!iframeElement.contentWindow || !iframeElement.contentDocument)\n            return;\n        this.patchAttachShadow(iframeElement.contentWindow.Element, iframeElement.contentDocument);\n    }\n    patchAttachShadow(element, doc) {\n        const manager = this;\n        this.restoreHandlers.push(patch(element.prototype, 'attachShadow', function (original) {\n            return function (option) {\n                const shadowRoot = original.call(this, option);\n                if (this.shadowRoot && inDom(this))\n                    manager.addShadowRoot(this.shadowRoot, doc);\n                return shadowRoot;\n            };\n        }));\n    }\n    reset() {\n        this.restoreHandlers.forEach((handler) => {\n            try {\n                handler();\n            }\n            catch (e) {\n            }\n        });\n        this.restoreHandlers = [];\n        this.shadowDoms = new WeakSet();\n    }\n}\n\nclass CanvasManagerNoop {\n    reset() {\n    }\n    freeze() {\n    }\n    unfreeze() {\n    }\n    lock() {\n    }\n    unlock() {\n    }\n    snapshot() {\n    }\n}\n\nclass StylesheetManager {\n    constructor(options) {\n        this.trackedLinkElements = new WeakSet();\n        this.styleMirror = new StyleSheetMirror();\n        this.mutationCb = options.mutationCb;\n        this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\n    }\n    attachLinkElement(linkEl, childSn) {\n        if ('_cssText' in childSn.attributes)\n            this.mutationCb({\n                adds: [],\n                removes: [],\n                texts: [],\n                attributes: [\n                    {\n                        id: childSn.id,\n                        attributes: childSn\n                            .attributes,\n                    },\n                ],\n            });\n        this.trackLinkElement(linkEl);\n    }\n    trackLinkElement(linkEl) {\n        if (this.trackedLinkElements.has(linkEl))\n            return;\n        this.trackedLinkElements.add(linkEl);\n        this.trackStylesheetInLinkElement(linkEl);\n    }\n    adoptStyleSheets(sheets, hostId) {\n        if (sheets.length === 0)\n            return;\n        const adoptedStyleSheetData = {\n            id: hostId,\n            styleIds: [],\n        };\n        const styles = [];\n        for (const sheet of sheets) {\n            let styleId;\n            if (!this.styleMirror.has(sheet)) {\n                styleId = this.styleMirror.add(sheet);\n                styles.push({\n                    styleId,\n                    rules: Array.from(sheet.rules || CSSRule, (r, index) => ({\n                        rule: stringifyRule(r),\n                        index,\n                    })),\n                });\n            }\n            else\n                styleId = this.styleMirror.getId(sheet);\n            adoptedStyleSheetData.styleIds.push(styleId);\n        }\n        if (styles.length > 0)\n            adoptedStyleSheetData.styles = styles;\n        this.adoptedStyleSheetCb(adoptedStyleSheetData);\n    }\n    reset() {\n        this.styleMirror.reset();\n        this.trackedLinkElements = new WeakSet();\n    }\n    trackStylesheetInLinkElement(linkEl) {\n    }\n}\n\nclass ProcessedNodeManager {\n    constructor() {\n        this.nodeMap = new WeakMap();\n        this.loop = true;\n        this.periodicallyClear();\n    }\n    periodicallyClear() {\n        onRequestAnimationFrame(() => {\n            this.clear();\n            if (this.loop)\n                this.periodicallyClear();\n        });\n    }\n    inOtherBuffer(node, thisBuffer) {\n        const buffers = this.nodeMap.get(node);\n        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));\n    }\n    add(node, buffer) {\n        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));\n    }\n    clear() {\n        this.nodeMap = new WeakMap();\n    }\n    destroy() {\n        this.loop = false;\n    }\n}\n\nlet wrappedEmit;\nlet _takeFullSnapshot;\nconst mirror = createMirror();\nfunction record(options = {}) {\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskAttributeFn, maskInputFn, maskTextFn, maxCanvasSize = null, packFn, sampling = {}, dataURLOptions = {}, mousemoveWait, recordCanvas = false, recordCrossOriginIframes = false, recordAfter = options.recordAfter === 'DOMContentLoaded'\n        ? options.recordAfter\n        : 'load', userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, ignoreCSSAttributes = new Set([]), errorHandler, onMutation, getCanvasManager, } = options;\n    registerErrorHandler(errorHandler);\n    const inEmittingFrame = recordCrossOriginIframes\n        ? window.parent === window\n        : true;\n    let passEmitsToParent = false;\n    if (!inEmittingFrame) {\n        try {\n            if (window.parent.document) {\n                passEmitsToParent = false;\n            }\n        }\n        catch (e) {\n            passEmitsToParent = true;\n        }\n    }\n    if (inEmittingFrame && !emit) {\n        throw new Error('emit function is required');\n    }\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\n        sampling.mousemove = mousemoveWait;\n    }\n    mirror.reset();\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n            radio: true,\n            checkbox: true,\n        }\n        : _maskInputOptions !== undefined\n            ? _maskInputOptions\n            : {};\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\n        ? {\n            script: true,\n            comment: true,\n            headFavicon: true,\n            headWhitespace: true,\n            headMetaSocial: true,\n            headMetaRobots: true,\n            headMetaHttpEquiv: true,\n            headMetaVerification: true,\n            headMetaAuthorship: _slimDOMOptions === 'all',\n            headMetaDescKeywords: _slimDOMOptions === 'all',\n        }\n        : _slimDOMOptions\n            ? _slimDOMOptions\n            : {};\n    polyfill();\n    let lastFullSnapshotEvent;\n    let incrementalSnapshotCount = 0;\n    const eventProcessor = (e) => {\n        for (const plugin of plugins || []) {\n            if (plugin.eventProcessor) {\n                e = plugin.eventProcessor(e);\n            }\n        }\n        if (packFn &&\n            !passEmitsToParent) {\n            e = packFn(e);\n        }\n        return e;\n    };\n    wrappedEmit = (r, isCheckout) => {\n        const e = r;\n        e.timestamp = nowTimestamp();\n        if (_optionalChain([mutationBuffers, 'access', _ => _[0], 'optionalAccess', _2 => _2.isFrozen, 'call', _3 => _3()]) &&\n            e.type !== EventType.FullSnapshot &&\n            !(e.type === EventType.IncrementalSnapshot &&\n                e.data.source === IncrementalSource.Mutation)) {\n            mutationBuffers.forEach((buf) => buf.unfreeze());\n        }\n        if (inEmittingFrame) {\n            _optionalChain([emit, 'optionalCall', _4 => _4(eventProcessor(e), isCheckout)]);\n        }\n        else if (passEmitsToParent) {\n            const message = {\n                type: 'rrweb',\n                event: eventProcessor(e),\n                origin: window.location.origin,\n                isCheckout,\n            };\n            window.parent.postMessage(message, '*');\n        }\n        if (e.type === EventType.FullSnapshot) {\n            lastFullSnapshotEvent = e;\n            incrementalSnapshotCount = 0;\n        }\n        else if (e.type === EventType.IncrementalSnapshot) {\n            if (e.data.source === IncrementalSource.Mutation &&\n                e.data.isAttachIframe) {\n                return;\n            }\n            incrementalSnapshotCount++;\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\n            const exceedTime = checkoutEveryNms &&\n                lastFullSnapshotEvent &&\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\n            if (exceedCount || exceedTime) {\n                takeFullSnapshot(true);\n            }\n        }\n    };\n    const wrappedMutationEmit = (m) => {\n        wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n                source: IncrementalSource.Mutation,\n                ...m,\n            },\n        });\n    };\n    const wrappedScrollEmit = (p) => wrappedEmit({\n        type: EventType.IncrementalSnapshot,\n        data: {\n            source: IncrementalSource.Scroll,\n            ...p,\n        },\n    });\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit({\n        type: EventType.IncrementalSnapshot,\n        data: {\n            source: IncrementalSource.CanvasMutation,\n            ...p,\n        },\n    });\n    const wrappedAdoptedStyleSheetEmit = (a) => wrappedEmit({\n        type: EventType.IncrementalSnapshot,\n        data: {\n            source: IncrementalSource.AdoptedStyleSheet,\n            ...a,\n        },\n    });\n    const stylesheetManager = new StylesheetManager({\n        mutationCb: wrappedMutationEmit,\n        adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit,\n    });\n    const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === 'boolean' && __RRWEB_EXCLUDE_IFRAME__\n        ? new IframeManagerNoop()\n        : new IframeManager({\n            mirror,\n            mutationCb: wrappedMutationEmit,\n            stylesheetManager: stylesheetManager,\n            recordCrossOriginIframes,\n            wrappedEmit,\n        });\n    for (const plugin of plugins || []) {\n        if (plugin.getMirror)\n            plugin.getMirror({\n                nodeMirror: mirror,\n                crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\n                crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror,\n            });\n    }\n    const processedNodeManager = new ProcessedNodeManager();\n    const canvasManager = _getCanvasManager(getCanvasManager, {\n        mirror,\n        win: window,\n        mutationCb: (p) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n                source: IncrementalSource.CanvasMutation,\n                ...p,\n            },\n        }),\n        recordCanvas,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        maxCanvasSize,\n        sampling: sampling['canvas'],\n        dataURLOptions,\n        errorHandler,\n    });\n    const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === 'boolean' &&\n        __RRWEB_EXCLUDE_SHADOW_DOM__\n        ? new ShadowDomManagerNoop()\n        : new ShadowDomManager({\n            mutationCb: wrappedMutationEmit,\n            scrollCb: wrappedScrollEmit,\n            bypassOptions: {\n                onMutation,\n                blockClass,\n                blockSelector,\n                unblockSelector,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                inlineStylesheet,\n                maskInputOptions,\n                dataURLOptions,\n                maskAttributeFn,\n                maskTextFn,\n                maskInputFn,\n                recordCanvas,\n                inlineImages,\n                sampling,\n                slimDOMOptions,\n                iframeManager,\n                stylesheetManager,\n                canvasManager,\n                keepIframeSrcFn,\n                processedNodeManager,\n            },\n            mirror,\n        });\n    const takeFullSnapshot = (isCheckout = false) => {\n        wrappedEmit({\n            type: EventType.Meta,\n            data: {\n                href: window.location.href,\n                width: getWindowWidth(),\n                height: getWindowHeight(),\n            },\n        }, isCheckout);\n        stylesheetManager.reset();\n        shadowDomManager.init();\n        mutationBuffers.forEach((buf) => buf.lock());\n        const node = snapshot(document, {\n            mirror,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskAllText,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            inlineStylesheet,\n            maskAllInputs: maskInputOptions,\n            maskAttributeFn,\n            maskInputFn,\n            maskTextFn,\n            slimDOM: slimDOMOptions,\n            dataURLOptions,\n            recordCanvas,\n            inlineImages,\n            onSerialize: (n) => {\n                if (isSerializedIframe(n, mirror)) {\n                    iframeManager.addIframe(n);\n                }\n                if (isSerializedStylesheet(n, mirror)) {\n                    stylesheetManager.trackLinkElement(n);\n                }\n                if (hasShadowRoot(n)) {\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\n                }\n            },\n            onIframeLoad: (iframe, childSn) => {\n                iframeManager.attachIframe(iframe, childSn);\n                shadowDomManager.observeAttachShadow(iframe);\n            },\n            onStylesheetLoad: (linkEl, childSn) => {\n                stylesheetManager.attachLinkElement(linkEl, childSn);\n            },\n            keepIframeSrcFn,\n        });\n        if (!node) {\n            return console.warn('Failed to snapshot the document');\n        }\n        wrappedEmit({\n            type: EventType.FullSnapshot,\n            data: {\n                node,\n                initialOffset: getWindowScroll(window),\n            },\n        });\n        mutationBuffers.forEach((buf) => buf.unlock());\n        if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\n            stylesheetManager.adoptStyleSheets(document.adoptedStyleSheets, mirror.getId(document));\n    };\n    _takeFullSnapshot = takeFullSnapshot;\n    try {\n        const handlers = [];\n        const observe = (doc) => {\n            return callbackWrapper(initObservers)({\n                onMutation,\n                mutationCb: wrappedMutationEmit,\n                mousemoveCb: (positions, source) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source,\n                        positions,\n                    },\n                }),\n                mouseInteractionCb: (d) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.MouseInteraction,\n                        ...d,\n                    },\n                }),\n                scrollCb: wrappedScrollEmit,\n                viewportResizeCb: (d) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.ViewportResize,\n                        ...d,\n                    },\n                }),\n                inputCb: (v) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Input,\n                        ...v,\n                    },\n                }),\n                mediaInteractionCb: (p) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.MediaInteraction,\n                        ...p,\n                    },\n                }),\n                styleSheetRuleCb: (r) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.StyleSheetRule,\n                        ...r,\n                    },\n                }),\n                styleDeclarationCb: (r) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.StyleDeclaration,\n                        ...r,\n                    },\n                }),\n                canvasMutationCb: wrappedCanvasMutationEmit,\n                fontCb: (p) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Font,\n                        ...p,\n                    },\n                }),\n                selectionCb: (p) => {\n                    wrappedEmit({\n                        type: EventType.IncrementalSnapshot,\n                        data: {\n                            source: IncrementalSource.Selection,\n                            ...p,\n                        },\n                    });\n                },\n                customElementCb: (c) => {\n                    wrappedEmit({\n                        type: EventType.IncrementalSnapshot,\n                        data: {\n                            source: IncrementalSource.CustomElement,\n                            ...c,\n                        },\n                    });\n                },\n                blockClass,\n                ignoreClass,\n                ignoreSelector,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                maskInputOptions,\n                inlineStylesheet,\n                sampling,\n                recordCanvas,\n                inlineImages,\n                userTriggeredOnInput,\n                collectFonts,\n                doc,\n                maskAttributeFn,\n                maskInputFn,\n                maskTextFn,\n                keepIframeSrcFn,\n                blockSelector,\n                unblockSelector,\n                slimDOMOptions,\n                dataURLOptions,\n                mirror,\n                iframeManager,\n                stylesheetManager,\n                shadowDomManager,\n                processedNodeManager,\n                canvasManager,\n                ignoreCSSAttributes,\n                plugins: _optionalChain([plugins\n, 'optionalAccess', _5 => _5.filter, 'call', _6 => _6((p) => p.observer)\n, 'optionalAccess', _7 => _7.map, 'call', _8 => _8((p) => ({\n                    observer: p.observer,\n                    options: p.options,\n                    callback: (payload) => wrappedEmit({\n                        type: EventType.Plugin,\n                        data: {\n                            plugin: p.name,\n                            payload,\n                        },\n                    }),\n                }))]) || [],\n            }, {});\n        };\n        iframeManager.addLoadListener((iframeEl) => {\n            try {\n                handlers.push(observe(iframeEl.contentDocument));\n            }\n            catch (error) {\n                console.warn(error);\n            }\n        });\n        const init = () => {\n            takeFullSnapshot();\n            handlers.push(observe(document));\n        };\n        if (document.readyState === 'interactive' ||\n            document.readyState === 'complete') {\n            init();\n        }\n        else {\n            handlers.push(on('DOMContentLoaded', () => {\n                wrappedEmit({\n                    type: EventType.DomContentLoaded,\n                    data: {},\n                });\n                if (recordAfter === 'DOMContentLoaded')\n                    init();\n            }));\n            handlers.push(on('load', () => {\n                wrappedEmit({\n                    type: EventType.Load,\n                    data: {},\n                });\n                if (recordAfter === 'load')\n                    init();\n            }, window));\n        }\n        return () => {\n            handlers.forEach((h) => h());\n            processedNodeManager.destroy();\n            _takeFullSnapshot = undefined;\n            unregisterErrorHandler();\n        };\n    }\n    catch (error) {\n        console.warn(error);\n    }\n}\nfunction takeFullSnapshot(isCheckout) {\n    if (!_takeFullSnapshot) {\n        throw new Error('please take full snapshot after start recording');\n    }\n    _takeFullSnapshot(isCheckout);\n}\nrecord.mirror = mirror;\nrecord.takeFullSnapshot = takeFullSnapshot;\nfunction _getCanvasManager(getCanvasManagerFn, options) {\n    try {\n        return getCanvasManagerFn\n            ? getCanvasManagerFn(options)\n            : new CanvasManagerNoop();\n    }\n    catch (e2) {\n        console.warn('Unable to initialize CanvasManager');\n        return new CanvasManagerNoop();\n    }\n}\n\nconst ReplayEventTypeIncrementalSnapshot = 3;\nconst ReplayEventTypeCustom = 5;\n\n/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nfunction timestampToMs(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nfunction timestampToS(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Add a breadcrumb event to replay.\n */\nfunction addBreadcrumbEvent(replay, breadcrumb) {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category )) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/** Get the closest interactive parent element, or else return the given element. */\nfunction getClosestInteractive(element) {\n  const closestInteractive = element.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || element;\n}\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nfunction getClickTargetNode(event) {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  return getClosestInteractive(target);\n}\n\n/** Get the event target node. */\nfunction getTargetNode(event) {\n  if (isEventWithTarget(event)) {\n    return event.target ;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event) {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n\nlet handlers;\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nfunction onWindowOpen(cb) {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers ).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen() {\n  fill(WINDOW, 'open', function (originalWindowOpen) {\n    return function (...args) {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n\n/** Handle a click. */\nfunction handleClick(clickDetector, clickBreadcrumb, node) {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nclass ClickDetector  {\n  // protected for testing\n\n   constructor(\n    replay,\n    slowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n   addListeners() {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n   removeListeners() {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n   handleClick(breadcrumb, node) {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n   registerMutation(timestamp = Date.now()) {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n   registerScroll(timestamp = Date.now()) {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n   registerClick(element) {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node );\n  }\n\n  /** Count multiple clicks on elements. */\n   _handleMultiClick(node) {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n   _getClicks(node) {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n   _checkClicks() {\n    const timedOutClicks = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n   _generateBreadcrumbs(click) {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n   _scheduleCheckClicks() {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout$2(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nfunction ignoreElement(node, ignoreSelector) {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb) {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds() {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nfunction updateClickDetectorForRecordingEvent(clickDetector, event) {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (source === IncrementalSource.Mutation) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch (e) {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event) {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event,\n) {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n\n/**\n * Create a breadcrumb for a replay.\n */\nfunction createBreadcrumb(\n  breadcrumb,\n) {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType || (NodeType = {}));\n\n// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nfunction getAttributesToRecord(attributes) {\n  const obj = {};\n  if (!attributes['data-sentry-component'] && attributes['data-sentry-element']) {\n    attributes['data-sentry-component'] = attributes['data-sentry-element'];\n  }\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n\nconst handleDomListener = (\n  replay,\n) => {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick ? (handlerData.event ) : undefined;\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      event.target &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result ,\n        getClickTargetNode(handlerData.event ) ,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nfunction getBaseDomBreadcrumb(target, message) {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text ).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nfunction handleDom(handlerData) {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData) {\n  const isClick = handlerData.name === 'click';\n\n  let message;\n  let target = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event ) : getTargetNode(handlerData.event );\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node) {\n  return node.type === NodeType.Element;\n}\n\n/** Handle keyboard events & create breadcrumbs. */\nfunction handleKeyboardEvent(replay, event) {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nfunction getKeyboardBreadcrumb(event) {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target ) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target , message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target) {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES\n\n = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nfunction createPerformanceEntries(\n  entries,\n) {\n  return entries.map(createPerformanceEntry).filter(Boolean) ;\n}\n\nfunction createPerformanceEntry(entry) {\n  if (!ENTRY_TYPES[entry.entryType]) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time) {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry) {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry) {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry,\n) {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on an LCP metric.\n */\nfunction getLargestContentfulPaint(metric\n\n) {\n  const entries = metric.entries;\n  const lastEntry = entries[entries.length - 1] ;\n  const element = lastEntry ? lastEntry.element : undefined;\n\n  const value = metric.value;\n\n  const end = getAbsoluteTime(value);\n\n  const data = {\n    type: 'largest-contentful-paint',\n    name: 'largest-contentful-paint',\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      nodeId: element ? record.mirror.getId(element) : undefined,\n    },\n  };\n\n  return data;\n}\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nfunction setupPerformanceObserver(replay) {\n  function addPerformanceEntry(entry) {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }) {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks = [];\n\n  (['navigation', 'paint', 'resource'] ).forEach(type => {\n    clearCallbacks.push(addPerformanceInstrumentationHandler(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    addLcpInstrumentationHandler(({ metric }) => {\n      replay.replayPerformanceEntries.push(getLargestContentfulPaint(metric));\n    }),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nconst r = `var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}},L=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},O=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},j=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},q=function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&j(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}},B=function(t){return 10+(t.filename?t.filename.length+1:0)},G=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(O(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();var H=function(){function t(t,n){this.c=L(),this.v=1,G.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),G.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=O(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=L();i.p(n.dictionary),j(t,2,i.d())}}(r,this.o),this.v=0),n&&j(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),J=\"undefined\"!=typeof TextEncoder&&new TextEncoder,K=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{K.decode(F,{stream:!0})}catch(t){}var N=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(P(t),this.d=n||!1)},t}();function P(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(J)return J.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}function Q(t){return function(t,n){n||(n={});var r=S(),e=t.length;r.p(t);var i=O(t,n,B(n),8),a=i.length;return q(i,n),j(i,a-8,r.d()),j(i,a-4,e),i}(P(t))}const R=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(let r=0,e=t.length;r<e;r++)n+=t[r].length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new H,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new N(((t,n)=>{this.deflate.push(t,n)})),this.stream.push(\"[\")}},V={clear:()=>{R.clear()},addEvent:t=>R.addEvent(t),finish:()=>R.finish(),compress:t=>Q(t)};addEventListener(\"message\",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in V&&\"function\"==typeof V[n])try{const t=V[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n\nfunction e(){const e=new Blob([r]);return URL.createObjectURL(e)}\n\n/**\n * Log a message in debug mode, and add a breadcrumb when _experiment.traceInternals is enabled.\n */\nfunction logInfo(message, shouldAddBreadcrumb) {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    addLogBreadcrumb(message);\n  }\n}\n\n/**\n * Log a message, and add a breadcrumb in the next tick.\n * This is necessary when the breadcrumb may be added before the replay is initialized.\n */\nfunction logInfoNextTick(message, shouldAddBreadcrumb) {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    // Wait a tick here to avoid race conditions for some initial logs\n    // which may be added before replay is initialized\n    setTimeout$2(() => {\n      addLogBreadcrumb(message);\n    }, 0);\n  }\n}\n\nfunction addLogBreadcrumb(message) {\n  addBreadcrumb(\n    {\n      category: 'console',\n      data: {\n        logger: 'replay',\n      },\n      level: 'info',\n      message,\n    },\n    { level: 'info' },\n  );\n}\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nclass EventBufferSizeExceededError extends Error {\n   constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nclass EventBufferArray  {\n  /** All the events that are buffered to be sent. */\n\n  /** @inheritdoc */\n\n   constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n   destroy() {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n   async addEvent(event) {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n   finish() {\n    return new Promise(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n   clear() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass WorkerHandler {\n\n   constructor(worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }) => {\n          if ((data ).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n   destroy() {\n    logInfo('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n   postMessage(method, arg) {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }) => {\n        const response = data ;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          DEBUG_BUILD && logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response );\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n   _getAndIncrementId() {\n    return this._id++;\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass EventBufferCompressionWorker  {\n  /** @inheritdoc */\n\n   constructor(worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n   destroy() {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n   addEvent(event) {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n   finish() {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n   clear() {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    this._worker.postMessage('clear').then(null, e => {\n      DEBUG_BUILD && logger.warn('[Replay] Sending \"clear\" message to worker failed', e);\n    });\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n   _sendEventToWorker(data) {\n    return this._worker.postMessage('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n   async _finishRequest() {\n    const response = await this._worker.postMessage('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nclass EventBufferProxy  {\n\n   constructor(worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n   get hasEvents() {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n   get hasCheckout() {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n   set hasCheckout(value) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritDoc */\n   destroy() {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n   clear() {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n   addEvent(event) {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n   async finish() {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n   ensureWorkerIsLoaded() {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n   async _ensureWorkerIsLoaded() {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      logInfo('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n   async _switchToCompressionWorker() {\n    const { events, hasCheckout } = this._fallback;\n\n    const addEventPromises = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      DEBUG_BUILD && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n\n/**\n * Create an event buffer for replays.\n */\nfunction createEventBuffer({\n  useCompression,\n  workerUrl: customWorkerUrl,\n}) {\n  if (\n    useCompression &&\n    // eslint-disable-next-line no-restricted-globals\n    window.Worker\n  ) {\n    const worker = _loadWorker(customWorkerUrl);\n\n    if (worker) {\n      return worker;\n    }\n  }\n\n  logInfo('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\nfunction _loadWorker(customWorkerUrl) {\n  try {\n    const workerUrl = customWorkerUrl || _getWorkerUrl();\n\n    if (!workerUrl) {\n      return;\n    }\n\n    logInfo(`[Replay] Using compression worker${customWorkerUrl ? ` from ${customWorkerUrl}` : ''}`);\n    const worker = new Worker(workerUrl);\n    return new EventBufferProxy(worker);\n  } catch (error) {\n    logInfo('[Replay] Failed to create compression worker');\n    // Fall back to use simple event buffer array\n  }\n}\n\nfunction _getWorkerUrl() {\n  if (typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ === 'undefined' || !__SENTRY_EXCLUDE_REPLAY_WORKER__) {\n    return e();\n  }\n\n  return '';\n}\n\n/** If sessionStorage is available. */\nfunction hasSessionStorage() {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nfunction clearSession(replay) {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession() {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nfunction isSampled(sampleRate) {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n\n/**\n * Get a session with defaults & applied sampling.\n */\nfunction makeSession(session) {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n\n/**\n * Save a session to session storage.\n */\nfunction saveSession(session) {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nfunction getSessionSampleType(sessionSampleRate, allowBuffering) {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nfunction createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false },\n  { previousSessionId } = {},\n) {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n\n/**\n * Fetches a session from storage\n */\nfunction fetchSession(traceInternals) {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) ;\n\n    logInfoNextTick('[Replay] Loading existing session', traceInternals);\n\n    return makeSession(sessionObj);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nfunction isExpired(\n  initialTime,\n  expiry,\n  targetTime = +new Date(),\n) {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n\n/**\n * Checks to see if session is expired\n */\nfunction isSessionExpired(\n  session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  },\n) {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n\n/** If the session should be refreshed or not. */\nfunction shouldRefreshSession(\n  session,\n  { sessionIdleExpire, maxReplayDuration },\n) {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nfunction loadOrCreateSession(\n  {\n    traceInternals,\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }\n\n,\n  sessionOptions,\n) {\n  const existingSession = sessionOptions.stickySession && fetchSession(traceInternals);\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    logInfoNextTick('[Replay] Creating new session', traceInternals);\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  logInfoNextTick('[Replay] Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n\nfunction isCustomEvent(event) {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nfunction addEventSync(replay, event, isCheckout) {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  // This should never reject\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nfunction addEvent(\n  replay,\n  event,\n  isCheckout,\n) {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay,\n  event,\n  isCheckout,\n) {\n  if (!replay.eventBuffer) {\n    return null;\n  }\n\n  try {\n    if (isCheckout && replay.recordingMode === 'buffer') {\n      replay.eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      replay.eventBuffer.hasCheckout = true;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    DEBUG_BUILD && logger.error(error);\n    await replay.stop({ reason });\n\n    const client = getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nfunction shouldAddEvent(replay, event) {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    logInfo(\n      `[Replay] Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`,\n      replay.getOptions()._experiments.traceInternals,\n    );\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event,\n  callback,\n) {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    DEBUG_BUILD &&\n      logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n\n/** If the event is an error event */\nfunction isErrorEvent(event) {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nfunction isReplayEvent(event) {\n  return event.type === 'replay_event';\n}\n\n/** If the event is a feedback event */\nfunction isFeedbackEvent(event) {\n  return event.type === 'feedback';\n}\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nfunction handleAfterSendEvent(replay) {\n  return (event, sendResponse) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (!statusCode || statusCode < 200 || statusCode >= 300) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay, event) {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts && event.contexts.trace && event.contexts.trace.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id );\n  }\n}\n\nfunction handleErrorEvent(replay, event) {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode !== 'buffer' || !event.tags || !event.tags.replayId) {\n    return;\n  }\n\n  const { beforeErrorSampling } = replay.getOptions();\n  if (typeof beforeErrorSampling === 'function' && !beforeErrorSampling(event)) {\n    return;\n  }\n\n  setTimeout$2(() => {\n    // Capture current event buffer as new replay\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.sendBufferedReplayOrFlush();\n  });\n}\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nfunction handleBeforeSendEvent(replay) {\n  return (event) => {\n    if (!replay.isEnabled() || !isErrorEvent(event)) {\n      return;\n    }\n\n    handleHydrationError(replay, event);\n  };\n}\n\nfunction handleHydrationError(replay, event) {\n  const exceptionValue = event.exception && event.exception.values && event.exception.values[0].value;\n  if (typeof exceptionValue !== 'string') {\n    return;\n  }\n\n  if (\n    // Only matches errors in production builds of react-dom\n    // Example https://reactjs.org/docs/error-decoder.html?invariant=423\n    // With newer React versions, the messages changed to a different website https://react.dev/errors/418\n    exceptionValue.match(\n      /(reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=|react\\.dev\\/errors\\/)(418|419|422|423|425)/,\n    ) ||\n    // Development builds of react-dom\n    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.\n    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.\n    exceptionValue.match(/(does not match server-rendered HTML|Hydration failed because)/i)\n  ) {\n    const breadcrumb = createBreadcrumb({\n      category: 'replay.hydrate-error',\n    });\n    addBreadcrumbEvent(replay, breadcrumb);\n  }\n}\n\n/**\n * Handle breadcrumbs that Sentry captures, and make sure to capture relevant breadcrumbs to Replay as well.\n */\nfunction handleBreadcrumbs(replay) {\n  const client = getClient();\n\n  if (!client) {\n    return;\n  }\n\n  client.on('beforeAddBreadcrumb', breadcrumb => beforeAddBreadcrumb(replay, breadcrumb));\n}\n\nfunction beforeAddBreadcrumb(replay, breadcrumb) {\n  if (!replay.isEnabled() || !isBreadcrumbWithCategory(breadcrumb)) {\n    return;\n  }\n\n  const result = normalizeBreadcrumb(breadcrumb);\n  if (result) {\n    addBreadcrumbEvent(replay, result);\n  }\n}\n\n/** Exported only for tests. */\nfunction normalizeBreadcrumb(breadcrumb) {\n  if (\n    !isBreadcrumbWithCategory(breadcrumb) ||\n    [\n      // fetch & xhr are handled separately,in handleNetworkBreadcrumbs\n      'fetch',\n      'xhr',\n      // These two are breadcrumbs for emitted sentry events, we don't care about them\n      'sentry.event',\n      'sentry.transaction',\n    ].includes(breadcrumb.category) ||\n    // We capture UI breadcrumbs separately\n    breadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (breadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(breadcrumb);\n  }\n\n  return createBreadcrumb(breadcrumb);\n}\n\n/** exported for tests only */\nfunction normalizeConsoleBreadcrumb(\n  breadcrumb,\n) {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          isTruncated = true;\n          // We use the pretty printed JSON string here as a base\n          return `${JSON.stringify(normalizedArg, null, 2).slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n        }\n        return normalizedArg;\n      } catch (e) {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n\nfunction isBreadcrumbWithCategory(breadcrumb) {\n  return !!breadcrumb.category;\n}\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nfunction isRrwebError(event, hint) {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Add a feedback breadcrumb event to replay.\n */\nfunction addFeedbackBreadcrumb(replay, event) {\n  replay.triggerUserActivity();\n  replay.addUpdate(() => {\n    if (!event.timestamp) {\n      // Ignore events that don't have timestamps (this shouldn't happen, more of a typing issue)\n      // Return true here so that we don't flush\n      return true;\n    }\n\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: event.timestamp * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: {\n          timestamp: event.timestamp,\n          type: 'default',\n          category: 'sentry.feedback',\n          data: {\n            feedbackId: event.event_id,\n          },\n        },\n      },\n    } );\n\n    return false;\n  });\n}\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nfunction shouldSampleForBufferEvent(replay, event) {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n\n/**\n * Returns a listener to be added to `addEventProcessor(listener)`.\n */\nfunction handleGlobalEventListener(replay) {\n  return Object.assign(\n    (event, hint) => {\n      // Do nothing if replay has been disabled\n      if (!replay.isEnabled()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors, transactions, and feedbacks, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event) && !isFeedbackEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        return event;\n      }\n\n      if (isFeedbackEvent(event)) {\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        replay.flush();\n        event.contexts.feedback.replay_id = replay.getSessionId();\n        // Add a replay breadcrumb for this piece of feedback\n        addFeedbackBreadcrumb(replay, event);\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        DEBUG_BUILD && logger.log('[Replay] Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n\n/**\n * Create a \"span\" for each performance entry.\n */\nfunction createPerformanceSpans(\n  replay,\n  entries,\n) {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n\nfunction handleHistory(handlerData) {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addHistoryInstrumentationHandler(listener)`.\n */\nfunction handleHistorySpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nfunction shouldFilterRequest(replay, url) {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (DEBUG_BUILD && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return isSentryRequestUrl(url, getClient());\n}\n\n/** Add a performance entry breadcrumb */\nfunction addNetworkBreadcrumb(\n  replay,\n  result,\n) {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n\n/** Get the size of a body. */\nfunction getBodySize(body) {\n  if (!body) {\n    return undefined;\n  }\n\n  const textEncoder = new TextEncoder();\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch (e) {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nfunction parseContentLengthHeader(header) {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nfunction getBodyString(body) {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof URLSearchParams) {\n      return [body.toString()];\n    }\n\n    if (body instanceof FormData) {\n      return [_serializeFormData(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch (e2) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\n/** Merge a warning into an existing network request/response. */\nfunction mergeWarning(\n  info,\n  warning,\n) {\n  if (!info) {\n    return {\n      headers: {},\n      size: undefined,\n      _meta: {\n        warnings: [warning],\n      },\n    };\n  }\n\n  const newMeta = { ...info._meta };\n  const existingWarnings = newMeta.warnings || [];\n  newMeta.warnings = [...existingWarnings, warning];\n\n  info._meta = newMeta;\n  return info;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nfunction makeNetworkReplayBreadcrumb(\n  type,\n  data,\n) {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: dropUndefinedKeys({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nfunction buildSkippedNetworkRequestOrResponse(bodySize) {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nfunction buildNetworkRequestOrResponse(\n  headers,\n  bodySize,\n  body,\n) {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings && warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nfunction getAllowedHeaders(headers, allowedHeaders) {\n  return Object.keys(headers).reduce((filteredHeaders, key) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = headers[key];\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData) {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-expect-error passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body)\n\n {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n  const isProbablyJson = _strIsProbablyJson(body);\n\n  if (exceedsSizeLimit) {\n    const truncatedBody = body.slice(0, NETWORK_BODY_MAX_SIZE);\n\n    if (isProbablyJson) {\n      return {\n        body: truncatedBody,\n        warnings: ['MAYBE_JSON_TRUNCATED'],\n      };\n    }\n\n    return {\n      body: `${truncatedBody}…`,\n      warnings: ['TEXT_TRUNCATED'],\n    };\n  }\n\n  if (isProbablyJson) {\n    try {\n      const jsonBody = JSON.parse(body);\n      return {\n        body: jsonBody,\n      };\n    } catch (e3) {\n      // fall back to just send the body as string\n    }\n  }\n\n  return {\n    body,\n  };\n}\n\nfunction _strIsProbablyJson(str) {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nfunction urlMatches(url, urls) {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nfunction getFullUrl(url, baseURI = WINDOW.document.baseURI) {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nasync function captureFetchBreadcrumbToReplay(\n  breadcrumb,\n  hint,\n  options\n\n,\n) {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nfunction enrichFetchBreadcrumb(\n  breadcrumb,\n  hint,\n) {\n  const { input, response } = hint;\n\n  const body = input ? _getFetchRequestArgBody(input) : undefined;\n  const reqSize = getBodySize(body);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders },\n  input,\n  requestBodySize,\n) {\n  const headers = input ? getRequestHeaders(input, networkRequestHeaders) : {};\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const [bodyStr, warning] = getBodyString(requestBody);\n  const data = buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n\n  if (warning) {\n    return mergeWarning(data, warning);\n  }\n\n  return data;\n}\n\n/** Exported only for tests. */\nasync function _getResponseInfo(\n  captureDetails,\n  {\n    networkCaptureBodies,\n    networkResponseHeaders,\n  },\n  response,\n  responseBodySize,\n) {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = response ? getAllHeaders(response.headers, networkResponseHeaders) : {};\n\n  if (!response || (!networkCaptureBodies && responseBodySize !== undefined)) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  const [bodyText, warning] = await _parseFetchResponseBody(response);\n  const result = getResponseData(bodyText, {\n    networkCaptureBodies,\n\n    responseBodySize,\n    captureDetails,\n    headers,\n  });\n\n  if (warning) {\n    return mergeWarning(result, warning);\n  }\n\n  return result;\n}\n\nfunction getResponseData(\n  bodyText,\n  {\n    networkCaptureBodies,\n    responseBodySize,\n    captureDetails,\n    headers,\n  }\n\n,\n) {\n  try {\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined ? getBodySize(bodyText) : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize response body', error);\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchResponseBody(response) {\n  const res = _tryCloneResponse(response);\n\n  if (!res) {\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  try {\n    const text = await _tryGetResponseText(res);\n    return [text];\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to get text body from response', error);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs = []) {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] ).body;\n}\n\nfunction getAllHeaders(headers, allowedHeaders) {\n  const allHeaders = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) ;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs, allowedHeaders) {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] , allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] , allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input,\n  allowedHeaders,\n) {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\nfunction _tryCloneResponse(response) {\n  try {\n    // We have to clone this, as the body can only be read once\n    return response.clone();\n  } catch (error) {\n    // this can throw if the response was already consumed before\n    DEBUG_BUILD && logger.warn('[Replay] Failed to clone response body', error);\n  }\n}\n\n/**\n * Get the response body of a fetch request, or timeout after 500ms.\n * Fetch can return a streaming body, that may not resolve (or not for a long time).\n * If that happens, we rather abort after a short time than keep waiting for this.\n */\nfunction _tryGetResponseText(response) {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout$2(() => reject(new Error('Timeout while trying to read response body')), 500);\n\n    _getResponseText(response)\n      .then(\n        txt => resolve(txt),\n        reason => reject(reason),\n      )\n      .finally(() => clearTimeout(timeout));\n  });\n}\n\nasync function _getResponseText(response) {\n  // Force this to be a promise, just to be safe\n  // eslint-disable-next-line no-return-await\n  return await response.text();\n}\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nasync function captureXhrBreadcrumbToReplay(\n  breadcrumb,\n  hint,\n  options,\n) {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture xhr breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nfunction enrichXhrBreadcrumb(\n  breadcrumb,\n  hint,\n) {\n  const { xhr, input } = hint;\n\n  if (!xhr) {\n    return;\n  }\n\n  const reqSize = getBodySize(input);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : _getBodySize(xhr.response, xhr.responseType);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!xhr || !urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const [requestBody, requestWarning] = options.networkCaptureBodies ? getBodyString(input) : [undefined];\n  const [responseBody, responseWarning] = options.networkCaptureBodies ? _getXhrResponseBody(xhr) : [undefined];\n\n  const request = buildNetworkRequestOrResponse(networkRequestHeaders, requestBodySize, requestBody);\n  const response = buildNetworkRequestOrResponse(networkResponseHeaders, responseBodySize, responseBody);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request: requestWarning ? mergeWarning(request, requestWarning) : request,\n    response: responseWarning ? mergeWarning(response, responseWarning) : response,\n  };\n}\n\nfunction getResponseHeaders(xhr) {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc, line) => {\n    const [key, value] = line.split(': ');\n    acc[key.toLowerCase()] = value;\n    return acc;\n  }, {});\n}\n\nfunction _getXhrResponseBody(xhr) {\n  // We collect errors that happen, but only log them if we can't get any response body\n  const errors = [];\n\n  try {\n    return [xhr.responseText];\n  } catch (e) {\n    errors.push(e);\n  }\n\n  // Try to manually parse the response body, if responseText fails\n  try {\n    return _parseXhrResponse(xhr.response, xhr.responseType);\n  } catch (e) {\n    errors.push(e);\n  }\n\n  DEBUG_BUILD && logger.warn('[Replay] Failed to get xhr response body', ...errors);\n\n  return [undefined];\n}\n\n/**\n * Get the string representation of the XHR response.\n * Based on MDN, these are the possible types of the response:\n * string\n * ArrayBuffer\n * Blob\n * Document\n * POJO\n *\n * Exported only for tests.\n */\nfunction _parseXhrResponse(\n  body,\n  responseType,\n) {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof Document) {\n      return [body.body.outerHTML];\n    }\n\n    if (responseType === 'json' && body && typeof body === 'object') {\n      return [JSON.stringify(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch (e2) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\nfunction _getBodySize(\n  body,\n  responseType,\n) {\n  try {\n    const bodyStr = responseType === 'json' && body && typeof body === 'object' ? JSON.stringify(body) : body;\n    return getBodySize(bodyStr);\n  } catch (e3) {\n    return undefined;\n  }\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nfunction handleNetworkBreadcrumbs(replay) {\n  const client = getClient();\n\n  try {\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options = {\n      replay,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    }\n  } catch (e2) {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nfunction beforeAddNetworkBreadcrumb(\n  options,\n  breadcrumb,\n  hint,\n) {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    DEBUG_BUILD && logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb) {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb) {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint) {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint) {\n  return hint && hint.response;\n}\n\n/**\n * Add global listeners that cannot be removed.\n */\nfunction addGlobalListeners(replay) {\n  // Listeners from core SDK //\n  const client = getClient();\n\n  addClickKeypressInstrumentationHandler(handleDomListener(replay));\n  addHistoryInstrumentationHandler(handleHistorySpanListener(replay));\n  handleBreadcrumbs(replay);\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay);\n  addEventProcessor(eventProcessor);\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (client) {\n    client.on('beforeSendEvent', handleBeforeSendEvent(replay));\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('spanStart', span => {\n      replay.lastActiveSpan = span;\n    });\n\n    // We may be missing the initial spanStart due to timing issues,\n    // so we capture it on finish again.\n    client.on('spanEnd', span => {\n      replay.lastActiveSpan = span;\n    });\n\n    // We want to flush replay\n    client.on('beforeSendFeedback', (feedbackEvent, options) => {\n      const replayId = replay.getSessionId();\n      if (options && options.includeReplay && replay.isEnabled() && replayId) {\n        // This should never reject\n        if (feedbackEvent.contexts && feedbackEvent.contexts.feedback) {\n          feedbackEvent.contexts.feedback.replay_id = replayId;\n        }\n      }\n    });\n  }\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nasync function addMemoryEntry(replay) {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry) {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nfunction debounce(func, wait, options) {\n  let callbackReturnValue;\n\n  let timerId;\n  let maxTimerId;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc() {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers() {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush() {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced() {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout$2(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout$2(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nfunction getHandleRecordingEmit(replay) {\n  let hadFirstEvent = false;\n\n  return (event, _isCheckout) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    if (replay.clickDetector) {\n      updateClickDetectorForRecordingEvent(replay.clickDetector, event);\n    }\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          logInfo(\n            `[Replay] Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`,\n            replay.getOptions()._experiments.traceInternals,\n          );\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nfunction createOptionsEvent(replay) {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        shouldRecordCanvas: replay.isRecordingCanvas(),\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay, isCheckout) {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nfunction createReplayEnvelope(\n  replayEvent,\n  recordingData,\n  dsn,\n  tunnel,\n) {\n  return createEnvelope(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n\n/**\n * Prepare the recording data ready to be sent.\n */\nfunction prepareRecordingData({\n  recordingData,\n  headers,\n}\n\n) {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nasync function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}\n\n) {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n\n  const eventHint = { event_id, integrations };\n\n  client.emit('preprocessEvent', event, eventHint);\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) ;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n\n/**\n * Send replay attachment using `fetch()`\n */\nasync function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}) {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = getClient();\n  const scope = getCurrentScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return resolvedSyncPromise({});\n  }\n\n  const baseEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    logInfo('An event processor returned `null`, will not send event.');\n    return resolvedSyncPromise({});\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch (e) {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = updateRateLimits({}, response);\n  if (isRateLimited(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nclass TransportStatusCodeError extends Error {\n   constructor(statusCode) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nclass RateLimitError extends Error {\n\n   constructor(rateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nasync function sendReplay(\n  replayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n) {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError || err instanceof RateLimitError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (DEBUG_BUILD && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch (e) {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout$2(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n\nconst THROTTLED = '__THROTTLED';\nconst SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction throttle(\n  fn,\n  maxCount,\n  durationSeconds,\n) {\n  const counter = new Map();\n\n  const _cleanup = (now) => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = () => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest) => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n\n/* eslint-disable max-lines */ // TODO: We might want to split this file up\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nclass ReplayContainer  {\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n\n  /**\n   * The current or last active span.\n   * This is only available when performance is enabled.\n   */\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n\n  /**\n   * Is the integration currently active?\n   */\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n\n  /**\n   * Function to stop recording\n   */\n\n  /**\n   * Internal use for canvas recording options\n   */\n\n   constructor({\n    options,\n    recordingOptions,\n  }\n\n) {ReplayContainer.prototype.__init.call(this);ReplayContainer.prototype.__init2.call(this);ReplayContainer.prototype.__init3.call(this);ReplayContainer.prototype.__init4.call(this);ReplayContainer.prototype.__init5.call(this);ReplayContainer.prototype.__init6.call(this);\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } ;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event, isCheckout) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n   getContext() {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n   isEnabled() {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n   isPaused() {\n    return this._isPaused;\n  }\n\n  /**\n   * Determine if canvas recording is enabled\n   */\n   isRecordingCanvas() {\n    return Boolean(this._canvas);\n  }\n\n  /** Get the replay integration options. */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n   initializeSampling(previousSessionId) {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    if (errorSampleRate <= 0 && sessionSampleRate <= 0) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    logInfoNextTick(\n      `[Replay] Starting replay in ${this.recordingMode} mode`,\n      this._options._experiments.traceInternals,\n    );\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      throw new Error('Replay buffering is in progress, call `flush()` to save the replay');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in session mode', this._options._experiments.traceInternals);\n\n    // Required as user activity is initially set in\n    // constructor, so if `start()` is called after\n    // session idle expiration, a replay will not be\n    // created due to an idle timeout.\n    this._updateUserActivity();\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n   startBuffering() {\n    if (this._isEnabled) {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in buffer mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n   startRecording() {\n    try {\n      const canvasOptions = this._canvas;\n\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n        ...(canvasOptions\n          ? {\n              recordCanvas: canvasOptions.recordCanvas,\n              getCanvasManager: canvasOptions.getCanvasManager,\n              sampling: canvasOptions.sampling,\n              dataURLOptions: canvasOptions.dataURLOptions,\n            }\n          : {}),\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n   stopRecording() {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   async stop({ forceFlush = false, reason } = {}) {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      logInfo(\n        `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`,\n        this._options._experiments.traceInternals,\n      );\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n   pause() {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    logInfo('[Replay] Pausing replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n   resume() {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    logInfo('[Replay] Resuming replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n   async sendBufferedReplayOrFlush({ continueRecording = true } = {}) {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    logInfo('[Replay] Converting buffer to session', this._options._experiments.traceInternals);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode ) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n   addUpdate(cb) {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n   triggerUserActivity() {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n   updateUserActivity() {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n   conditionalFlush() {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n   flush() {\n    return this._debouncedFlush() ;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n   flushImmediate() {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() ;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n   cancelFlush() {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n   getSessionId() {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n   checkAndHandleExpiredSession() {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n   setInitialState() {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n   throttledAddEvent(\n    event,\n    isCheckout,\n  ) {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n   getCurrentRoute() {\n    const lastActiveSpan = this.lastActiveSpan || getActiveSpan();\n    const lastRootSpan = lastActiveSpan && getRootSpan(lastActiveSpan);\n\n    const attributes = (lastRootSpan && spanToJSON(lastRootSpan).data) || {};\n    const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n    if (!lastRootSpan || !source || !['route', 'custom'].includes(source)) {\n      return undefined;\n    }\n\n    return spanToJSON(lastRootSpan).description;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n   _initializeRecording() {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n      workerUrl: this._options.workerUrl,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n   _handleException(error) {\n    DEBUG_BUILD && logger.error('[Replay]', error);\n\n    if (DEBUG_BUILD && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n   _initializeSessionForSampling(previousSessionId) {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n   _checkSession() {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n   async _refreshSession(session) {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n   _addListeners() {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n   _removeListeners() {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n   __init() {this._handleVisibilityChange = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };}\n\n  /**\n   * Handle when page is blurred\n   */\n   __init2() {this._handleWindowBlur = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };}\n\n  /**\n   * Handle when page is focused\n   */\n   __init3() {this._handleWindowFocus = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };}\n\n  /** Ensure page remains active when a key is pressed. */\n   __init4() {this._handleKeyboardEvent = (event) => {\n    handleKeyboardEvent(this, event);\n  };}\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n   _doChangeToBackgroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n   _doChangeToForegroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      logInfo('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n   _updateUserActivity(_lastActivity = Date.now()) {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n   _updateSessionActivity(_lastActivity = Date.now()) {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n   _createCustomBreadcrumb(breadcrumb) {\n    this.addUpdate(() => {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n   _addPerformanceEntries() {\n    const performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n   _clearContext() {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n   _updateInitialTimestampFromEventBuffer() {\n    const { session, eventBuffer } = this;\n    if (!session || !eventBuffer) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n   _popEventContext() {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n   async _runFlush() {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      DEBUG_BUILD && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accomodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp,\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'sendReplay' });\n\n      const client = getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n   __init5() {this._flush = async ({\n    force = false,\n  }\n\n = {}) => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      // should never happen, as we would have bailed out before\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5000;\n    if (tooShort || tooLong) {\n      logInfo(\n        `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too ${\n          tooShort ? 'short' : 'long'\n        }, not sending replay.`,\n        this._options._experiments.traceInternals,\n      );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      logInfo('[Replay] Flushing initial segment without checkout.', this._options._experiments.traceInternals);\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = undefined;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };}\n\n  /** Save the session, if it is sticky */\n   _maybeSaveSession() {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n   __init6() {this._onMutationHandler = (mutations) => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };}\n}\n\nfunction getOption(selectors, defaultSelectors) {\n  return [\n    ...selectors,\n    // sentry defaults\n    ...defaultSelectors,\n  ].join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nfunction getPrivacyOptions({ mask, unmask, block, unblock, ignore }) {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]']);\n  const unmaskSelector = getOption(unmask, []);\n\n  const options = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(block, ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements]),\n    unblockSelector: getOption(unblock, []),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]']),\n  };\n\n  return options;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nfunction maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}) {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precendence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\n/**\n * Sentry integration for [Session Replay](https://sentry.io/for/session-replay/).\n *\n * See the [Replay documentation](https://docs.sentry.io/platforms/javascript/guides/session-replay/) for more information.\n *\n * @example\n *\n * ```\n * Sentry.init({\n *   dsn: '__DSN__',\n *   integrations: [Sentry.replayIntegration()],\n * });\n * ```\n */\nconst replayIntegration = ((options) => {\n  return new Replay(options);\n}) ;\n\n/**\n * Replay integration\n *\n * TODO: Rewrite this to be functional integration\n * Exported for tests.\n */\nclass Replay  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Replay';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n\n   constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    workerUrl,\n    _experiments = {},\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10000,\n\n    slowClickTimeout = 7000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n    beforeErrorSampling,\n  } = {}) {\n    this.name = Replay.id;\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key, value, el) =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err) => {\n        try {\n          err.__rrweb__ = true;\n        } catch (error) {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      useCompression,\n      workerUrl,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n      beforeErrorSampling,\n\n      _experiments,\n    };\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n   get _isInitialized() {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n   set _isInitialized(value) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n   setupOnce() {\n    if (!isBrowser()) {\n      return;\n    }\n\n    this._setup();\n\n    // Once upon a time, we tried to create a transaction in `setupOnce` and it would\n    // potentially create a transaction before some native SDK integrations have run\n    // and applied their own global event processor. An example is:\n    // https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n    //\n    // So we call `this._initialize()` in next event loop as a workaround to wait for other\n    // global event processors to finish. This is no longer needed, but keeping it\n    // here to avoid any future issues.\n    setTimeout(() => this._initialize());\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n   startBuffering() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   stop() {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n   flush(options) {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n   getReplayId() {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n\n  /**\n   * Initializes replay.\n   */\n   _initialize() {\n    if (!this._replay) {\n      return;\n    }\n\n    // We have to run this in _initialize, because this runs in setTimeout\n    // So when this runs all integrations have been added\n    // Before this, we cannot access integrations on the client,\n    // so we need to mutate the options here\n    this._maybeLoadFromReplayCanvasIntegration();\n\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n   _setup() {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n\n  /** Get canvas options from ReplayCanvas integration, if it is also added. */\n   _maybeLoadFromReplayCanvasIntegration() {\n    // To save bundle size, we skip checking for stuff here\n    // and instead just try-catch everything - as generally this should all be defined\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    try {\n      const client = getClient();\n      const canvasIntegration = client.getIntegrationByName('ReplayCanvas')\n\n;\n      if (!canvasIntegration) {\n        return;\n      }\n\n      this._replay['_canvas'] = canvasIntegration.getOptions();\n    } catch (e) {\n      // ignore errors here\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n}Replay.__initStatic();\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions) {\n  const client = getClient();\n  const opt = client && (client.getOptions() );\n\n  const finalOptions = {\n    sessionSampleRate: 0,\n    errorSampleRate: 0,\n    ...dropUndefinedKeys(initialOptions),\n  };\n\n  if (!opt) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn('SDK client is not available.');\n    });\n    return finalOptions;\n  }\n\n  const replaysSessionSampleRate = parseSampleRate(opt.replaysSessionSampleRate);\n  const replaysOnErrorSampleRate = parseSampleRate(opt.replaysOnErrorSampleRate);\n\n  if (replaysSessionSampleRate == null && replaysOnErrorSampleRate == null) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n      );\n    });\n  }\n\n  if (replaysSessionSampleRate != null) {\n    finalOptions.sessionSampleRate = replaysSessionSampleRate;\n  }\n\n  if (replaysOnErrorSampleRate != null) {\n    finalOptions.errorSampleRate = replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers) {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n\n/**\n * This is a small utility to get a type-safe instance of the Replay integration.\n */\nfunction getReplay() {\n  const client = getClient();\n  return client && client.getIntegrationByName('Replay');\n}\n\nexport { getReplay, replayIntegration };\n//# sourceMappingURL=index.js.map\n","import { spanToJSON, getClient, DEFAULT_ENVIRONMENT } from '@sentry/core';\nimport { forEachEnvelopeItem, logger, timestampInSeconds, uuid4, GLOBAL_OBJ, browserPerformanceTimeOrigin } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\n/* eslint-disable max-lines */\n\n\nconst MS_TO_NS = 1e6;\n// Use 0 as main thread id which is identical to threadId in node:worker_threads\n// where main logs 0 and workers seem to log in increments of 1\nconst THREAD_ID_STRING = String(0);\nconst THREAD_NAME = 'main';\n\n// Machine properties (eval only once)\nlet OS_PLATFORM = '';\nlet OS_PLATFORM_VERSION = '';\nlet OS_ARCH = '';\nlet OS_BROWSER = (WINDOW.navigator && WINDOW.navigator.userAgent) || '';\nlet OS_MODEL = '';\nconst OS_LOCALE =\n  (WINDOW.navigator && WINDOW.navigator.language) ||\n  (WINDOW.navigator && WINDOW.navigator.languages && WINDOW.navigator.languages[0]) ||\n  '';\n\nfunction isUserAgentData(data) {\n  return typeof data === 'object' && data !== null && 'getHighEntropyValues' in data;\n}\n\n// @ts-expect-error userAgentData is not part of the navigator interface yet\nconst userAgentData = WINDOW.navigator && WINDOW.navigator.userAgentData;\n\nif (isUserAgentData(userAgentData)) {\n  userAgentData\n    .getHighEntropyValues(['architecture', 'model', 'platform', 'platformVersion', 'fullVersionList'])\n    .then((ua) => {\n      OS_PLATFORM = ua.platform || '';\n      OS_ARCH = ua.architecture || '';\n      OS_MODEL = ua.model || '';\n      OS_PLATFORM_VERSION = ua.platformVersion || '';\n\n      if (ua.fullVersionList && ua.fullVersionList.length > 0) {\n        const firstUa = ua.fullVersionList[ua.fullVersionList.length - 1];\n        OS_BROWSER = `${firstUa.brand} ${firstUa.version}`;\n      }\n    })\n    .catch(e => void e);\n}\n\nfunction isProcessedJSSelfProfile(profile) {\n  return !('thread_metadata' in profile);\n}\n\n// Enriches the profile with threadId of the current thread.\n// This is done in node as we seem to not be able to get the info from C native code.\n/**\n *\n */\nfunction enrichWithThreadInformation(profile) {\n  if (!isProcessedJSSelfProfile(profile)) {\n    return profile;\n  }\n\n  return convertJSSelfProfileToSampledFormat(profile);\n}\n\n// Profile is marked as optional because it is deleted from the metadata\n// by the integration before the event is processed by other integrations.\n\nfunction getTraceId(event) {\n  const traceId = event && event.contexts && event.contexts['trace'] && event.contexts['trace']['trace_id'];\n  // Log a warning if the profile has an invalid traceId (should be uuidv4).\n  // All profiles and transactions are rejected if this is the case and we want to\n  // warn users that this is happening if they enable debug flag\n  if (typeof traceId === 'string' && traceId.length !== 32) {\n    if (DEBUG_BUILD) {\n      logger.log(`[Profiling] Invalid traceId: ${traceId} on profiled event`);\n    }\n  }\n  if (typeof traceId !== 'string') {\n    return '';\n  }\n\n  return traceId;\n}\n/**\n * Creates a profiling event envelope from a Sentry event. If profile does not pass\n * validation, returns null.\n * @param event\n * @param dsn\n * @param metadata\n * @param tunnel\n * @returns {EventEnvelope | null}\n */\n\n/**\n * Creates a profiling event envelope from a Sentry event.\n */\nfunction createProfilePayload(\n  profile_id,\n  start_timestamp,\n  processed_profile,\n  event,\n) {\n  if (event.type !== 'transaction') {\n    // createProfilingEventEnvelope should only be called for transactions,\n    // we type guard this behavior with isProfiledTransactionEvent.\n    throw new TypeError('Profiling events may only be attached to transactions, this should never occur.');\n  }\n\n  if (processed_profile === undefined || processed_profile === null) {\n    throw new TypeError(\n      `Cannot construct profiling event envelope without a valid profile. Got ${processed_profile} instead.`,\n    );\n  }\n\n  const traceId = getTraceId(event);\n  const enrichedThreadProfile = enrichWithThreadInformation(processed_profile);\n  const transactionStartMs = start_timestamp\n    ? start_timestamp\n    : typeof event.start_timestamp === 'number'\n      ? event.start_timestamp * 1000\n      : timestampInSeconds() * 1000;\n  const transactionEndMs = typeof event.timestamp === 'number' ? event.timestamp * 1000 : timestampInSeconds() * 1000;\n\n  const profile = {\n    event_id: profile_id,\n    timestamp: new Date(transactionStartMs).toISOString(),\n    platform: 'javascript',\n    version: '1',\n    release: event.release || '',\n    environment: event.environment || DEFAULT_ENVIRONMENT,\n    runtime: {\n      name: 'javascript',\n      version: WINDOW.navigator.userAgent,\n    },\n    os: {\n      name: OS_PLATFORM,\n      version: OS_PLATFORM_VERSION,\n      build_number: OS_BROWSER,\n    },\n    device: {\n      locale: OS_LOCALE,\n      model: OS_MODEL,\n      manufacturer: OS_BROWSER,\n      architecture: OS_ARCH,\n      is_emulator: false,\n    },\n    debug_meta: {\n      images: applyDebugMetadata(processed_profile.resources),\n    },\n    profile: enrichedThreadProfile,\n    transactions: [\n      {\n        name: event.transaction || '',\n        id: event.event_id || uuid4(),\n        trace_id: traceId,\n        active_thread_id: THREAD_ID_STRING,\n        relative_start_ns: '0',\n        relative_end_ns: ((transactionEndMs - transactionStartMs) * 1e6).toFixed(0),\n      },\n    ],\n  };\n\n  return profile;\n}\n\n/*\n  See packages/browser-utils/src/browser/router.ts\n*/\n/**\n *\n */\nfunction isAutomatedPageLoadSpan(span) {\n  return spanToJSON(span).op === 'pageload';\n}\n\n/**\n * Converts a JSSelfProfile to a our sampled format.\n * Does not currently perform stack indexing.\n */\nfunction convertJSSelfProfileToSampledFormat(input) {\n  let EMPTY_STACK_ID = undefined;\n  let STACK_ID = 0;\n\n  // Initialize the profile that we will fill with data\n  const profile = {\n    samples: [],\n    stacks: [],\n    frames: [],\n    thread_metadata: {\n      [THREAD_ID_STRING]: { name: THREAD_NAME },\n    },\n  };\n\n  if (!input.samples.length) {\n    return profile;\n  }\n\n  // We assert samples.length > 0 above and timestamp should always be present\n  const start = input.samples[0].timestamp;\n  // The JS SDK might change it's time origin based on some heuristic (see See packages/utils/src/time.ts)\n  // when that happens, we need to ensure we are correcting the profile timings so the two timelines stay in sync.\n  // Since JS self profiling time origin is always initialized to performance.timeOrigin, we need to adjust for\n  // the drift between the SDK selected value and our profile time origin.\n  const origin =\n    typeof performance.timeOrigin === 'number' ? performance.timeOrigin : browserPerformanceTimeOrigin || 0;\n  const adjustForOriginChange = origin - (browserPerformanceTimeOrigin || origin);\n\n  for (let i = 0; i < input.samples.length; i++) {\n    const jsSample = input.samples[i];\n\n    // If sample has no stack, add an empty sample\n    if (jsSample.stackId === undefined) {\n      if (EMPTY_STACK_ID === undefined) {\n        EMPTY_STACK_ID = STACK_ID;\n        profile.stacks[EMPTY_STACK_ID] = [];\n        STACK_ID++;\n      }\n\n      profile['samples'][i] = {\n        // convert ms timestamp to ns\n        elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n        stack_id: EMPTY_STACK_ID,\n        thread_id: THREAD_ID_STRING,\n      };\n      continue;\n    }\n\n    let stackTop = input.stacks[jsSample.stackId];\n\n    // Functions in top->down order (root is last)\n    // We follow the stackTop.parentId trail and collect each visited frameId\n    const stack = [];\n\n    while (stackTop) {\n      stack.push(stackTop.frameId);\n\n      const frame = input.frames[stackTop.frameId];\n\n      // If our frame has not been indexed yet, index it\n      if (profile.frames[stackTop.frameId] === undefined) {\n        profile.frames[stackTop.frameId] = {\n          function: frame.name,\n          abs_path: typeof frame.resourceId === 'number' ? input.resources[frame.resourceId] : undefined,\n          lineno: frame.line,\n          colno: frame.column,\n        };\n      }\n\n      stackTop = stackTop.parentId === undefined ? undefined : input.stacks[stackTop.parentId];\n    }\n\n    const sample = {\n      // convert ms timestamp to ns\n      elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n      stack_id: STACK_ID,\n      thread_id: THREAD_ID_STRING,\n    };\n\n    profile['stacks'][STACK_ID] = stack;\n    profile['samples'][i] = sample;\n    STACK_ID++;\n  }\n\n  return profile;\n}\n\n/**\n * Adds items to envelope if they are not already present - mutates the envelope.\n * @param envelope\n */\nfunction addProfilesToEnvelope(envelope, profiles) {\n  if (!profiles.length) {\n    return envelope;\n  }\n\n  for (const profile of profiles) {\n    envelope[1].push([{ type: 'profile' }, profile]);\n  }\n  return envelope;\n}\n\n/**\n * Finds transactions with profile_id context in the envelope\n * @param envelope\n * @returns\n */\nfunction findProfiledTransactionsFromEnvelope(envelope) {\n  const events = [];\n\n  forEachEnvelopeItem(envelope, (item, type) => {\n    if (type !== 'transaction') {\n      return;\n    }\n\n    for (let j = 1; j < item.length; j++) {\n      const event = item[j] ;\n\n      if (event && event.contexts && event.contexts['profile'] && event.contexts['profile']['profile_id']) {\n        events.push(item[j] );\n      }\n    }\n  });\n\n  return events;\n}\n\nconst debugIdStackParserCache = new WeakMap();\n/**\n * Applies debug meta data to an event from a list of paths to resources (sourcemaps)\n */\nfunction applyDebugMetadata(resource_paths) {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return [];\n  }\n\n  const client = getClient();\n  const options = client && client.getOptions();\n  const stackParser = options && options.stackParser;\n\n  if (!stackParser) {\n    return [];\n  }\n\n  let debugIdStackFramesCache;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce((acc, debugIdStackTrace) => {\n    let parsedStack;\n\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      const file = stackFrame && stackFrame.filename;\n\n      if (stackFrame && file) {\n        acc[file] = debugIdMap[debugIdStackTrace] ;\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  const images = [];\n  for (const path of resource_paths) {\n    if (path && filenameDebugIdMap[path]) {\n      images.push({\n        type: 'sourcemap',\n        code_file: path,\n        debug_id: filenameDebugIdMap[path] ,\n      });\n    }\n  }\n\n  return images;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  if ((typeof rate !== 'number' && typeof rate !== 'boolean') || (typeof rate === 'number' && isNaN(rate))) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Profiling] Invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // Boolean sample rates are always valid\n  if (rate === true || rate === false) {\n    return true;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    DEBUG_BUILD && logger.warn(`[Profiling] Invalid sample rate. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\nfunction isValidProfile(profile) {\n  if (profile.samples.length < 2) {\n    if (DEBUG_BUILD) {\n      // Log a warning if the profile has less than 2 samples so users can know why\n      // they are not seeing any profiling data and we cant avoid the back and forth\n      // of asking them to provide us with a dump of the profile data.\n      logger.log('[Profiling] Discarding profile because it contains less than 2 samples');\n    }\n    return false;\n  }\n\n  if (!profile.frames.length) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Discarding profile because it contains no frames');\n    }\n    return false;\n  }\n\n  return true;\n}\n\n// Keep a flag value to avoid re-initializing the profiler constructor. If it fails\n// once, it will always fail and this allows us to early return.\nlet PROFILING_CONSTRUCTOR_FAILED = false;\nconst MAX_PROFILE_DURATION_MS = 30000;\n\n/**\n * Check if profiler constructor is available.\n * @param maybeProfiler\n */\nfunction isJSProfilerSupported(maybeProfiler) {\n  return typeof maybeProfiler === 'function';\n}\n\n/**\n * Starts the profiler and returns the profiler instance.\n */\nfunction startJSSelfProfile() {\n  // Feature support check first\n  const JSProfilerConstructor = WINDOW.Profiler;\n\n  if (!isJSProfilerSupported(JSProfilerConstructor)) {\n    if (DEBUG_BUILD) {\n      logger.log(\n        '[Profiling] Profiling is not supported by this browser, Profiler interface missing on window object.',\n      );\n    }\n    return;\n  }\n\n  // From initial testing, it seems that the minimum value for sampleInterval is 10ms.\n  const samplingIntervalMS = 10;\n  // Start the profiler\n  const maxSamples = Math.floor(MAX_PROFILE_DURATION_MS / samplingIntervalMS);\n\n  // Attempt to initialize the profiler constructor, if it fails, we disable profiling for the current user session.\n  // This is likely due to a missing 'Document-Policy': 'js-profiling' header. We do not want to throw an error if this happens\n  // as we risk breaking the user's application, so just disable profiling and log an error.\n  try {\n    return new JSProfilerConstructor({ sampleInterval: samplingIntervalMS, maxBufferSize: maxSamples });\n  } catch (e) {\n    if (DEBUG_BUILD) {\n      logger.log(\n        \"[Profiling] Failed to initialize the Profiling constructor, this is likely due to a missing 'Document-Policy': 'js-profiling' header.\",\n      );\n      logger.log('[Profiling] Disabling profiling for current user session.');\n    }\n    PROFILING_CONSTRUCTOR_FAILED = true;\n  }\n\n  return;\n}\n\n/**\n * Determine if a profile should be profiled.\n */\nfunction shouldProfileSpan(span) {\n  // If constructor failed once, it will always fail, so we can early return.\n  if (PROFILING_CONSTRUCTOR_FAILED) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Profiling has been disabled for the duration of the current user session.');\n    }\n    return false;\n  }\n\n  if (!span.isRecording()) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Discarding profile because transaction was not sampled.');\n    }\n    return false;\n  }\n\n  const client = getClient();\n  const options = client && client.getOptions();\n  if (!options) {\n    DEBUG_BUILD && logger.log('[Profiling] Profiling disabled, no options found.');\n    return false;\n  }\n\n  // @ts-expect-error profilesSampleRate is not part of the browser options yet\n  const profilesSampleRate = options.profilesSampleRate;\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(profilesSampleRate)) {\n    DEBUG_BUILD && logger.warn('[Profiling] Discarding profile because of invalid sample rate.');\n    return false;\n  }\n\n  // if the function returned 0 (or false), or if `profileSampleRate` is 0, it's a sign the profile should be dropped\n  if (!profilesSampleRate) {\n    DEBUG_BUILD &&\n      logger.log(\n        '[Profiling] Discarding profile because a negative sampling decision was inherited or profileSampleRate is set to 0',\n      );\n    return false;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  const sampled = profilesSampleRate === true ? true : Math.random() < profilesSampleRate;\n  // Check if we should sample this profile\n  if (!sampled) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Profiling] Discarding profile because it's not included in the random sample (sampling rate = ${Number(\n          profilesSampleRate,\n        )})`,\n      );\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a profiling envelope item, if the profile does not pass validation, returns null.\n * @param event\n * @returns {Profile | null}\n */\nfunction createProfilingEvent(\n  profile_id,\n  start_timestamp,\n  profile,\n  event,\n) {\n  if (!isValidProfile(profile)) {\n    return null;\n  }\n\n  return createProfilePayload(profile_id, start_timestamp, profile, event);\n}\n\n// TODO (v8): We need to obtain profile ids in @sentry-internal/tracing,\n// but we don't have access to this map because importing this map would\n// cause a circular dependancy. We need to resolve this in v8.\nconst PROFILE_MAP = new Map();\n/**\n *\n */\nfunction getActiveProfilesCount() {\n  return PROFILE_MAP.size;\n}\n\n/**\n * Retrieves profile from global cache and removes it.\n */\nfunction takeProfileFromGlobalCache(profile_id) {\n  const profile = PROFILE_MAP.get(profile_id);\n  if (profile) {\n    PROFILE_MAP.delete(profile_id);\n  }\n  return profile;\n}\n/**\n * Adds profile to global cache and evicts the oldest profile if the cache is full.\n */\nfunction addProfileToGlobalCache(profile_id, profile) {\n  PROFILE_MAP.set(profile_id, profile);\n\n  if (PROFILE_MAP.size > 30) {\n    const last = PROFILE_MAP.keys().next().value;\n    PROFILE_MAP.delete(last);\n  }\n}\n\nexport { MAX_PROFILE_DURATION_MS, addProfileToGlobalCache, addProfilesToEnvelope, applyDebugMetadata, convertJSSelfProfileToSampledFormat, createProfilePayload, createProfilingEvent, enrichWithThreadInformation, findProfiledTransactionsFromEnvelope, getActiveProfilesCount, isAutomatedPageLoadSpan, isValidSampleRate, shouldProfileSpan, startJSSelfProfile, takeProfileFromGlobalCache };\n//# sourceMappingURL=utils.js.map\n","import { spanToJSON, getCurrentScope } from '@sentry/core';\nimport { timestampInSeconds, logger, uuid4 } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\nimport { isAutomatedPageLoadSpan, startJSSelfProfile, MAX_PROFILE_DURATION_MS, addProfileToGlobalCache } from './utils.js';\n\n/**\n * Wraps startTransaction and stopTransaction with profiling related logic.\n * startProfileForTransaction is called after the call to startTransaction in order to avoid our own code from\n * being profiled. Because of that same reason, stopProfiling is called before the call to stopTransaction.\n */\nfunction startProfileForSpan(span) {\n  // Start the profiler and get the profiler instance.\n  let startTimestamp;\n  if (isAutomatedPageLoadSpan(span)) {\n    startTimestamp = timestampInSeconds() * 1000;\n  }\n\n  const profiler = startJSSelfProfile();\n\n  // We failed to construct the profiler, so we skip.\n  // No need to log anything as this has already been logged in startProfile.\n  if (!profiler) {\n    return;\n  }\n\n  if (DEBUG_BUILD) {\n    logger.log(`[Profiling] started profiling span: ${spanToJSON(span).description}`);\n  }\n\n  // We create \"unique\" span names to avoid concurrent spans with same names\n  // from being ignored by the profiler. From here on, only this span name should be used when\n  // calling the profiler methods. Note: we log the original name to the user to avoid confusion.\n  const profileId = uuid4();\n\n  getCurrentScope().setContext('profile', {\n    profile_id: profileId,\n    start_timestamp: startTimestamp,\n  });\n\n  /**\n   * Idempotent handler for profile stop\n   */\n  async function onProfileHandler() {\n    // Check if the profile exists and return it the behavior has to be idempotent as users may call span.finish multiple times.\n    if (!span) {\n      return;\n    }\n    // Satisfy the type checker, but profiler will always be defined here.\n    if (!profiler) {\n      return;\n    }\n\n    return profiler\n      .stop()\n      .then((profile) => {\n        if (maxDurationTimeoutID) {\n          WINDOW.clearTimeout(maxDurationTimeoutID);\n          maxDurationTimeoutID = undefined;\n        }\n\n        if (DEBUG_BUILD) {\n          logger.log(`[Profiling] stopped profiling of span: ${spanToJSON(span).description}`);\n        }\n\n        // In case of an overlapping span, stopProfiling may return null and silently ignore the overlapping profile.\n        if (!profile) {\n          if (DEBUG_BUILD) {\n            logger.log(\n              `[Profiling] profiler returned null profile for: ${spanToJSON(span).description}`,\n              'this may indicate an overlapping span or a call to stopProfiling with a profile title that was never started',\n            );\n          }\n          return;\n        }\n\n        addProfileToGlobalCache(profileId, profile);\n      })\n      .catch(error => {\n        if (DEBUG_BUILD) {\n          logger.log('[Profiling] error while stopping profiler:', error);\n        }\n      });\n  }\n\n  // Enqueue a timeout to prevent profiles from running over max duration.\n  let maxDurationTimeoutID = WINDOW.setTimeout(() => {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] max profile duration elapsed, stopping profiling for:', spanToJSON(span).description);\n    }\n    // If the timeout exceeds, we want to stop profiling, but not finish the span\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    onProfileHandler();\n  }, MAX_PROFILE_DURATION_MS);\n\n  // We need to reference the original end call to avoid creating an infinite loop\n  const originalEnd = span.end.bind(span);\n\n  /**\n   * Wraps span `end()` with profiling related logic.\n   * startProfiling is called after the call to spanStart in order to avoid our own code from\n   * being profiled. Because of that same reason, stopProfiling is called before the call to spanEnd.\n   */\n  function profilingWrappedSpanEnd() {\n    if (!span) {\n      return originalEnd();\n    }\n    // onProfileHandler should always return the same profile even if this is called multiple times.\n    // Always call onProfileHandler to ensure stopProfiling is called and the timeout is cleared.\n    void onProfileHandler().then(\n      () => {\n        originalEnd();\n      },\n      () => {\n        // If onProfileHandler fails, we still want to call the original finish method.\n        originalEnd();\n      },\n    );\n\n    return span;\n  }\n\n  span.end = profilingWrappedSpanEnd;\n}\n\nexport { startProfileForSpan };\n//# sourceMappingURL=startProfileForSpan.js.map\n","import { defineIntegration, getActiveSpan, getRootSpan } from '@sentry/core';\nimport { logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { startProfileForSpan } from './startProfileForSpan.js';\nimport { isAutomatedPageLoadSpan, shouldProfileSpan, getActiveProfilesCount, findProfiledTransactionsFromEnvelope, takeProfileFromGlobalCache, createProfilingEvent, addProfilesToEnvelope } from './utils.js';\n\nconst INTEGRATION_NAME = 'BrowserProfiling';\n\nconst _browserProfilingIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      const activeSpan = getActiveSpan();\n      const rootSpan = activeSpan && getRootSpan(activeSpan);\n\n      if (rootSpan && isAutomatedPageLoadSpan(rootSpan)) {\n        if (shouldProfileSpan(rootSpan)) {\n          startProfileForSpan(rootSpan);\n        }\n      }\n\n      client.on('spanStart', (span) => {\n        if (span === getRootSpan(span) && shouldProfileSpan(span)) {\n          startProfileForSpan(span);\n        }\n      });\n\n      client.on('beforeEnvelope', (envelope) => {\n        // if not profiles are in queue, there is nothing to add to the envelope.\n        if (!getActiveProfilesCount()) {\n          return;\n        }\n\n        const profiledTransactionEvents = findProfiledTransactionsFromEnvelope(envelope);\n        if (!profiledTransactionEvents.length) {\n          return;\n        }\n\n        const profilesToAddToEnvelope = [];\n\n        for (const profiledTransaction of profiledTransactionEvents) {\n          const context = profiledTransaction && profiledTransaction.contexts;\n          const profile_id = context && context['profile'] && context['profile']['profile_id'];\n          const start_timestamp = context && context['profile'] && context['profile']['start_timestamp'];\n\n          if (typeof profile_id !== 'string') {\n            DEBUG_BUILD && logger.log('[Profiling] cannot find profile for a span without a profile context');\n            continue;\n          }\n\n          if (!profile_id) {\n            DEBUG_BUILD && logger.log('[Profiling] cannot find profile for a span without a profile context');\n            continue;\n          }\n\n          // Remove the profile from the span context before sending, relay will take care of the rest.\n          if (context && context['profile']) {\n            delete context.profile;\n          }\n\n          const profile = takeProfileFromGlobalCache(profile_id);\n          if (!profile) {\n            DEBUG_BUILD && logger.log(`[Profiling] Could not retrieve profile for span: ${profile_id}`);\n            continue;\n          }\n\n          const profileEvent = createProfilingEvent(\n            profile_id,\n            start_timestamp ,\n            profile,\n            profiledTransaction ,\n          );\n          if (profileEvent) {\n            profilesToAddToEnvelope.push(profileEvent);\n          }\n        }\n\n        addProfilesToEnvelope(envelope , profilesToAddToEnvelope);\n      });\n    },\n  };\n}) ;\n\nconst browserProfilingIntegration = defineIntegration(_browserProfilingIntegration);\n\nexport { browserProfilingIntegration };\n//# sourceMappingURL=integration.js.map\n","import { init as init$1 } from '@sentry/browser';\nimport { applySdkMetadata } from '@sentry/core';\n\n/**\n * Inits the React SDK\n */\nfunction init(options) {\n  const opts = {\n    ...options,\n  };\n\n  applySdkMetadata(opts, 'react');\n\n  init$1(opts);\n}\n\nexport { init };\n//# sourceMappingURL=sdk.js.map\n","import { browserTracingIntegration as browserTracingIntegration$1 } from '@sentry/react';\nimport { setGlobals, startPageloadSpan } from './performance.js';\n\n/**\n * Creates a browser tracing integration for Remix applications.\n * This integration will create pageload and navigation spans.\n */\nfunction browserTracingIntegration(options) {\n  if (options.instrumentPageLoad === undefined) {\n    options.instrumentPageLoad = true;\n  }\n\n  if (options.instrumentNavigation === undefined) {\n    options.instrumentNavigation = true;\n  }\n\n  setGlobals({\n    useEffect: options.useEffect,\n    useLocation: options.useLocation,\n    useMatches: options.useMatches,\n    instrumentNavigation: options.instrumentNavigation,\n  });\n\n  const browserTracingIntegrationInstance = browserTracingIntegration$1({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  return {\n    ...browserTracingIntegrationInstance,\n    afterAllSetup(client) {\n      browserTracingIntegrationInstance.afterAllSetup(client);\n\n      if (options.instrumentPageLoad) {\n        startPageloadSpan();\n      }\n    },\n  };\n}\n\nexport { browserTracingIntegration };\n//# sourceMappingURL=browserTracingIntegration.js.map\n","import { applySdkMetadata, setTag } from '@sentry/core';\nimport { init as init$1 } from '@sentry/react';\nexport * from '@sentry/react';\nexport { captureRemixErrorBoundaryError } from './client/errors.js';\nexport { withSentry } from './client/performance.js';\nexport { browserTracingIntegration } from './client/browserTracingIntegration.js';\n\nfunction init(options) {\n  const opts = {\n    ...options,\n    environment: options.environment || process.env.NODE_ENV,\n  };\n\n  applySdkMetadata(opts, 'remix', ['remix', 'react']);\n\n  init$1(opts);\n\n  setTag('runtime', 'browser');\n}\n\nexport { init };\n//# sourceMappingURL=index.client.js.map\n","import { useLocation, useMatches } from '@remix-run/react'\nimport {\n\tinit as sentryInit,\n\tbrowserTracingIntegration,\n\treplayIntegration,\n\tbrowserProfilingIntegration,\n} from '@sentry/remix'\nimport { useEffect } from 'react'\n\nexport function init() {\n\tsentryInit({\n\t\tdsn: ENV.SENTRY_DSN,\n\t\tenvironment: ENV.MODE,\n\t\tbeforeSend(event) {\n\t\t\tif (event.request?.url) {\n\t\t\t\tconst url = new URL(event.request.url)\n\t\t\t\tif (\n\t\t\t\t\turl.protocol === 'chrome-extension:' ||\n\t\t\t\t\turl.protocol === 'moz-extension:'\n\t\t\t\t) {\n\t\t\t\t\t// This error is from a browser extension, ignore it\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn event\n\t\t},\n\t\tintegrations: [\n\t\t\tbrowserTracingIntegration({\n\t\t\t\tuseEffect,\n\t\t\t\tuseLocation,\n\t\t\t\tuseMatches,\n\t\t\t}),\n\t\t\treplayIntegration(),\n\t\t\tbrowserProfilingIntegration(),\n\t\t],\n\n\t\t// Set tracesSampleRate to 1.0 to capture 100%\n\t\t// of transactions for performance monitoring.\n\t\t// We recommend adjusting this value in production\n\t\ttracesSampleRate: 1.0,\n\n\t\t// Capture Replay for 10% of all sessions,\n\t\t// plus for 100% of sessions with an error\n\t\treplaysSessionSampleRate: 0.1,\n\t\treplaysOnErrorSampleRate: 1.0,\n\t})\n}\n"],"names":["isBrowser","isNodeEnv","isElectronNodeRenderer","GLOBAL_OBJ","_nullishCoalesce","lhs","rhsFn","isSentryRequestUrl","url","client","dsn","tunnel","checkDsn","checkTunnel","removeTrailingSlash","str","WINDOW","REPLAY_SESSION_KEY","REPLAY_EVENT_NAME","UNABLE_TO_SEND_REPLAY","SESSION_IDLE_PAUSE_DURATION","SESSION_IDLE_EXPIRE_DURATION","DEFAULT_FLUSH_MIN_DELAY","DEFAULT_FLUSH_MAX_DELAY","BUFFER_CHECKOUT_TIME","RETRY_BASE_INTERVAL","RETRY_MAX_COUNT","NETWORK_BODY_MAX_SIZE","CONSOLE_ARG_MAX_SIZE","SLOW_CLICK_THRESHOLD","SLOW_CLICK_SCROLL_TIMEOUT","REPLAY_MAX_EVENT_BUFFER_SIZE","MIN_REPLAY_DURATION","MIN_REPLAY_DURATION_LIMIT","MAX_REPLAY_DURATION","_nullishCoalesce$1","_optionalChain$5","ops","lastAccessLHS","value","i","op","fn","args","NodeType$1","NodeType","isElement$1","n","isShadowRoot","host","_","_2","isNativeShadowDom","shadowRoot","fixBrowserCompatibilityIssuesInCSS","cssText","escapeImportStatement","rule","statement","stringifyStylesheet","s","rules","stringifyRule","importStringified","isCSSImportRule","isCSSStyleRule","fixSafariColons","cssStringified","regex","Mirror","id","_3","_4","_5","childNode","node","meta","oldNode","createMirror","shouldMaskInput","maskInputOptions","tagName","type","maskInputValue","isMasked","element","maskInputFn","text","toLowerCase","toUpperCase","ORIGINAL_ATTRIBUTE_NAME","is2DCanvasBlank","canvas","ctx","chunkSize","x","y","getImageData","originalGetImageData","pixel","getInputType","getInputValue","el","_id","tagNameRegex","IGNORED_NODE","genId","getValidTagName","processedTagName","extractOrigin","origin","canvasService","canvasCtx","URL_IN_CSS_REF","URL_PROTOCOL_MATCH","URL_WWW_MATCH","DATA_URI","absoluteToStylesheet","href","quote1","path1","quote2","path2","path3","filePath","maybeQuote","stack","parts","part","SRCSET_NOT_SPACES","SRCSET_COMMAS_OR_SPACES","getAbsoluteSrcsetString","doc","attributeValue","pos","collectCharacters","regEx","chars","match","output","absoluteToDoc","descriptorsStr","inParens","c","a","isSVGElement","getHref","transformAttribute","name","maskAttributeFn","ignoreAttribute","_value","_isBlockedElement","blockClass","blockSelector","unblockSelector","eIndex","className","elementClassMatchesRegex","distanceToMatch","matchPredicate","limit","distance","createMatchPredicate","selector","needMaskingText","maskTextClass","maskTextSelector","unmaskTextClass","unmaskTextSelector","maskAllText","autocomplete","maskDistance","unmaskDistance","onceIframeLoaded","iframeEl","listener","iframeLoadTimeout","win","fired","readyState","timer","blankUrl","onceStylesheetLoaded","link","styleSheetLoadTimeout","styleSheetLoaded","serializeNode","options","mirror","inlineStylesheet","maskTextFn","dataURLOptions","inlineImages","recordCanvas","keepIframeSrcFn","newlyAddedElement","rootId","getRootId","serializeElementNode","serializeTextNode","docId","parentTagName","textContent","isStyle","isScript","isTextarea","_6","_7","_8","err","forceMask","isInputMasked","needBlock","attributes","len","attr","stylesheet","checked","canvasDataURL","blankCanvas","blankCanvasDataURL","image","oldValue","recordInlineImage","width","height","isCustomElement","lowerIfExists","maybeAttr","slimDOMExcluded","sn","slimDOMOptions","serializeNodeWithId","skipChild","onSerialize","onIframeLoad","onStylesheetLoad","stylesheetLoadTimeout","preserveWhiteSpace","_serializedNode","serializedNode","recordChild","bypassOptions","childN","serializedChildNode","iframeDoc","serializedIframeNode","serializedLinkNode","snapshot","maskAllInputs","slimDOM","_optionalChain$4","on","target","DEPARTED_MIRROR_ACCESS_WARNING","_mirror","prop","receiver","throttle$1","func","wait","timeout","previous","now","remaining","context","clearTimeout$1","setTimeout$1","hookSetter","key","d","isRevoked","original","patch","source","replacement","wrapped","nowTimestamp","getWindowScroll","_9","_10","_11","_12","_13","_14","getWindowHeight","getWindowWidth","closestElementOfNode","isBlocked","checkAncestors","blockedPredicate","isUnblocked","blockDistance","unblockDistance","isSerialized","isIgnored","isAncestorRemoved","legacy_isTouchEvent","event","polyfill","isSerializedIframe","isSerializedStylesheet","hasShadowRoot","_18","StyleSheetMirror","newId","getShadowHost","shadowHost","_19","_20","_21","getRootShadowHost","rootShadowHost","shadowHostInDom","inDom","cachedImplementations","getImplementation","cached","document","impl","sandbox","contentWindow","onRequestAnimationFrame","rest","EventType","EventType2","IncrementalSource","IncrementalSource2","MouseInteractions","MouseInteractions2","PointerTypes","PointerTypes2","_optionalChain$3","isNodeInLinkedList","DoubleLinkedList","position","current","index","moveKey","parentId","MutationBuffer","mutations","adds","addedIds","addList","getNextId","ns","nextId","pushAdd","currentN","iframe","childSn","isParentRemoved","isAncestorInSet","candidate","tailNode","_node","unhandledNode","payload","attribute","diffAsStr","unchangedAsStr","m","attributeName","item","old","pname","newValue","newPriority","nodeId","deepDelete","targetId","addsSet","removes","_isParentRemoved","parentNode","r","set","_isAncestorInSet","errorHandler","registerErrorHandler","handler","unregisterErrorHandler","callbackWrapper","cb","error","_optionalChain$2","mutationBuffers","getEventTarget","path","initMutationObserver","rootEl","mutationBuffer","mutationObserverCtor","angularZoneSymbol","observer","initMoveObserver","mousemoveCb","sampling","threshold","callbackThreshold","positions","timeBaseline","wrappedCb","totalOffset","updatePosition","evt","clientX","clientY","handlers","h","initMouseInteractionObserver","mouseInteractionCb","disableMap","currentPointerType","getHandler","eventKey","pointerType","thisEventKey","e","eventName","initScrollObserver","scrollCb","scrollLeftTop","initViewportResizeObserver","viewportResizeCb","lastH","lastW","updateDimension","INPUT_TAGS","lastInputValueMap","initInputObserver","inputCb","ignoreClass","ignoreSelector","userTriggeredOnInput","eventHandler","userTriggered","isChecked","cbWithDedup","v","lastInputValue","currentWindow","propertyDescriptor","hookProperties","p","getNestedCSSRulePositions","recurse","childRule","hasNestedCSSRule","getIdAndStyleId","sheet","styleMirror","styleId","initStyleSheetObserver","styleSheetRuleCb","stylesheetManager","insertRule","thisArg","argumentsList","deleteRule","replace","replaceSync","supportedNestedCSSRuleTypes","canMonkeyPatchNestedCSSRule","unmodifiedFunctions","typeKey","initAdoptedStyleSheetObserver","hostId","patchTarget","originalPropertyDescriptor","sheets","result","_15","_16","initStyleDeclarationObserver","styleDeclarationCb","ignoreCSSAttributes","setProperty","property","priority","_17","removeProperty","initMediaInteractionObserver","mediaInteractionCb","currentTime","volume","muted","playbackRate","initFontObserver","fontCb","fontMap","originalFontFace","family","descriptors","fontFace","restoreHandler","initSelectionObserver","param","selectionCb","collapsed","updateSelection","selection","ranges","count","range","startContainer","startOffset","endContainer","endOffset","initCustomElementObserver","customElementCb","constructor","initObservers","o","_hooks","mutationObserver","mousemoveHandler","mouseInteractionHandler","scrollHandler","viewportResizeHandler","inputHandler","mediaInteractionHandler","styleSheetObserver","adoptedStyleSheetObserver","styleDeclarationObserver","fontObserver","selectionObserver","customElementObserver","pluginHandlers","plugin","b","CrossOriginIframeMirror","generateIdFn","remoteId","idToRemoteMap","remoteToIdMap","idToRemoteIdMap","remoteIdToIdMap","map","ids","_optionalChain$1","IframeManagerNoop","IframeManager","message","crossOriginMessageEvent","transformedEvent","style","iframeMirror","obj","keys","child","ShadowDomManagerNoop","ShadowDomManager","iframeElement","manager","option","CanvasManagerNoop","StylesheetManager","linkEl","adoptedStyleSheetData","styles","ProcessedNodeManager","thisBuffer","buffers","buffer","wrappedEmit","_takeFullSnapshot","record","emit","checkoutEveryNms","checkoutEveryNth","_maskInputOptions","_slimDOMOptions","maxCanvasSize","packFn","mousemoveWait","recordCrossOriginIframes","recordAfter","collectFonts","plugins","onMutation","getCanvasManager","inEmittingFrame","passEmitsToParent","lastFullSnapshotEvent","incrementalSnapshotCount","eventProcessor","isCheckout","_optionalChain","buf","exceedCount","exceedTime","takeFullSnapshot","wrappedMutationEmit","wrappedScrollEmit","wrappedCanvasMutationEmit","wrappedAdoptedStyleSheetEmit","iframeManager","processedNodeManager","canvasManager","_getCanvasManager","shadowDomManager","observe","init","getCanvasManagerFn","ReplayEventTypeIncrementalSnapshot","ReplayEventTypeCustom","timestampToMs","timestamp","timestampToS","addBreadcrumbEvent","replay","breadcrumb","normalize","INTERACTIVE_SELECTOR","getClosestInteractive","getClickTargetNode","getTargetNode","isEventWithTarget","onWindowOpen","monkeyPatchWindowOpen","fill","originalWindowOpen","handleClick","clickDetector","clickBreadcrumb","ClickDetector","slowClickConfig","_addBreadcrumbEvent","cleanupWindowOpen","nowInSeconds","ignoreElement","isClickBreadcrumb","newClick","click","timedOutClicks","hadScroll","hadMutation","isSlowClick","clickCount","timeAfterClickMs","endReason","setTimeout$2","SLOW_CLICK_TAGS","updateClickDetectorForRecordingEvent","isIncrementalEvent","isIncrementalMouseInteraction","createBreadcrumb","ATTRIBUTES_TO_RECORD","getAttributesToRecord","normalizedKey","handleDomListener","handlerData","handleDom","isClick","getBaseDomBreadcrumb","isElement","getDomTarget","htmlTreeAsString","handleKeyboardEvent","getKeyboardBreadcrumb","metaKey","shiftKey","ctrlKey","altKey","isInputElement","hasModifierKey","isCharacterKey","baseBreadcrumb","ENTRY_TYPES","createResourceEntry","createPaintEntry","createNavigationEntry","createPerformanceEntries","entries","createPerformanceEntry","entry","getAbsoluteTime","time","browserPerformanceTimeOrigin","duration","entryType","startTime","start","decodedBodySize","domComplete","encodedBodySize","domContentLoadedEventStart","domContentLoadedEventEnd","domInteractive","loadEventStart","loadEventEnd","redirectCount","transferSize","initiatorType","responseEnd","responseStatus","getLargestContentfulPaint","metric","lastEntry","end","setupPerformanceObserver","addPerformanceEntry","onEntries","clearCallbacks","addPerformanceInstrumentationHandler","addLcpInstrumentationHandler","clearCallback","DEBUG_BUILD","logInfo","shouldAddBreadcrumb","logger","addLogBreadcrumb","logInfoNextTick","addBreadcrumb","EventBufferSizeExceededError","EventBufferArray","eventSize","resolve","eventsRet","WorkerHandler","worker","reject","data","method","arg","response","EventBufferCompressionWorker","EventBufferProxy","events","hasCheckout","addEventPromises","createEventBuffer","useCompression","customWorkerUrl","_loadWorker","workerUrl","_getWorkerUrl","hasSessionStorage","clearSession","deleteSession","isSampled","sampleRate","makeSession","session","uuid4","started","lastActivity","segmentId","sampled","previousSessionId","saveSession","getSessionSampleType","sessionSampleRate","allowBuffering","createSession","stickySession","fetchSession","traceInternals","sessionStringFromStorage","sessionObj","isExpired","initialTime","expiry","targetTime","isSessionExpired","maxReplayDuration","sessionIdleExpire","shouldRefreshSession","loadOrCreateSession","sessionOptions","existingSession","isCustomEvent","addEventSync","shouldAddEvent","_addEvent","addEvent","replayOptions","eventAfterPossibleCallback","maybeApplyCallback","reason","getClient","timestampInMs","callback","isErrorEvent","isTransactionEvent","isReplayEvent","isFeedbackEvent","handleAfterSendEvent","sendResponse","statusCode","handleTransactionEvent","handleErrorEvent","replayContext","beforeErrorSampling","handleBeforeSendEvent","handleHydrationError","exceptionValue","handleBreadcrumbs","beforeAddBreadcrumb","isBreadcrumbWithCategory","normalizeBreadcrumb","normalizeConsoleBreadcrumb","isTruncated","normalizedArgs","normalizedArg","isRrwebError","hint","addFeedbackBreadcrumb","shouldSampleForBufferEvent","handleGlobalEventListener","createPerformanceSpans","handleHistory","from","to","handleHistorySpanListener","shouldFilterRequest","addNetworkBreadcrumb","getBodySize","body","textEncoder","formDataStr","_serializeFormData","parseContentLengthHeader","header","size","getBodyString","mergeWarning","info","warning","newMeta","existingWarnings","makeNetworkReplayBreadcrumb","startTimestamp","endTimestamp","request","dropUndefinedKeys","buildSkippedNetworkRequestOrResponse","bodySize","buildNetworkRequestOrResponse","headers","normalizedBody","warnings","normalizeNetworkBody","getAllowedHeaders","allowedHeaders","filteredHeaders","formData","exceedsSizeLimit","isProbablyJson","_strIsProbablyJson","truncatedBody","first","last","urlMatches","urls","fullUrl","getFullUrl","stringMatchesSomePattern","baseURI","fixedUrl","captureFetchBreadcrumbToReplay","_prepareFetchData","enrichFetchBreadcrumb","input","_getFetchRequestArgBody","reqSize","resSize","requestBodySize","responseBodySize","captureDetails","_getRequestInfo","_getResponseInfo","networkCaptureBodies","networkRequestHeaders","getRequestHeaders","requestBody","bodyStr","networkResponseHeaders","getAllHeaders","bodyText","_parseFetchResponseBody","getResponseData","res","_tryCloneResponse","_tryGetResponseText","fetchArgs","allHeaders","getHeadersFromOptions","_getResponseText","txt","captureXhrBreadcrumbToReplay","_prepareXhrData","enrichXhrBreadcrumb","xhr","_getBodySize","xhrInfo","SENTRY_XHR_DATA_KEY","getResponseHeaders","requestWarning","responseBody","responseWarning","_getXhrResponseBody","acc","line","errors","_parseXhrResponse","responseType","handleNetworkBreadcrumbs","networkDetailAllowUrls","networkDetailDenyUrls","beforeAddNetworkBreadcrumb","_isXhrBreadcrumb","_isXhrHint","_isFetchBreadcrumb","_isFetchHint","addGlobalListeners","addClickKeypressInstrumentationHandler","addHistoryInstrumentationHandler","addEventProcessor","dsc","replayId","span","feedbackEvent","addMemoryEntry","createMemoryEntry","memoryEntry","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","debounce","callbackReturnValue","timerId","maxTimerId","maxWait","invokeFunc","cancelTimers","flush","debounced","getHandleRecordingEmit","hadFirstEvent","_isCheckout","addSettingsEvent","earliestEvent","createOptionsEvent","createReplayEnvelope","replayEvent","recordingData","createEnvelope","createEventEnvelopeHeaders","getSdkMetadataForEnvelopeHeader","prepareRecordingData","payloadWithSequence","replayHeaders","sequence","prepareReplayEvent","scope","event_id","integrations","eventHint","preparedEvent","prepareEvent","getIsolationScope","metadata","version","sendReplayRequest","segment_id","eventContext","preparedRecordingData","errorIds","traceIds","initialTimestamp","getCurrentScope","transport","resolvedSyncPromise","baseEvent","envelope","TransportStatusCodeError","rateLimits","updateRateLimits","isRateLimited","RateLimitError","sendReplay","replayData","retryConfig","setContext","captureException","THROTTLED","SKIPPED","throttle","maxCount","durationSeconds","counter","_cleanup","_getTotalCount","isThrottled","wasThrottled","ReplayContainer","recordingOptions","slowClickTimeout","slowClickIgnoreSelectors","errorSampleRate","canvasOptions","forceFlush","continueRecording","activityTime","hasStoppedRecording","cbResult","urlPath","lastActiveSpan","getActiveSpan","lastRootSpan","getRootSpan","spanToJSON","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","currentSession","_lastActivity","performanceEntries","eventBuffer","_context","force","tooShort","tooLong","mutationLimit","mutationBreadcrumbLimit","overMutationLimit","getOption","selectors","defaultSelectors","getPrivacyOptions","mask","unmask","block","unblock","ignore","defaultBlockedElements","maskSelector","unmaskSelector","maskAttribute","maskAttributes","privacyOptions","MEDIA_SELECTORS","DEFAULT_NETWORK_HEADERS","_initialized","replayIntegration","Replay","flushMinDelay","flushMaxDelay","minReplayDuration","_experiments","blockAllMedia","maskFn","beforeAddRecordingEvent","_getMergedNetworkHeaders","finalOptions","loadReplayOptionsFromClient","canvasIntegration","initialOptions","opt","consoleSandbox","replaysSessionSampleRate","parseSampleRate","replaysOnErrorSampleRate","MS_TO_NS","THREAD_ID_STRING","THREAD_NAME","OS_PLATFORM","OS_PLATFORM_VERSION","OS_ARCH","OS_BROWSER","OS_MODEL","OS_LOCALE","isUserAgentData","userAgentData","ua","firstUa","isProcessedJSSelfProfile","profile","enrichWithThreadInformation","convertJSSelfProfileToSampledFormat","getTraceId","traceId","createProfilePayload","profile_id","start_timestamp","processed_profile","enrichedThreadProfile","transactionStartMs","timestampInSeconds","transactionEndMs","DEFAULT_ENVIRONMENT","applyDebugMetadata","isAutomatedPageLoadSpan","EMPTY_STACK_ID","STACK_ID","adjustForOriginChange","jsSample","stackTop","frame","sample","addProfilesToEnvelope","profiles","findProfiledTransactionsFromEnvelope","forEachEnvelopeItem","j","debugIdStackParserCache","resource_paths","debugIdMap","stackParser","debugIdStackFramesCache","cachedDebugIdStackFrameCache","filenameDebugIdMap","debugIdStackTrace","parsedStack","cachedParsedStack","stackFrame","file","images","isValidSampleRate","rate","isValidProfile","PROFILING_CONSTRUCTOR_FAILED","MAX_PROFILE_DURATION_MS","isJSProfilerSupported","maybeProfiler","startJSSelfProfile","JSProfilerConstructor","samplingIntervalMS","maxSamples","shouldProfileSpan","profilesSampleRate","createProfilingEvent","PROFILE_MAP","getActiveProfilesCount","takeProfileFromGlobalCache","addProfileToGlobalCache","startProfileForSpan","profiler","profileId","onProfileHandler","maxDurationTimeoutID","originalEnd","profilingWrappedSpanEnd","INTEGRATION_NAME","_browserProfilingIntegration","activeSpan","rootSpan","profiledTransactionEvents","profilesToAddToEnvelope","profiledTransaction","profileEvent","browserProfilingIntegration","defineIntegration","opts","applySdkMetadata","init$1","browserTracingIntegration","setGlobals","browserTracingIntegrationInstance","browserTracingIntegration$1","startPageloadSpan","setTag","sentryInit","_a","useEffect","useLocation","useMatches"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}