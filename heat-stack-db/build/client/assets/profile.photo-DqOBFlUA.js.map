{"version":3,"file":"profile.photo-DqOBFlUA.js","sources":["../../../app/routes/settings+/profile.photo.tsx"],"sourcesContent":["import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { invariantResponse } from '@epic-web/invariant'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\tredirect,\n\tunstable_createMemoryUploadHandler,\n\tunstable_parseMultipartFormData,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n} from '@remix-run/node'\nimport {\n\tForm,\n\tuseActionData,\n\tuseLoaderData,\n\tuseNavigation,\n} from '@remix-run/react'\nimport { useState } from 'react'\nimport { z } from 'zod'\nimport { ErrorList } from '#app/components/forms.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport {\n\tgetUserImgSrc,\n\tuseDoubleCheck,\n\tuseIsPending,\n} from '#app/utils/misc.tsx'\nimport { type BreadcrumbHandle } from './profile.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"avatar\">Photo</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nconst MAX_SIZE = 1024 * 1024 * 3 // 3MB\n\nconst DeleteImageSchema = z.object({\n\tintent: z.literal('delete'),\n})\n\nconst NewImageSchema = z.object({\n\tintent: z.literal('submit'),\n\tphotoFile: z\n\t\t.instanceof(File)\n\t\t.refine(file => file.size > 0, 'Image is required')\n\t\t.refine(file => file.size <= MAX_SIZE, 'Image size must be less than 3MB'),\n})\n\nconst PhotoFormSchema = z.discriminatedUnion('intent', [\n\tDeleteImageSchema,\n\tNewImageSchema,\n])\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst user = await prisma.user.findUnique({\n\t\twhere: { id: userId },\n\t\tselect: {\n\t\t\tid: true,\n\t\t\tname: true,\n\t\t\tusername: true,\n\t\t\timage: { select: { id: true } },\n\t\t},\n\t})\n\tinvariantResponse(user, 'User not found', { status: 404 })\n\treturn json({ user })\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await unstable_parseMultipartFormData(\n\t\trequest,\n\t\tunstable_createMemoryUploadHandler({ maxPartSize: MAX_SIZE }),\n\t)\n\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: PhotoFormSchema.transform(async data => {\n\t\t\tif (data.intent === 'delete') return { intent: 'delete' }\n\t\t\tif (data.photoFile.size <= 0) return z.NEVER\n\t\t\treturn {\n\t\t\t\tintent: data.intent,\n\t\t\t\timage: {\n\t\t\t\t\tcontentType: data.photoFile.type,\n\t\t\t\t\tblob: Buffer.from(await data.photoFile.arrayBuffer()),\n\t\t\t\t},\n\t\t\t}\n\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { image, intent } = submission.value\n\n\tif (intent === 'delete') {\n\t\tawait prisma.userImage.deleteMany({ where: { userId } })\n\t\treturn redirect('/settings/profile')\n\t}\n\n\tawait prisma.$transaction(async $prisma => {\n\t\tawait $prisma.userImage.deleteMany({ where: { userId } })\n\t\tawait $prisma.user.update({\n\t\t\twhere: { id: userId },\n\t\t\tdata: { image: { create: image } },\n\t\t})\n\t})\n\n\treturn redirect('/settings/profile')\n}\n\nexport default function PhotoRoute() {\n\tconst data = useLoaderData<typeof loader>()\n\n\tconst doubleCheckDeleteImage = useDoubleCheck()\n\n\tconst actionData = useActionData<typeof action>()\n\tconst navigation = useNavigation()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'profile-photo',\n\t\tconstraint: getZodConstraint(PhotoFormSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: PhotoFormSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\tconst isPending = useIsPending()\n\tconst pendingIntent = isPending ? navigation.formData?.get('intent') : null\n\tconst lastSubmissionIntent = fields.intent.value\n\n\tconst [newImageSrc, setNewImageSrc] = useState<string | null>(null)\n\n\treturn (\n\t\t<div>\n\t\t\t<Form\n\t\t\t\tmethod=\"POST\"\n\t\t\t\tencType=\"multipart/form-data\"\n\t\t\t\tclassName=\"flex flex-col items-center justify-center gap-10\"\n\t\t\t\tonReset={() => setNewImageSrc(null)}\n\t\t\t\t{...getFormProps(form)}\n\t\t\t>\n\t\t\t\t<img\n\t\t\t\t\tsrc={\n\t\t\t\t\t\tnewImageSrc ?? (data.user ? getUserImgSrc(data.user.image?.id) : '')\n\t\t\t\t\t}\n\t\t\t\t\tclassName=\"h-52 w-52 rounded-full object-cover\"\n\t\t\t\t\talt={data.user?.name ?? data.user?.username}\n\t\t\t\t/>\n\t\t\t\t<ErrorList errors={fields.photoFile.errors} id={fields.photoFile.id} />\n\t\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t\t{/*\n\t\t\t\t\t\tWe're doing some kinda odd things to make it so this works well\n\t\t\t\t\t\twithout JavaScript. Basically, we're using CSS to ensure the right\n\t\t\t\t\t\tbuttons show up based on the input's \"valid\" state (whether or not\n\t\t\t\t\t\tan image has been selected). Progressive enhancement FTW!\n\t\t\t\t\t*/}\n\t\t\t\t\t<input\n\t\t\t\t\t\t{...getInputProps(fields.photoFile, { type: 'file' })}\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\tclassName=\"peer sr-only\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\ttabIndex={newImageSrc ? -1 : 0}\n\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\tconst file = e.currentTarget.files?.[0]\n\t\t\t\t\t\t\tif (file) {\n\t\t\t\t\t\t\t\tconst reader = new FileReader()\n\t\t\t\t\t\t\t\treader.onload = event => {\n\t\t\t\t\t\t\t\t\tsetNewImageSrc(event.target?.result?.toString() ?? null)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treader.readAsDataURL(file)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tasChild\n\t\t\t\t\t\tclassName=\"cursor-pointer peer-valid:hidden peer-focus-within:ring-2 peer-focus-visible:ring-2\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<label htmlFor={fields.photoFile.id}>\n\t\t\t\t\t\t\t<Icon name=\"pencil-1\">Change</Icon>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<StatusButton\n\t\t\t\t\t\tname=\"intent\"\n\t\t\t\t\t\tvalue=\"submit\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tclassName=\"peer-invalid:hidden\"\n\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\tpendingIntent === 'submit'\n\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t: lastSubmissionIntent === 'submit'\n\t\t\t\t\t\t\t\t\t? form.status ?? 'idle'\n\t\t\t\t\t\t\t\t\t: 'idle'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave Photo\n\t\t\t\t\t</StatusButton>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"destructive\"\n\t\t\t\t\t\tclassName=\"peer-invalid:hidden\"\n\t\t\t\t\t\t{...form.reset.getButtonProps()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon name=\"trash\">Reset</Icon>\n\t\t\t\t\t</Button>\n\t\t\t\t\t{data.user.image?.id ? (\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\tclassName=\"peer-valid:hidden\"\n\t\t\t\t\t\t\tvariant=\"destructive\"\n\t\t\t\t\t\t\t{...doubleCheckDeleteImage.getButtonProps({\n\t\t\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t\t\t\tname: 'intent',\n\t\t\t\t\t\t\t\tvalue: 'delete',\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\t\tpendingIntent === 'delete'\n\t\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t\t: lastSubmissionIntent === 'delete'\n\t\t\t\t\t\t\t\t\t\t? form.status ?? 'idle'\n\t\t\t\t\t\t\t\t\t\t: 'idle'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon name=\"trash\">\n\t\t\t\t\t\t\t\t{doubleCheckDeleteImage.doubleCheck\n\t\t\t\t\t\t\t\t\t? 'Are you sure?'\n\t\t\t\t\t\t\t\t\t: 'Delete'}\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<ErrorList errors={form.errors} />\n\t\t\t</Form>\n\t\t</div>\n\t)\n}\n"],"names":["handle","breadcrumb","jsx","Icon","name","children","getSitemapEntries","MAX_SIZE","DeleteImageSchema","z","object","intent","literal","NewImageSchema","photoFile","instanceof","File","refine","file","size","PhotoFormSchema","discriminatedUnion","PhotoRoute","data","useLoaderData","doubleCheckDeleteImage","useDoubleCheck","actionData","useActionData","navigation","useNavigation","form","fields","useForm","id","constraint","getZodConstraint","lastResult","result","onValidate","formData","parseWithZod","schema","shouldRevalidate","pendingIntent","useIsPending","get","lastSubmissionIntent","value","newImageSrc","setNewImageSrc","useState","jsxs","Form","method","encType","className","onReset","getFormProps","src","user","getUserImgSrc","image","alt","username","ErrorList","errors","getInputProps","type","accept","required","tabIndex","onChange","e","currentTarget","files","reader","FileReader","onload","event","target","toString","readAsDataURL","Button","asChild","htmlFor","StatusButton","status","variant","reset","getButtonProps","doubleCheck"],"mappings":"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"}