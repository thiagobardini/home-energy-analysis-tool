{"version":3,"file":"index.js","sources":["../../app/utils/env.server.ts","../../app/utils/nonce-provider.ts","../../app/utils/timing.server.ts","../../app/entry.server.tsx","../../app/utils/extended-theme.ts","../../app/utils/misc.tsx","../../app/components/error-boundary.tsx","../../app/components/ui/icons/sprite.svg","../../app/components/ui/icon.tsx","../../app/components/progress-bar.tsx","../../app/components/ui/input.tsx","../../app/components/ui/label.tsx","../../app/components/ui/button.tsx","../../app/components/ui/tooltip.tsx","../../app/components/ui/status-button.tsx","../../app/components/search-bar.tsx","../../app/components/toaster.tsx","../../app/components/ui/dropdown-menu.tsx","../../app/components/ui/sonner.tsx","../../app/utils/request-info.ts","../../app/utils/client-hints.tsx","../../app/utils/theme.server.ts","../../app/routes/resources+/theme-switch.tsx","../../app/styles/tailwind.css?url","../../app/routes/admin+/cache_.sqlite.server.ts","../../app/utils/cache.server.ts","../../app/utils/providers/constants.ts","../../app/utils/providers/github.server.ts","../../app/utils/connections.server.ts","../../app/utils/db.server.ts","../../app/utils/session.server.ts","../../app/utils/auth.server.ts","../../app/utils/honeypot.server.ts","../../app/utils/toast.server.ts","../../app/utils/user.ts","../../app/root.tsx","../../app/routes/$.tsx","../../app/utils/connections.tsx","../../app/utils/redirect-cookie.server.ts","../../app/routes/_auth+/auth.$provider.ts","../../app/utils/providers/provider.ts","../../app/utils/verification.server.ts","../../app/routes/settings+/profile.two-factor.tsx","../../app/utils/email.server.ts","../../app/components/ui/checkbox.tsx","../../app/components/ui/input-otp.tsx","../../app/components/ui/textarea.tsx","../../app/components/forms.tsx","../../app/utils/user-validation.ts","../../app/routes/settings+/profile.change-email.tsx","../../app/routes/settings+/profile.change-email.server.tsx","../../app/components/spacer.tsx","../../app/routes/_auth+/onboarding.tsx","../../app/routes/_auth+/onboarding.server.ts","../../app/routes/_auth+/reset-password.tsx","../../app/routes/_auth+/reset-password.server.ts","../../app/routes/_auth+/verify.tsx","../../app/routes/_auth+/verify.server.ts","../../app/routes/_auth+/login.server.ts","../../app/routes/_auth+/onboarding_.$provider.tsx","../../app/routes/_auth+/auth.$provider.callback.ts","../../app/routes/_auth+/forgot-password.tsx","../../app/routes/_auth+/login.tsx","../../app/routes/_auth+/logout.tsx","../../app/routes/_auth+/signup.tsx","../../app/routes/_marketing+/about.tsx","../../app/routes/_marketing+/logos/docker.svg","../../app/routes/_marketing+/logos/eslint.svg","../../app/routes/_marketing+/logos/faker.svg","../../app/routes/_marketing+/logos/fly.svg","../../app/routes/_marketing+/logos/github.svg","../../app/routes/_marketing+/logos/msw.svg","../../app/routes/_marketing+/logos/playwright.svg","../../app/routes/_marketing+/logos/prettier.svg","../../app/routes/_marketing+/logos/prisma.svg","../../app/routes/_marketing+/logos/radix.svg","../../app/routes/_marketing+/logos/react-email.svg","../../app/routes/_marketing+/logos/remix.svg","../../app/routes/_marketing+/logos/resend.svg","../../app/routes/_marketing+/logos/sentry.svg","../../app/routes/_marketing+/logos/shadcn-ui.svg","../../app/routes/_marketing+/logos/sqlite.svg","../../app/routes/_marketing+/logos/tailwind.svg","../../app/routes/_marketing+/logos/testing-library.png","../../app/routes/_marketing+/logos/typescript.svg","../../app/routes/_marketing+/logos/vitest.svg","../../app/routes/_marketing+/logos/zod.svg","../../app/routes/_marketing+/logos/logos.ts","../../app/routes/_marketing+/index.tsx","../../app/routes/_marketing+/privacy.tsx","../../app/routes/_marketing+/support.tsx","../../app/routes/_marketing+/tailwind-preset.ts","../../app/routes/_marketing+/tos.tsx","../../app/routes/_seo+/robots[.]txt.ts","../../app/routes/_seo+/sitemap[.]xml.ts","../../app/utils/permissions.server.ts","../../app/routes/admin+/cache.tsx","../../app/routes/admin+/cache_.lru.$cacheKey.ts","../../app/routes/admin+/cache_.sqlite.tsx","../../app/routes/admin+/cache_.sqlite.$cacheKey.ts","../../app/routes/me.tsx","../../app/routes/resources+/download-user-data.tsx","../../app/routes/resources+/healthcheck.tsx","../../app/routes/resources+/note-images.$imageId.tsx","../../app/routes/resources+/user-images.$imageId.tsx","../../app/routes/settings+/profile.tsx","../../app/routes/settings+/profile.connections.tsx","../../app/routes/settings+/profile.index.tsx","../../app/routes/settings+/profile.password.tsx","../../app/routes/settings+/profile.password_.create.tsx","../../app/routes/settings+/profile.photo.tsx","../../app/routes/settings+/profile.two-factor.disable.tsx","../../app/routes/settings+/profile.two-factor.verify.tsx","../../app/routes/settings+/profile.two-factor.index.tsx","../../app/routes/users+/$username.tsx","../../app/routes/users+/$username_+/notes.tsx","../../app/components/floating-toolbar.tsx","../../app/routes/users+/$username_+/notes.$noteId.tsx","../../app/routes/users+/$username_+/__note-editor.tsx","../../app/routes/users+/$username_+/__note-editor.server.tsx","../../app/routes/users+/$username_+/notes.$noteId_.edit.tsx","../../app/routes/users+/$username_+/notes.index.tsx","../../app/routes/users+/$username_+/notes.new.tsx","../../app/routes/users+/index.tsx"],"sourcesContent":["import { z } from 'zod'\n\nconst schema = z.object({\n\tNODE_ENV: z.enum(['production', 'development', 'test'] as const),\n\tDATABASE_PATH: z.string(),\n\tDATABASE_URL: z.string(),\n\tSESSION_SECRET: z.string(),\n\tINTERNAL_COMMAND_TOKEN: z.string(),\n\tHONEYPOT_SECRET: z.string(),\n\tCACHE_DATABASE_PATH: z.string(),\n\t// If you plan on using Sentry, uncomment this line\n\t// SENTRY_DSN: z.string(),\n\t// If you plan to use Resend, uncomment this line\n\t// RESEND_API_KEY: z.string(),\n\t// If you plan to use GitHub auth, remove the default:\n\tGITHUB_CLIENT_ID: z.string().default('MOCK_GITHUB_CLIENT_ID'),\n\tGITHUB_CLIENT_SECRET: z.string().default('MOCK_GITHUB_CLIENT_SECRET'),\n\tGITHUB_TOKEN: z.string().default('MOCK_GITHUB_TOKEN'),\n\tALLOW_INDEXING: z.enum(['true', 'false']).optional(),\n})\n\ndeclare global {\n\tnamespace NodeJS {\n\t\tinterface ProcessEnv extends z.infer<typeof schema> {}\n\t}\n}\n\nexport function init() {\n\tconst parsed = schema.safeParse(process.env)\n\n\tif (parsed.success === false) {\n\t\tconsole.error(\n\t\t\t'‚ùå Invalid environment variables:',\n\t\t\tparsed.error.flatten().fieldErrors,\n\t\t)\n\n\t\tthrow new Error('Invalid environment variables')\n\t}\n}\n\n/**\n * This is used in both `entry.server.ts` and `root.tsx` to ensure that\n * the environment variables are set and globally available before the app is\n * started.\n *\n * NOTE: Do *not* add any environment variables in here that you do not wish to\n * be included in the client.\n * @returns all public ENV variables\n */\nexport function getEnv() {\n\treturn {\n\t\tMODE: process.env.NODE_ENV,\n\t\tSENTRY_DSN: process.env.SENTRY_DSN,\n\t\tALLOW_INDEXING: process.env.ALLOW_INDEXING,\n\t}\n}\n\ntype ENV = ReturnType<typeof getEnv>\n\ndeclare global {\n\tvar ENV: ENV\n\tinterface Window {\n\t\tENV: ENV\n\t}\n}\n","import * as React from 'react'\n\nexport const NonceContext = React.createContext<string>('')\nexport const NonceProvider = NonceContext.Provider\nexport const useNonce = () => React.useContext(NonceContext)\n","import { type CreateReporter } from '@epic-web/cachified'\n\nexport type Timings = Record<\n\tstring,\n\tArray<\n\t\t{ desc?: string } & (\n\t\t\t| { time: number; start?: never }\n\t\t\t| { time?: never; start: number }\n\t\t)\n\t>\n>\n\nexport function makeTimings(type: string, desc?: string) {\n\tconst timings: Timings = {\n\t\t[type]: [{ desc, start: performance.now() }],\n\t}\n\tObject.defineProperty(timings, 'toString', {\n\t\tvalue: function () {\n\t\t\treturn getServerTimeHeader(timings)\n\t\t},\n\t\tenumerable: false,\n\t})\n\treturn timings\n}\n\nfunction createTimer(type: string, desc?: string) {\n\tconst start = performance.now()\n\treturn {\n\t\tend(timings: Timings) {\n\t\t\tlet timingType = timings[type]\n\n\t\t\tif (!timingType) {\n\t\t\t\ttimingType = timings[type] = []\n\t\t\t}\n\t\t\ttimingType.push({ desc, time: performance.now() - start })\n\t\t},\n\t}\n}\n\nexport async function time<ReturnType>(\n\tfn: Promise<ReturnType> | (() => ReturnType | Promise<ReturnType>),\n\t{\n\t\ttype,\n\t\tdesc,\n\t\ttimings,\n\t}: {\n\t\ttype: string\n\t\tdesc?: string\n\t\ttimings?: Timings\n\t},\n): Promise<ReturnType> {\n\tconst timer = createTimer(type, desc)\n\tconst promise = typeof fn === 'function' ? fn() : fn\n\tif (!timings) return promise\n\n\tconst result = await promise\n\n\ttimer.end(timings)\n\treturn result\n}\n\nexport function getServerTimeHeader(timings?: Timings) {\n\tif (!timings) return ''\n\treturn Object.entries(timings)\n\t\t.map(([key, timingInfos]) => {\n\t\t\tconst dur = timingInfos\n\t\t\t\t.reduce((acc, timingInfo) => {\n\t\t\t\t\tconst time = timingInfo.time ?? performance.now() - timingInfo.start\n\t\t\t\t\treturn acc + time\n\t\t\t\t}, 0)\n\t\t\t\t.toFixed(1)\n\t\t\tconst desc = timingInfos\n\t\t\t\t.map(t => t.desc)\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.join(' & ')\n\t\t\treturn [\n\t\t\t\tkey.replaceAll(/(:| |@|=|;|,|\\/|\\\\)/g, '_'),\n\t\t\t\tdesc ? `desc=${JSON.stringify(desc)}` : null,\n\t\t\t\t`dur=${dur}`,\n\t\t\t]\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.join(';')\n\t\t})\n\t\t.join(',')\n}\n\nexport function combineServerTimings(headers1: Headers, headers2: Headers) {\n\tconst newHeaders = new Headers(headers1)\n\tnewHeaders.append('Server-Timing', headers2.get('Server-Timing') ?? '')\n\treturn newHeaders.get('Server-Timing') ?? ''\n}\n\nexport function cachifiedTimingReporter<Value>(\n\ttimings?: Timings,\n): undefined | CreateReporter<Value> {\n\tif (!timings) return\n\n\treturn ({ key }) => {\n\t\tconst cacheRetrievalTimer = createTimer(\n\t\t\t`cache:${key}`,\n\t\t\t`${key} cache retrieval`,\n\t\t)\n\t\tlet getFreshValueTimer: ReturnType<typeof createTimer> | undefined\n\t\treturn event => {\n\t\t\tswitch (event.name) {\n\t\t\t\tcase 'getFreshValueStart':\n\t\t\t\t\tgetFreshValueTimer = createTimer(\n\t\t\t\t\t\t`getFreshValue:${key}`,\n\t\t\t\t\t\t`request forced to wait for a fresh ${key} value`,\n\t\t\t\t\t)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'getFreshValueSuccess':\n\t\t\t\t\tgetFreshValueTimer?.end(timings)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'done':\n\t\t\t\t\tcacheRetrievalTimer.end(timings)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n}\n","import { PassThrough } from 'stream'\nimport {\n\tcreateReadableStreamFromReadable,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n\ttype HandleDocumentRequestFunction,\n} from '@remix-run/node'\nimport { RemixServer } from '@remix-run/react'\nimport * as Sentry from '@sentry/remix'\nimport chalk from 'chalk'\nimport { isbot } from 'isbot'\nimport { renderToPipeableStream } from 'react-dom/server'\nimport { getEnv, init } from './utils/env.server.ts'\nimport { getInstanceInfo } from './utils/litefs.server.ts'\nimport { NonceProvider } from './utils/nonce-provider.ts'\nimport { makeTimings } from './utils/timing.server.ts'\n\nconst ABORT_DELAY = 5000\n\ninit()\nglobal.ENV = getEnv()\n\nif (ENV.MODE === 'production' && ENV.SENTRY_DSN) {\n\timport('./utils/monitoring.server.ts').then(({ init }) => init())\n}\n\ntype DocRequestArgs = Parameters<HandleDocumentRequestFunction>\n\nexport default async function handleRequest(...args: DocRequestArgs) {\n\tconst [\n\t\trequest,\n\t\tresponseStatusCode,\n\t\tresponseHeaders,\n\t\tremixContext,\n\t\tloadContext,\n\t] = args\n\tconst { currentInstance, primaryInstance } = await getInstanceInfo()\n\tresponseHeaders.set('fly-region', process.env.FLY_REGION ?? 'unknown')\n\tresponseHeaders.set('fly-app', process.env.FLY_APP_NAME ?? 'unknown')\n\tresponseHeaders.set('fly-primary-instance', primaryInstance)\n\tresponseHeaders.set('fly-instance', currentInstance)\n\n\tconst callbackName = isbot(request.headers.get('user-agent'))\n\t\t? 'onAllReady'\n\t\t: 'onShellReady'\n\n\tconst nonce = String(loadContext.cspNonce) ?? undefined\n\treturn new Promise(async (resolve, reject) => {\n\t\tlet didError = false\n\t\t// NOTE: this timing will only include things that are rendered in the shell\n\t\t// and will not include suspended components and deferred loaders\n\t\tconst timings = makeTimings('render', 'renderToPipeableStream')\n\n\t\tconst { pipe, abort } = renderToPipeableStream(\n\t\t\t<NonceProvider value={nonce}>\n\t\t\t\t<RemixServer context={remixContext} url={request.url} />\n\t\t\t</NonceProvider>,\n\t\t\t{\n\t\t\t\t[callbackName]: () => {\n\t\t\t\t\tconst body = new PassThrough()\n\t\t\t\t\tresponseHeaders.set('Content-Type', 'text/html')\n\t\t\t\t\tresponseHeaders.append('Server-Timing', timings.toString())\n\t\t\t\t\tresolve(\n\t\t\t\t\t\tnew Response(createReadableStreamFromReadable(body), {\n\t\t\t\t\t\t\theaders: responseHeaders,\n\t\t\t\t\t\t\tstatus: didError ? 500 : responseStatusCode,\n\t\t\t\t\t\t}),\n\t\t\t\t\t)\n\t\t\t\t\tpipe(body)\n\t\t\t\t},\n\t\t\t\tonShellError: (err: unknown) => {\n\t\t\t\t\treject(err)\n\t\t\t\t},\n\t\t\t\tonError: () => {\n\t\t\t\t\tdidError = true\n\t\t\t\t},\n\t\t\t\tnonce,\n\t\t\t},\n\t\t)\n\n\t\tsetTimeout(abort, ABORT_DELAY)\n\t})\n}\n\nexport async function handleDataRequest(response: Response) {\n\tconst { currentInstance, primaryInstance } = await getInstanceInfo()\n\tresponse.headers.set('fly-region', process.env.FLY_REGION ?? 'unknown')\n\tresponse.headers.set('fly-app', process.env.FLY_APP_NAME ?? 'unknown')\n\tresponse.headers.set('fly-primary-instance', primaryInstance)\n\tresponse.headers.set('fly-instance', currentInstance)\n\n\treturn response\n}\n\nexport function handleError(\n\terror: unknown,\n\t{ request }: LoaderFunctionArgs | ActionFunctionArgs,\n): void {\n\t// Skip capturing if the request is aborted as Remix docs suggest\n\t// Ref: https://remix.run/docs/en/main/file-conventions/entry.server#handleerror\n\tif (request.signal.aborted) {\n\t\treturn\n\t}\n\tif (error instanceof Error) {\n\t\tconsole.error(chalk.red(error.stack))\n\t\tSentry.captureRemixServerException(error, 'remix.server', request)\n\t} else {\n\t\tconsole.error(chalk.red(error))\n\t\tSentry.captureException(error)\n\t}\n}\n","import { type Config } from 'tailwindcss'\n\nexport const extendedTheme = {\n\tcolors: {\n\t\tborder: 'hsl(var(--border))',\n\t\tinput: {\n\t\t\tDEFAULT: 'hsl(var(--input))',\n\t\t\tinvalid: 'hsl(var(--input-invalid))',\n\t\t},\n\t\tring: {\n\t\t\tDEFAULT: 'hsl(var(--ring))',\n\t\t\tinvalid: 'hsl(var(--foreground-destructive))',\n\t\t},\n\t\tbackground: 'hsl(var(--background))',\n\t\tforeground: {\n\t\t\tDEFAULT: 'hsl(var(--foreground))',\n\t\t\tdestructive: 'hsl(var(--foreground-destructive))',\n\t\t},\n\t\tprimary: {\n\t\t\tDEFAULT: 'hsl(var(--primary))',\n\t\t\tforeground: 'hsl(var(--primary-foreground))',\n\t\t},\n\t\tsecondary: {\n\t\t\tDEFAULT: 'hsl(var(--secondary))',\n\t\t\tforeground: 'hsl(var(--secondary-foreground))',\n\t\t},\n\t\tdestructive: {\n\t\t\tDEFAULT: 'hsl(var(--destructive))',\n\t\t\tforeground: 'hsl(var(--destructive-foreground))',\n\t\t},\n\t\tmuted: {\n\t\t\tDEFAULT: 'hsl(var(--muted))',\n\t\t\tforeground: 'hsl(var(--muted-foreground))',\n\t\t},\n\t\taccent: {\n\t\t\tDEFAULT: 'hsl(var(--accent))',\n\t\t\tforeground: 'hsl(var(--accent-foreground))',\n\t\t},\n\t\tpopover: {\n\t\t\tDEFAULT: 'hsl(var(--popover))',\n\t\t\tforeground: 'hsl(var(--popover-foreground))',\n\t\t},\n\t\tcard: {\n\t\t\tDEFAULT: 'hsl(var(--card))',\n\t\t\tforeground: 'hsl(var(--card-foreground))',\n\t\t},\n\t},\n\tborderColor: {\n\t\tDEFAULT: 'hsl(var(--border))',\n\t},\n\tborderRadius: {\n\t\tlg: 'var(--radius)',\n\t\tmd: 'calc(var(--radius) - 2px)',\n\t\tsm: 'calc(var(--radius) - 4px)',\n\t},\n\tfontSize: {\n\t\t// 1rem = 16px\n\t\t/** 80px size / 84px high / bold */\n\t\tmega: ['5rem', { lineHeight: '5.25rem', fontWeight: '700' }],\n\t\t/** 56px size / 62px high / bold */\n\t\th1: ['3.5rem', { lineHeight: '3.875rem', fontWeight: '700' }],\n\t\t/** 40px size / 48px high / bold */\n\t\th2: ['2.5rem', { lineHeight: '3rem', fontWeight: '700' }],\n\t\t/** 32px size / 36px high / bold */\n\t\th3: ['2rem', { lineHeight: '2.25rem', fontWeight: '700' }],\n\t\t/** 28px size / 36px high / bold */\n\t\th4: ['1.75rem', { lineHeight: '2.25rem', fontWeight: '700' }],\n\t\t/** 24px size / 32px high / bold */\n\t\th5: ['1.5rem', { lineHeight: '2rem', fontWeight: '700' }],\n\t\t/** 16px size / 20px high / bold */\n\t\th6: ['1rem', { lineHeight: '1.25rem', fontWeight: '700' }],\n\n\t\t/** 32px size / 36px high / normal */\n\t\t'body-2xl': ['2rem', { lineHeight: '2.25rem' }],\n\t\t/** 28px size / 36px high / normal */\n\t\t'body-xl': ['1.75rem', { lineHeight: '2.25rem' }],\n\t\t/** 24px size / 32px high / normal */\n\t\t'body-lg': ['1.5rem', { lineHeight: '2rem' }],\n\t\t/** 20px size / 28px high / normal */\n\t\t'body-md': ['1.25rem', { lineHeight: '1.75rem' }],\n\t\t/** 16px size / 20px high / normal */\n\t\t'body-sm': ['1rem', { lineHeight: '1.25rem' }],\n\t\t/** 14px size / 18px high / normal */\n\t\t'body-xs': ['0.875rem', { lineHeight: '1.125rem' }],\n\t\t/** 12px size / 16px high / normal */\n\t\t'body-2xs': ['0.75rem', { lineHeight: '1rem' }],\n\n\t\t/** 18px size / 24px high / semibold */\n\t\tcaption: ['1.125rem', { lineHeight: '1.5rem', fontWeight: '600' }],\n\t\t/** 12px size / 16px high / bold */\n\t\tbutton: ['0.75rem', { lineHeight: '1rem', fontWeight: '700' }],\n\t},\n\tkeyframes: {\n\t\t'caret-blink': {\n\t\t\t'0%,70%,100%': { opacity: '1' },\n\t\t\t'20%,50%': { opacity: '0' },\n\t\t},\n\t},\n\tanimation: {\n\t\t'caret-blink': 'caret-blink 1.25s ease-out infinite',\n\t},\n} satisfies Config['theme']\n","import { useFormAction, useNavigation } from '@remix-run/react'\nimport { clsx, type ClassValue } from 'clsx'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { useSpinDelay } from 'spin-delay'\nimport { extendTailwindMerge } from 'tailwind-merge'\nimport { extendedTheme } from './extended-theme.ts'\n\nexport function getUserImgSrc(imageId?: string | null) {\n\treturn imageId ? `/resources/user-images/${imageId}` : '/img/user.png'\n}\n\nexport function getNoteImgSrc(imageId: string) {\n\treturn `/resources/note-images/${imageId}`\n}\n\nexport function getErrorMessage(error: unknown) {\n\tif (typeof error === 'string') return error\n\tif (\n\t\terror &&\n\t\ttypeof error === 'object' &&\n\t\t'message' in error &&\n\t\ttypeof error.message === 'string'\n\t) {\n\t\treturn error.message\n\t}\n\tconsole.error('Unable to get error message for error', error)\n\treturn 'Unknown Error'\n}\n\nfunction formatColors() {\n\tconst colors = []\n\tfor (const [key, color] of Object.entries(extendedTheme.colors)) {\n\t\tif (typeof color === 'string') {\n\t\t\tcolors.push(key)\n\t\t} else {\n\t\t\tconst colorGroup = Object.keys(color).map(subKey =>\n\t\t\t\tsubKey === 'DEFAULT' ? '' : subKey,\n\t\t\t)\n\t\t\tcolors.push({ [key]: colorGroup })\n\t\t}\n\t}\n\treturn colors\n}\n\nconst customTwMerge = extendTailwindMerge<string, string>({\n\textend: {\n\t\ttheme: {\n\t\t\tcolors: formatColors(),\n\t\t\tborderRadius: Object.keys(extendedTheme.borderRadius),\n\t\t},\n\t\tclassGroups: {\n\t\t\t'font-size': [\n\t\t\t\t{\n\t\t\t\t\ttext: Object.keys(extendedTheme.fontSize),\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t},\n})\n\nexport function cn(...inputs: ClassValue[]) {\n\treturn customTwMerge(clsx(inputs))\n}\n\nexport function getDomainUrl(request: Request) {\n\tconst host =\n\t\trequest.headers.get('X-Forwarded-Host') ??\n\t\trequest.headers.get('host') ??\n\t\tnew URL(request.url).host\n\tconst protocol = request.headers.get('X-Forwarded-Proto') ?? 'http'\n\treturn `${protocol}://${host}`\n}\n\nexport function getReferrerRoute(request: Request) {\n\t// spelling errors and whatever makes this annoyingly inconsistent\n\t// in my own testing, `referer` returned the right value, but ü§∑‚Äç‚ôÇÔ∏è\n\tconst referrer =\n\t\trequest.headers.get('referer') ??\n\t\trequest.headers.get('referrer') ??\n\t\trequest.referrer\n\tconst domain = getDomainUrl(request)\n\tif (referrer?.startsWith(domain)) {\n\t\treturn referrer.slice(domain.length)\n\t} else {\n\t\treturn '/'\n\t}\n}\n\n/**\n * Merge multiple headers objects into one (uses set so headers are overridden)\n */\nexport function mergeHeaders(\n\t...headers: Array<ResponseInit['headers'] | null | undefined>\n) {\n\tconst merged = new Headers()\n\tfor (const header of headers) {\n\t\tif (!header) continue\n\t\tfor (const [key, value] of new Headers(header).entries()) {\n\t\t\tmerged.set(key, value)\n\t\t}\n\t}\n\treturn merged\n}\n\n/**\n * Combine multiple header objects into one (uses append so headers are not overridden)\n */\nexport function combineHeaders(\n\t...headers: Array<ResponseInit['headers'] | null | undefined>\n) {\n\tconst combined = new Headers()\n\tfor (const header of headers) {\n\t\tif (!header) continue\n\t\tfor (const [key, value] of new Headers(header).entries()) {\n\t\t\tcombined.append(key, value)\n\t\t}\n\t}\n\treturn combined\n}\n\n/**\n * Combine multiple response init objects into one (uses combineHeaders)\n */\nexport function combineResponseInits(\n\t...responseInits: Array<ResponseInit | null | undefined>\n) {\n\tlet combined: ResponseInit = {}\n\tfor (const responseInit of responseInits) {\n\t\tcombined = {\n\t\t\t...responseInit,\n\t\t\theaders: combineHeaders(combined.headers, responseInit?.headers),\n\t\t}\n\t}\n\treturn combined\n}\n\n/**\n * Returns true if the current navigation is submitting the current route's\n * form. Defaults to the current route's form action and method POST.\n *\n * Defaults state to 'non-idle'\n *\n * NOTE: the default formAction will include query params, but the\n * navigation.formAction will not, so don't use the default formAction if you\n * want to know if a form is submitting without specific query params.\n */\nexport function useIsPending({\n\tformAction,\n\tformMethod = 'POST',\n\tstate = 'non-idle',\n}: {\n\tformAction?: string\n\tformMethod?: 'POST' | 'GET' | 'PUT' | 'PATCH' | 'DELETE'\n\tstate?: 'submitting' | 'loading' | 'non-idle'\n} = {}) {\n\tconst contextualFormAction = useFormAction()\n\tconst navigation = useNavigation()\n\tconst isPendingState =\n\t\tstate === 'non-idle'\n\t\t\t? navigation.state !== 'idle'\n\t\t\t: navigation.state === state\n\treturn (\n\t\tisPendingState &&\n\t\tnavigation.formAction === (formAction ?? contextualFormAction) &&\n\t\tnavigation.formMethod === formMethod\n\t)\n}\n\n/**\n * This combines useSpinDelay (from https://npm.im/spin-delay) and useIsPending\n * from our own utilities to give you a nice way to show a loading spinner for\n * a minimum amount of time, even if the request finishes right after the delay.\n *\n * This avoids a flash of loading state regardless of how fast or slow the\n * request is.\n */\nexport function useDelayedIsPending({\n\tformAction,\n\tformMethod,\n\tdelay = 400,\n\tminDuration = 300,\n}: Parameters<typeof useIsPending>[0] &\n\tParameters<typeof useSpinDelay>[1] = {}) {\n\tconst isPending = useIsPending({ formAction, formMethod })\n\tconst delayedIsPending = useSpinDelay(isPending, {\n\t\tdelay,\n\t\tminDuration,\n\t})\n\treturn delayedIsPending\n}\n\nfunction callAll<Args extends Array<unknown>>(\n\t...fns: Array<((...args: Args) => unknown) | undefined>\n) {\n\treturn (...args: Args) => fns.forEach(fn => fn?.(...args))\n}\n\n/**\n * Use this hook with a button and it will make it so the first click sets a\n * `doubleCheck` state to true, and the second click will actually trigger the\n * `onClick` handler. This allows you to have a button that can be like a\n * \"are you sure?\" experience for the user before doing destructive operations.\n */\nexport function useDoubleCheck() {\n\tconst [doubleCheck, setDoubleCheck] = useState(false)\n\n\tfunction getButtonProps(\n\t\tprops?: React.ButtonHTMLAttributes<HTMLButtonElement>,\n\t) {\n\t\tconst onBlur: React.ButtonHTMLAttributes<HTMLButtonElement>['onBlur'] =\n\t\t\t() => setDoubleCheck(false)\n\n\t\tconst onClick: React.ButtonHTMLAttributes<HTMLButtonElement>['onClick'] =\n\t\t\tdoubleCheck\n\t\t\t\t? undefined\n\t\t\t\t: e => {\n\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\tsetDoubleCheck(true)\n\t\t\t\t\t}\n\n\t\tconst onKeyUp: React.ButtonHTMLAttributes<HTMLButtonElement>['onKeyUp'] =\n\t\t\te => {\n\t\t\t\tif (e.key === 'Escape') {\n\t\t\t\t\tsetDoubleCheck(false)\n\t\t\t\t}\n\t\t\t}\n\n\t\treturn {\n\t\t\t...props,\n\t\t\tonBlur: callAll(onBlur, props?.onBlur),\n\t\t\tonClick: callAll(onClick, props?.onClick),\n\t\t\tonKeyUp: callAll(onKeyUp, props?.onKeyUp),\n\t\t}\n\t}\n\n\treturn { doubleCheck, getButtonProps }\n}\n\n/**\n * Simple debounce implementation\n */\nfunction debounce<Callback extends (...args: Parameters<Callback>) => void>(\n\tfn: Callback,\n\tdelay: number,\n) {\n\tlet timer: ReturnType<typeof setTimeout> | null = null\n\treturn (...args: Parameters<Callback>) => {\n\t\tif (timer) clearTimeout(timer)\n\t\ttimer = setTimeout(() => {\n\t\t\tfn(...args)\n\t\t}, delay)\n\t}\n}\n\n/**\n * Debounce a callback function\n */\nexport function useDebounce<\n\tCallback extends (...args: Parameters<Callback>) => ReturnType<Callback>,\n>(callback: Callback, delay: number) {\n\tconst callbackRef = useRef(callback)\n\tuseEffect(() => {\n\t\tcallbackRef.current = callback\n\t})\n\treturn useMemo(\n\t\t() =>\n\t\t\tdebounce(\n\t\t\t\t(...args: Parameters<Callback>) => callbackRef.current(...args),\n\t\t\t\tdelay,\n\t\t\t),\n\t\t[delay],\n\t)\n}\n\nexport async function downloadFile(url: string, retries: number = 0) {\n\tconst MAX_RETRIES = 3\n\ttry {\n\t\tconst response = await fetch(url)\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`Failed to fetch image with status ${response.status}`)\n\t\t}\n\t\tconst contentType = response.headers.get('content-type') ?? 'image/jpg'\n\t\tconst blob = Buffer.from(await response.arrayBuffer())\n\t\treturn { contentType, blob }\n\t} catch (e) {\n\t\tif (retries > MAX_RETRIES) throw e\n\t\treturn downloadFile(url, retries + 1)\n\t}\n}\n","import {\n\ttype ErrorResponse,\n\tisRouteErrorResponse,\n\tuseParams,\n\tuseRouteError,\n} from '@remix-run/react'\nimport { captureRemixErrorBoundaryError } from '@sentry/remix'\nimport { getErrorMessage } from '#app/utils/misc.tsx'\n\ntype StatusHandler = (info: {\n\terror: ErrorResponse\n\tparams: Record<string, string | undefined>\n}) => JSX.Element | null\n\nexport function GeneralErrorBoundary({\n\tdefaultStatusHandler = ({ error }) => (\n\t\t<p>\n\t\t\t{error.status} {error.data}\n\t\t</p>\n\t),\n\tstatusHandlers,\n\tunexpectedErrorHandler = error => <p>{getErrorMessage(error)}</p>,\n}: {\n\tdefaultStatusHandler?: StatusHandler\n\tstatusHandlers?: Record<number, StatusHandler>\n\tunexpectedErrorHandler?: (error: unknown) => JSX.Element | null\n}) {\n\tconst error = useRouteError()\n\tcaptureRemixErrorBoundaryError(error)\n\tconst params = useParams()\n\n\tif (typeof document !== 'undefined') {\n\t\tconsole.error(error)\n\t}\n\n\treturn (\n\t\t<div className=\"container flex items-center justify-center p-20 text-h2\">\n\t\t\t{isRouteErrorResponse(error)\n\t\t\t\t? (statusHandlers?.[error.status] ?? defaultStatusHandler)({\n\t\t\t\t\t\terror,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t})\n\t\t\t\t: unexpectedErrorHandler(error)}\n\t\t</div>\n\t)\n}\n","export default \"__VITE_ASSET__0pJmlING__\"","import { type SVGProps } from 'react'\nimport { cn } from '#app/utils/misc.tsx'\nimport href from './icons/sprite.svg'\nimport { type IconName } from '@/icon-name'\n\nexport { href }\nexport { IconName }\n\nconst sizeClassName = {\n\tfont: 'w-[1em] h-[1em]',\n\txs: 'w-3 h-3',\n\tsm: 'w-4 h-4',\n\tmd: 'w-5 h-5',\n\tlg: 'w-6 h-6',\n\txl: 'w-7 h-7',\n} as const\n\ntype Size = keyof typeof sizeClassName\n\nconst childrenSizeClassName = {\n\tfont: 'gap-1.5',\n\txs: 'gap-1.5',\n\tsm: 'gap-1.5',\n\tmd: 'gap-2',\n\tlg: 'gap-2',\n\txl: 'gap-3',\n} satisfies Record<Size, string>\n\n/**\n * Renders an SVG icon. The icon defaults to the size of the font. To make it\n * align vertically with neighboring text, you can pass the text as a child of\n * the icon and it will be automatically aligned.\n * Alternatively, if you're not ok with the icon being to the left of the text,\n * you need to wrap the icon and text in a common parent and set the parent to\n * display \"flex\" (or \"inline-flex\") with \"items-center\" and a reasonable gap.\n *\n * Pass `title` prop to the `Icon` component to get `<title>` element rendered\n * in the SVG container, providing this way for accessibility.\n */\nexport function Icon({\n\tname,\n\tsize = 'font',\n\tclassName,\n\ttitle,\n\tchildren,\n\t...props\n}: SVGProps<SVGSVGElement> & {\n\tname: IconName\n\tsize?: Size\n\ttitle?: string\n}) {\n\tif (children) {\n\t\treturn (\n\t\t\t<span\n\t\t\t\tclassName={`inline-flex items-center ${childrenSizeClassName[size]}`}\n\t\t\t>\n\t\t\t\t<Icon\n\t\t\t\t\tname={name}\n\t\t\t\t\tsize={size}\n\t\t\t\t\tclassName={className}\n\t\t\t\t\ttitle={title}\n\t\t\t\t\t{...props}\n\t\t\t\t/>\n\t\t\t\t{children}\n\t\t\t</span>\n\t\t)\n\t}\n\treturn (\n\t\t<svg\n\t\t\t{...props}\n\t\t\tclassName={cn(sizeClassName[size], 'inline self-center', className)}\n\t\t>\n\t\t\t{title ? <title>{title}</title> : null}\n\t\t\t<use href={`${href}#${name}`} />\n\t\t</svg>\n\t)\n}\n","import { useNavigation } from '@remix-run/react'\nimport { useEffect, useRef, useState } from 'react'\nimport { useSpinDelay } from 'spin-delay'\nimport { cn } from '#app/utils/misc.tsx'\nimport { Icon } from './ui/icon.tsx'\n\nfunction EpicProgress() {\n\tconst transition = useNavigation()\n\tconst busy = transition.state !== 'idle'\n\tconst delayedPending = useSpinDelay(busy, {\n\t\tdelay: 600,\n\t\tminDuration: 400,\n\t})\n\tconst ref = useRef<HTMLDivElement>(null)\n\tconst [animationComplete, setAnimationComplete] = useState(true)\n\n\tuseEffect(() => {\n\t\tif (!ref.current) return\n\t\tif (delayedPending) setAnimationComplete(false)\n\n\t\tconst animationPromises = ref.current\n\t\t\t.getAnimations()\n\t\t\t.map(({ finished }) => finished)\n\n\t\tPromise.allSettled(animationPromises).then(() => {\n\t\t\tif (!delayedPending) setAnimationComplete(true)\n\t\t})\n\t}, [delayedPending])\n\n\treturn (\n\t\t<div\n\t\t\trole=\"progressbar\"\n\t\t\taria-hidden={delayedPending ? undefined : true}\n\t\t\taria-valuetext={delayedPending ? 'Loading' : undefined}\n\t\t\tclassName=\"fixed inset-x-0 left-0 top-0 z-50 h-[0.20rem] animate-pulse\"\n\t\t>\n\t\t\t<div\n\t\t\t\tref={ref}\n\t\t\t\tclassName={cn(\n\t\t\t\t\t'h-full w-0 bg-foreground duration-500 ease-in-out',\n\t\t\t\t\ttransition.state === 'idle' &&\n\t\t\t\t\t\t(animationComplete\n\t\t\t\t\t\t\t? 'transition-none'\n\t\t\t\t\t\t\t: 'w-full opacity-0 transition-all'),\n\t\t\t\t\tdelayedPending && transition.state === 'submitting' && 'w-5/12',\n\t\t\t\t\tdelayedPending && transition.state === 'loading' && 'w-8/12',\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t{delayedPending && (\n\t\t\t\t<div className=\"absolute flex items-center justify-center\">\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tname=\"update\"\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tclassName=\"m-1 animate-spin text-foreground\"\n\t\t\t\t\t\taria-hidden\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport { EpicProgress }\n","import * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nexport interface InputProps\n\textends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n\t({ className, type, ...props }, ref) => {\n\t\treturn (\n\t\t\t<input\n\t\t\t\ttype={type}\n\t\t\t\tclassName={cn(\n\t\t\t\t\t'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 aria-[invalid]:border-input-invalid',\n\t\t\t\t\tclassName,\n\t\t\t\t)}\n\t\t\t\tref={ref}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t)\n\t},\n)\nInput.displayName = 'Input'\n\nexport { Input }\n","import * as LabelPrimitive from '@radix-ui/react-label'\nimport { cva, type VariantProps } from 'class-variance-authority'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nconst labelVariants = cva(\n\t'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n)\n\nconst Label = React.forwardRef<\n\tReact.ElementRef<typeof LabelPrimitive.Root>,\n\tReact.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n\t\tVariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n\t<LabelPrimitive.Root\n\t\tref={ref}\n\t\tclassName={cn(labelVariants(), className)}\n\t\t{...props}\n\t/>\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nconst buttonVariants = cva(\n\t'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors outline-none focus-visible:ring-2 focus-within:ring-2 ring-ring ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: 'bg-primary text-primary-foreground hover:bg-primary/80',\n\t\t\t\tdestructive:\n\t\t\t\t\t'bg-destructive text-destructive-foreground hover:bg-destructive/80',\n\t\t\t\toutline:\n\t\t\t\t\t'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tsecondary:\n\t\t\t\t\t'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n\t\t\t\tghost: 'hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tlink: 'text-primary underline-offset-4 hover:underline',\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: 'h-10 px-4 py-2',\n\t\t\t\twide: 'px-24 py-5',\n\t\t\t\tsm: 'h-9 rounded-md px-3',\n\t\t\t\tlg: 'h-11 rounded-md px-8',\n\t\t\t\tpill: 'px-12 py-3 leading-3',\n\t\t\t\ticon: 'h-10 w-10',\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: 'default',\n\t\t\tsize: 'default',\n\t\t},\n\t},\n)\n\nexport interface ButtonProps\n\textends React.ButtonHTMLAttributes<HTMLButtonElement>,\n\t\tVariantProps<typeof buttonVariants> {\n\tasChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n\t({ className, variant, size, asChild = false, ...props }, ref) => {\n\t\tconst Comp = asChild ? Slot : 'button'\n\t\treturn (\n\t\t\t<Comp\n\t\t\t\tclassName={cn(buttonVariants({ variant, size, className }))}\n\t\t\t\tref={ref}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t)\n\t},\n)\nButton.displayName = 'Button'\n\nexport { Button, buttonVariants }\n","import * as TooltipPrimitive from '@radix-ui/react-tooltip'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n\tReact.ElementRef<typeof TooltipPrimitive.Content>,\n\tReact.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n\t<TooltipPrimitive.Content\n\t\tref={ref}\n\t\tsideOffset={sideOffset}\n\t\tclassName={cn(\n\t\t\t'z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t/>\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","import * as React from 'react'\nimport { useSpinDelay } from 'spin-delay'\nimport { cn } from '#app/utils/misc.tsx'\nimport { Button, type ButtonProps } from './button.tsx'\nimport { Icon } from './icon.tsx'\nimport {\n\tTooltip,\n\tTooltipContent,\n\tTooltipProvider,\n\tTooltipTrigger,\n} from './tooltip.tsx'\n\nexport const StatusButton = React.forwardRef<\n\tHTMLButtonElement,\n\tButtonProps & {\n\t\tstatus: 'pending' | 'success' | 'error' | 'idle'\n\t\tmessage?: string | null\n\t\tspinDelay?: Parameters<typeof useSpinDelay>[1]\n\t}\n>(({ message, status, className, children, spinDelay, ...props }, ref) => {\n\tconst delayedPending = useSpinDelay(status === 'pending', {\n\t\tdelay: 400,\n\t\tminDuration: 300,\n\t\t...spinDelay,\n\t})\n\tconst companion = {\n\t\tpending: delayedPending ? (\n\t\t\t<div\n\t\t\t\trole=\"status\"\n\t\t\t\tclassName=\"inline-flex h-6 w-6 items-center justify-center\"\n\t\t\t>\n\t\t\t\t<Icon name=\"update\" className=\"animate-spin\" title=\"loading\" />\n\t\t\t</div>\n\t\t) : null,\n\t\tsuccess: (\n\t\t\t<div\n\t\t\t\trole=\"status\"\n\t\t\t\tclassName=\"inline-flex h-6 w-6 items-center justify-center\"\n\t\t\t>\n\t\t\t\t<Icon name=\"check\" title=\"success\" />\n\t\t\t</div>\n\t\t),\n\t\terror: (\n\t\t\t<div\n\t\t\t\trole=\"status\"\n\t\t\t\tclassName=\"inline-flex h-6 w-6 items-center justify-center rounded-full bg-destructive\"\n\t\t\t>\n\t\t\t\t<Icon\n\t\t\t\t\tname=\"cross-1\"\n\t\t\t\t\tclassName=\"text-destructive-foreground\"\n\t\t\t\t\ttitle=\"error\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t),\n\t\tidle: null,\n\t}[status]\n\n\treturn (\n\t\t<Button\n\t\t\tref={ref}\n\t\t\tclassName={cn('flex justify-center gap-4', className)}\n\t\t\t{...props}\n\t\t>\n\t\t\t<div>{children}</div>\n\t\t\t{message ? (\n\t\t\t\t<TooltipProvider>\n\t\t\t\t\t<Tooltip>\n\t\t\t\t\t\t<TooltipTrigger>{companion}</TooltipTrigger>\n\t\t\t\t\t\t<TooltipContent>{message}</TooltipContent>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</TooltipProvider>\n\t\t\t) : (\n\t\t\t\tcompanion\n\t\t\t)}\n\t\t</Button>\n\t)\n})\nStatusButton.displayName = 'Button'\n","import { Form, useSearchParams, useSubmit } from '@remix-run/react'\nimport { useId } from 'react'\nimport { useDebounce, useIsPending } from '#app/utils/misc.tsx'\nimport { Icon } from './ui/icon.tsx'\nimport { Input } from './ui/input.tsx'\nimport { Label } from './ui/label.tsx'\nimport { StatusButton } from './ui/status-button.tsx'\n\nexport function SearchBar({\n\tstatus,\n\tautoFocus = false,\n\tautoSubmit = false,\n}: {\n\tstatus: 'idle' | 'pending' | 'success' | 'error'\n\tautoFocus?: boolean\n\tautoSubmit?: boolean\n}) {\n\tconst id = useId()\n\tconst [searchParams] = useSearchParams()\n\tconst submit = useSubmit()\n\tconst isSubmitting = useIsPending({\n\t\tformMethod: 'GET',\n\t\tformAction: '/users',\n\t})\n\n\tconst handleFormChange = useDebounce((form: HTMLFormElement) => {\n\t\tsubmit(form)\n\t}, 400)\n\n\treturn (\n\t\t<Form\n\t\t\tmethod=\"GET\"\n\t\t\taction=\"/users\"\n\t\t\tclassName=\"flex flex-wrap items-center justify-center gap-2\"\n\t\t\tonChange={e => autoSubmit && handleFormChange(e.currentTarget)}\n\t\t>\n\t\t\t<div className=\"flex-1\">\n\t\t\t\t<Label htmlFor={id} className=\"sr-only\">\n\t\t\t\t\tSearch\n\t\t\t\t</Label>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"search\"\n\t\t\t\t\tname=\"search\"\n\t\t\t\t\tid={id}\n\t\t\t\t\tdefaultValue={searchParams.get('search') ?? ''}\n\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\tautoFocus={autoFocus}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<StatusButton\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tstatus={isSubmitting ? 'pending' : status}\n\t\t\t\t\tclassName=\"flex w-full items-center justify-center\"\n\t\t\t\t>\n\t\t\t\t\t<Icon name=\"magnifying-glass\" size=\"md\" />\n\t\t\t\t\t<span className=\"sr-only\">Search</span>\n\t\t\t\t</StatusButton>\n\t\t\t</div>\n\t\t</Form>\n\t)\n}\n","import { useEffect } from 'react'\nimport { toast as showToast } from 'sonner'\nimport { type Toast } from '#app/utils/toast.server.ts'\n\nexport function useToast(toast?: Toast | null) {\n\tuseEffect(() => {\n\t\tif (toast) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tshowToast[toast.type](toast.title, {\n\t\t\t\t\tid: toast.id,\n\t\t\t\t\tdescription: toast.description,\n\t\t\t\t})\n\t\t\t}, 0)\n\t\t}\n\t}, [toast])\n}\n","import * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n\t\tinset?: boolean\n\t}\n>(({ className, inset, children, ...props }, ref) => (\n\t<DropdownMenuPrimitive.SubTrigger\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'flex select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent',\n\t\t\tinset && 'pl-8',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t>\n\t\t{children}\n\t\t<span className=\"ml-auto h-4 w-4\">‚ñ∂Ô∏è</span>\n\t</DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n\tDropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n\t<DropdownMenuPrimitive.SubContent\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t/>\n))\nDropdownMenuSubContent.displayName =\n\tDropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.Content>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n\t<DropdownMenuPrimitive.Portal>\n\t\t<DropdownMenuPrimitive.Content\n\t\t\tref={ref}\n\t\t\tsideOffset={sideOffset}\n\t\t\tclassName={cn(\n\t\t\t\t'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t</DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.Item>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n\t\tinset?: boolean\n\t}\n>(({ className, inset, ...props }, ref) => (\n\t<DropdownMenuPrimitive.Item\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'relative flex select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n\t\t\tinset && 'pl-8',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t/>\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n\t<DropdownMenuPrimitive.CheckboxItem\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'relative flex select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n\t\t\tclassName,\n\t\t)}\n\t\tchecked={checked}\n\t\t{...props}\n\t>\n\t\t<span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n\t\t\t<DropdownMenuPrimitive.ItemIndicator>\n\t\t\t\t<span className=\"h-4 w-4\">\n\t\t\t\t\t<svg viewBox=\"0 0 8 8\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\td=\"M1,4 L3,6 L7,2\"\n\t\t\t\t\t\t\tstroke=\"black\"\n\t\t\t\t\t\t\tstrokeWidth=\"1\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t</span>\n\t\t\t</DropdownMenuPrimitive.ItemIndicator>\n\t\t</span>\n\t\t{children}\n\t</DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n\tDropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n\t<DropdownMenuPrimitive.RadioItem\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'relative flex select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t>\n\t\t<span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n\t\t\t<DropdownMenuPrimitive.ItemIndicator>\n\t\t\t\t<span className=\"h-2 w-2\">‚ö™</span>\n\t\t\t</DropdownMenuPrimitive.ItemIndicator>\n\t\t</span>\n\t\t{children}\n\t</DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.Label>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n\t\tinset?: boolean\n\t}\n>(({ className, inset, ...props }, ref) => (\n\t<DropdownMenuPrimitive.Label\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'px-2 py-1.5 text-sm font-semibold',\n\t\t\tinset && 'pl-8',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t/>\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n\t<DropdownMenuPrimitive.Separator\n\t\tref={ref}\n\t\tclassName={cn('-mx-1 my-1 h-px bg-muted', className)}\n\t\t{...props}\n\t/>\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n\tclassName,\n\t...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n\treturn (\n\t\t<span\n\t\t\tclassName={cn('ml-auto text-xs tracking-widest opacity-60', className)}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\nDropdownMenuShortcut.displayName = 'DropdownMenuShortcut'\n\nexport {\n\tDropdownMenu,\n\tDropdownMenuTrigger,\n\tDropdownMenuContent,\n\tDropdownMenuItem,\n\tDropdownMenuCheckboxItem,\n\tDropdownMenuRadioItem,\n\tDropdownMenuLabel,\n\tDropdownMenuSeparator,\n\tDropdownMenuShortcut,\n\tDropdownMenuGroup,\n\tDropdownMenuPortal,\n\tDropdownMenuSub,\n\tDropdownMenuSubContent,\n\tDropdownMenuSubTrigger,\n\tDropdownMenuRadioGroup,\n}\n","import { Toaster as Sonner } from 'sonner'\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst EpicToaster = ({ theme, ...props }: ToasterProps) => {\n\treturn (\n\t\t<Sonner\n\t\t\ttheme={theme}\n\t\t\tclassName=\"toaster group\"\n\t\t\ttoastOptions={{\n\t\t\t\tclassNames: {\n\t\t\t\t\ttoast:\n\t\t\t\t\t\t'group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg',\n\t\t\t\t\tdescription: 'group-[.toast]:text-muted-foreground',\n\t\t\t\t\tactionButton:\n\t\t\t\t\t\t'group-[.toast]:bg-primary group-[.toast]:text-primary-foreground',\n\t\t\t\t\tcancelButton:\n\t\t\t\t\t\t'group-[.toast]:bg-muted group-[.toast]:text-muted-foreground',\n\t\t\t\t},\n\t\t\t}}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\n\nexport { EpicToaster }\n","import { invariant } from '@epic-web/invariant'\nimport { useRouteLoaderData } from '@remix-run/react'\nimport { type loader as rootLoader } from '#app/root.tsx'\n\n/**\n * @returns the request info from the root loader\n */\nexport function useRequestInfo() {\n\tconst data = useRouteLoaderData<typeof rootLoader>('root')\n\tinvariant(data?.requestInfo, 'No requestInfo found in root loader')\n\n\treturn data.requestInfo\n}\n","/**\n * This file contains utilities for using client hints for user preference which\n * are needed by the server, but are only known by the browser.\n */\nimport { getHintUtils } from '@epic-web/client-hints'\nimport {\n\tclientHint as colorSchemeHint,\n\tsubscribeToSchemeChange,\n} from '@epic-web/client-hints/color-scheme'\nimport { clientHint as timeZoneHint } from '@epic-web/client-hints/time-zone'\nimport { useRevalidator } from '@remix-run/react'\nimport * as React from 'react'\nimport { useRequestInfo } from './request-info.ts'\n\nconst hintsUtils = getHintUtils({\n\ttheme: colorSchemeHint,\n\ttimeZone: timeZoneHint,\n\t// add other hints here\n})\n\nexport const { getHints } = hintsUtils\n\n/**\n * @returns an object with the client hints and their values\n */\nexport function useHints() {\n\tconst requestInfo = useRequestInfo()\n\treturn requestInfo.hints\n}\n\n/**\n * @returns inline script element that checks for client hints and sets cookies\n * if they are not set then reloads the page if any cookie was set to an\n * inaccurate value.\n */\nexport function ClientHintCheck({ nonce }: { nonce: string }) {\n\tconst { revalidate } = useRevalidator()\n\tReact.useEffect(\n\t\t() => subscribeToSchemeChange(() => revalidate()),\n\t\t[revalidate],\n\t)\n\n\treturn (\n\t\t<script\n\t\t\tnonce={nonce}\n\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t__html: hintsUtils.getClientHintCheckScript(),\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import * as cookie from 'cookie'\n\nconst cookieName = 'en_theme'\nexport type Theme = 'light' | 'dark'\n\nexport function getTheme(request: Request): Theme | null {\n\tconst cookieHeader = request.headers.get('cookie')\n\tconst parsed = cookieHeader ? cookie.parse(cookieHeader)[cookieName] : 'light'\n\tif (parsed === 'light' || parsed === 'dark') return parsed\n\treturn null\n}\n\nexport function setTheme(theme: Theme | 'system') {\n\tif (theme === 'system') {\n\t\treturn cookie.serialize(cookieName, '', { path: '/', maxAge: -1 })\n\t} else {\n\t\treturn cookie.serialize(cookieName, theme, { path: '/', maxAge: 31536000 })\n\t}\n}\n","import { useForm, getFormProps } from '@conform-to/react'\nimport { parseWithZod } from '@conform-to/zod'\nimport { invariantResponse } from '@epic-web/invariant'\nimport { json, type ActionFunctionArgs } from '@remix-run/node'\nimport { redirect, useFetcher, useFetchers } from '@remix-run/react'\nimport { ServerOnly } from 'remix-utils/server-only'\nimport { z } from 'zod'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { useHints } from '#app/utils/client-hints.tsx'\nimport { useRequestInfo } from '#app/utils/request-info.ts'\nimport { type Theme, setTheme } from '#app/utils/theme.server.ts'\n\nconst ThemeFormSchema = z.object({\n\ttheme: z.enum(['system', 'light', 'dark']),\n\t// this is useful for progressive enhancement\n\tredirectTo: z.string().optional(),\n})\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst formData = await request.formData()\n\tconst submission = parseWithZod(formData, {\n\t\tschema: ThemeFormSchema,\n\t})\n\n\tinvariantResponse(submission.status === 'success', 'Invalid theme received')\n\n\tconst { theme, redirectTo } = submission.value\n\n\tconst responseInit = {\n\t\theaders: { 'set-cookie': setTheme(theme) },\n\t}\n\tif (redirectTo) {\n\t\treturn redirect(redirectTo, responseInit)\n\t} else {\n\t\treturn json({ result: submission.reply() }, responseInit)\n\t}\n}\n\nexport function ThemeSwitch({\n\tuserPreference,\n}: {\n\tuserPreference?: Theme | null\n}) {\n\tconst fetcher = useFetcher<typeof action>()\n\tconst requestInfo = useRequestInfo()\n\n\tconst [form] = useForm({\n\t\tid: 'theme-switch',\n\t\tlastResult: fetcher.data?.result,\n\t})\n\n\tconst optimisticMode = useOptimisticThemeMode()\n\tconst mode = optimisticMode ?? userPreference ?? 'system'\n\tconst nextMode =\n\t\tmode === 'system' ? 'light' : mode === 'light' ? 'dark' : 'system'\n\tconst modeLabel = {\n\t\tlight: (\n\t\t\t<Icon name=\"sun\">\n\t\t\t\t<span className=\"sr-only\">Light</span>\n\t\t\t</Icon>\n\t\t),\n\t\tdark: (\n\t\t\t<Icon name=\"moon\">\n\t\t\t\t<span className=\"sr-only\">Dark</span>\n\t\t\t</Icon>\n\t\t),\n\t\tsystem: (\n\t\t\t<Icon name=\"laptop\">\n\t\t\t\t<span className=\"sr-only\">System</span>\n\t\t\t</Icon>\n\t\t),\n\t}\n\n\treturn (\n\t\t<fetcher.Form\n\t\t\tmethod=\"POST\"\n\t\t\t{...getFormProps(form)}\n\t\t\taction=\"/resources/theme-switch\"\n\t\t>\n\t\t\t<ServerOnly>\n\t\t\t\t{() => (\n\t\t\t\t\t<input type=\"hidden\" name=\"redirectTo\" value={requestInfo.path} />\n\t\t\t\t)}\n\t\t\t</ServerOnly>\n\t\t\t<input type=\"hidden\" name=\"theme\" value={nextMode} />\n\t\t\t<div className=\"flex gap-2\">\n\t\t\t\t<button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tclassName=\"flex h-8 w-8 cursor-pointer items-center justify-center\"\n\t\t\t\t>\n\t\t\t\t\t{modeLabel[mode]}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</fetcher.Form>\n\t)\n}\n\n/**\n * If the user's changing their theme mode preference, this will return the\n * value it's being changed to.\n */\nexport function useOptimisticThemeMode() {\n\tconst fetchers = useFetchers()\n\tconst themeFetcher = fetchers.find(\n\t\tf => f.formAction === '/resources/theme-switch',\n\t)\n\n\tif (themeFetcher && themeFetcher.formData) {\n\t\tconst submission = parseWithZod(themeFetcher.formData, {\n\t\t\tschema: ThemeFormSchema,\n\t\t})\n\n\t\tif (submission.status === 'success') {\n\t\t\treturn submission.value.theme\n\t\t}\n\t}\n}\n\n/**\n * @returns the user's theme preference, or the client hint theme if the user\n * has not set a preference.\n */\nexport function useTheme() {\n\tconst hints = useHints()\n\tconst requestInfo = useRequestInfo()\n\tconst optimisticMode = useOptimisticThemeMode()\n\tif (optimisticMode) {\n\t\treturn optimisticMode === 'system' ? hints.theme : optimisticMode\n\t}\n\treturn requestInfo.userPrefs.theme ?? hints.theme\n}\n","import \"/Users/mccambley/dev/epic-stack-hello-world/app/styles/tailwind.css?transform-only\";export default \"__VITE_CSS_URL__2f55736572732f6d6363616d626c65792f6465762f657069632d737461636b2d68656c6c6f2d776f726c642f6170702f7374796c65732f7461696c77696e642e6373733f7472616e73666f726d2d6f6e6c79__\"","import {\n\tgetInstanceInfo,\n\tgetInternalInstanceDomain,\n} from '#app/utils/litefs.server'\n\nexport async function updatePrimaryCacheValue({\n\tkey,\n\tcacheValue,\n}: {\n\tkey: string\n\tcacheValue: any\n}) {\n\tconst { currentIsPrimary, primaryInstance } = await getInstanceInfo()\n\tif (currentIsPrimary) {\n\t\tthrow new Error(\n\t\t\t`updatePrimaryCacheValue should not be called on the primary instance (${primaryInstance})}`,\n\t\t)\n\t}\n\tconst domain = getInternalInstanceDomain(primaryInstance)\n\tconst token = process.env.INTERNAL_COMMAND_TOKEN\n\treturn fetch(`${domain}/admin/cache/sqlite`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({ key, cacheValue }),\n\t})\n}\n","import fs from 'fs'\nimport {\n\tcachified as baseCachified,\n\tverboseReporter,\n\tmergeReporters,\n\ttype CacheEntry,\n\ttype Cache as CachifiedCache,\n\ttype CachifiedOptions,\n\ttype Cache,\n\ttotalTtl,\n\ttype CreateReporter,\n} from '@epic-web/cachified'\nimport { remember } from '@epic-web/remember'\nimport Database from 'better-sqlite3'\nimport { LRUCache } from 'lru-cache'\nimport { z } from 'zod'\nimport { updatePrimaryCacheValue } from '#app/routes/admin+/cache_.sqlite.server.ts'\nimport { getInstanceInfo, getInstanceInfoSync } from './litefs.server.ts'\nimport { cachifiedTimingReporter, type Timings } from './timing.server.ts'\n\nconst CACHE_DATABASE_PATH = process.env.CACHE_DATABASE_PATH\n\nconst cacheDb = remember('cacheDb', createDatabase)\n\nfunction createDatabase(tryAgain = true): Database.Database {\n\tconst db = new Database(CACHE_DATABASE_PATH)\n\tconst { currentIsPrimary } = getInstanceInfoSync()\n\tif (!currentIsPrimary) return db\n\n\ttry {\n\t\t// create cache table with metadata JSON column and value JSON column if it does not exist already\n\t\tdb.exec(`\n\t\t\tCREATE TABLE IF NOT EXISTS cache (\n\t\t\t\tkey TEXT PRIMARY KEY,\n\t\t\t\tmetadata TEXT,\n\t\t\t\tvalue TEXT\n\t\t\t)\n\t\t`)\n\t} catch (error: unknown) {\n\t\tfs.unlinkSync(CACHE_DATABASE_PATH)\n\t\tif (tryAgain) {\n\t\t\tconsole.error(\n\t\t\t\t`Error creating cache database, deleting the file at \"${CACHE_DATABASE_PATH}\" and trying again...`,\n\t\t\t)\n\t\t\treturn createDatabase(false)\n\t\t}\n\t\tthrow error\n\t}\n\treturn db\n}\n\nconst lru = remember(\n\t'lru-cache',\n\t() => new LRUCache<string, CacheEntry<unknown>>({ max: 5000 }),\n)\n\nexport const lruCache = {\n\tname: 'app-memory-cache',\n\tset: (key, value) => {\n\t\tconst ttl = totalTtl(value?.metadata)\n\t\tlru.set(key, value, {\n\t\t\tttl: ttl === Infinity ? undefined : ttl,\n\t\t\tstart: value?.metadata?.createdTime,\n\t\t})\n\t\treturn value\n\t},\n\tget: key => lru.get(key),\n\tdelete: key => lru.delete(key),\n} satisfies Cache\n\nconst cacheEntrySchema = z.object({\n\tmetadata: z.object({\n\t\tcreatedTime: z.number(),\n\t\tttl: z.number().nullable().optional(),\n\t\tswr: z.number().nullable().optional(),\n\t}),\n\tvalue: z.unknown(),\n})\nconst cacheQueryResultSchema = z.object({\n\tmetadata: z.string(),\n\tvalue: z.string(),\n})\n\nexport const cache: CachifiedCache = {\n\tname: 'SQLite cache',\n\tget(key) {\n\t\tconst result = cacheDb\n\t\t\t.prepare('SELECT value, metadata FROM cache WHERE key = ?')\n\t\t\t.get(key)\n\t\tconst parseResult = cacheQueryResultSchema.safeParse(result)\n\t\tif (!parseResult.success) return null\n\n\t\tconst parsedEntry = cacheEntrySchema.safeParse({\n\t\t\tmetadata: JSON.parse(parseResult.data.metadata),\n\t\t\tvalue: JSON.parse(parseResult.data.value),\n\t\t})\n\t\tif (!parsedEntry.success) return null\n\t\tconst { metadata, value } = parsedEntry.data\n\t\tif (!value) return null\n\t\treturn { metadata, value }\n\t},\n\tasync set(key, entry) {\n\t\tconst { currentIsPrimary, primaryInstance } = await getInstanceInfo()\n\t\tif (currentIsPrimary) {\n\t\t\tcacheDb\n\t\t\t\t.prepare(\n\t\t\t\t\t'INSERT OR REPLACE INTO cache (key, value, metadata) VALUES (@key, @value, @metadata)',\n\t\t\t\t)\n\t\t\t\t.run({\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue: JSON.stringify(entry.value),\n\t\t\t\t\tmetadata: JSON.stringify(entry.metadata),\n\t\t\t\t})\n\t\t} else {\n\t\t\t// fire-and-forget cache update\n\t\t\tvoid updatePrimaryCacheValue({\n\t\t\t\tkey,\n\t\t\t\tcacheValue: entry,\n\t\t\t}).then(response => {\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t`Error updating cache value for key \"${key}\" on primary instance (${primaryInstance}): ${response.status} ${response.statusText}`,\n\t\t\t\t\t\t{ entry },\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},\n\tasync delete(key) {\n\t\tconst { currentIsPrimary, primaryInstance } = await getInstanceInfo()\n\t\tif (currentIsPrimary) {\n\t\t\tcacheDb.prepare('DELETE FROM cache WHERE key = ?').run(key)\n\t\t} else {\n\t\t\t// fire-and-forget cache update\n\t\t\tvoid updatePrimaryCacheValue({\n\t\t\t\tkey,\n\t\t\t\tcacheValue: undefined,\n\t\t\t}).then(response => {\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t`Error deleting cache value for key \"${key}\" on primary instance (${primaryInstance}): ${response.status} ${response.statusText}`,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},\n}\n\nexport async function getAllCacheKeys(limit: number) {\n\treturn {\n\t\tsqlite: cacheDb\n\t\t\t.prepare('SELECT key FROM cache LIMIT ?')\n\t\t\t.all(limit)\n\t\t\t.map(row => (row as { key: string }).key),\n\t\tlru: [...lru.keys()],\n\t}\n}\n\nexport async function searchCacheKeys(search: string, limit: number) {\n\treturn {\n\t\tsqlite: cacheDb\n\t\t\t.prepare('SELECT key FROM cache WHERE key LIKE ? LIMIT ?')\n\t\t\t.all(`%${search}%`, limit)\n\t\t\t.map(row => (row as { key: string }).key),\n\t\tlru: [...lru.keys()].filter(key => key.includes(search)),\n\t}\n}\n\nexport async function cachified<Value>(\n\t{\n\t\ttimings,\n\t\t...options\n\t}: CachifiedOptions<Value> & {\n\t\ttimings?: Timings\n\t},\n\treporter: CreateReporter<Value> = verboseReporter<Value>(),\n): Promise<Value> {\n\treturn baseCachified(\n\t\toptions,\n\t\tmergeReporters(cachifiedTimingReporter(timings), reporter),\n\t)\n}\n","export const MOCK_CODE_GITHUB = 'MOCK_CODE_GITHUB_KODY'\n\nexport const MOCK_CODE_GITHUB_HEADER = 'x-mock-code-github'\n","import { createId as cuid } from '@paralleldrive/cuid2'\nimport { redirect } from '@remix-run/node'\nimport { GitHubStrategy } from 'remix-auth-github'\nimport { z } from 'zod'\nimport { cache, cachified } from '../cache.server.ts'\nimport { connectionSessionStorage } from '../connections.server.ts'\nimport { type Timings } from '../timing.server.ts'\nimport { MOCK_CODE_GITHUB_HEADER, MOCK_CODE_GITHUB } from './constants.ts'\nimport { type AuthProvider } from './provider.ts'\n\nconst GitHubUserSchema = z.object({ login: z.string() })\nconst GitHubUserParseResult = z\n\t.object({\n\t\tsuccess: z.literal(true),\n\t\tdata: GitHubUserSchema,\n\t})\n\t.or(\n\t\tz.object({\n\t\t\tsuccess: z.literal(false),\n\t\t}),\n\t)\n\nconst shouldMock =\n\tprocess.env.GITHUB_CLIENT_ID?.startsWith('MOCK_') ||\n\tprocess.env.NODE_ENV === 'test'\n\nexport class GitHubProvider implements AuthProvider {\n\tgetAuthStrategy() {\n\t\treturn new GitHubStrategy(\n\t\t\t{\n\t\t\t\tclientID: process.env.GITHUB_CLIENT_ID,\n\t\t\t\tclientSecret: process.env.GITHUB_CLIENT_SECRET,\n\t\t\t\tcallbackURL: '/auth/github/callback',\n\t\t\t},\n\t\t\tasync ({ profile }) => {\n\t\t\t\tconst email = profile.emails[0]?.value.trim().toLowerCase()\n\t\t\t\tif (!email) {\n\t\t\t\t\tthrow new Error('Email not found')\n\t\t\t\t}\n\t\t\t\tconst username = profile.displayName\n\t\t\t\tconst imageUrl = profile.photos[0].value\n\t\t\t\treturn {\n\t\t\t\t\temail,\n\t\t\t\t\tid: profile.id,\n\t\t\t\t\tusername,\n\t\t\t\t\tname: profile.name.givenName,\n\t\t\t\t\timageUrl,\n\t\t\t\t}\n\t\t\t},\n\t\t)\n\t}\n\n\tasync resolveConnectionData(\n\t\tproviderId: string,\n\t\t{ timings }: { timings?: Timings } = {},\n\t) {\n\t\tconst result = await cachified({\n\t\t\tkey: `connection-data:github:${providerId}`,\n\t\t\tcache,\n\t\t\ttimings,\n\t\t\tttl: 1000 * 60,\n\t\t\tswr: 1000 * 60 * 60 * 24 * 7,\n\t\t\tasync getFreshValue(context) {\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\t`https://api.github.com/user/${providerId}`,\n\t\t\t\t\t{ headers: { Authorization: `token ${process.env.GITHUB_TOKEN}` } },\n\t\t\t\t)\n\t\t\t\tconst rawJson = await response.json()\n\t\t\t\tconst result = GitHubUserSchema.safeParse(rawJson)\n\t\t\t\tif (!result.success) {\n\t\t\t\t\t// if it was unsuccessful, then we should kick it out of the cache\n\t\t\t\t\t// asap and try again.\n\t\t\t\t\tcontext.metadata.ttl = 0\n\t\t\t\t}\n\t\t\t\treturn result\n\t\t\t},\n\t\t\tcheckValue: GitHubUserParseResult,\n\t\t})\n\t\treturn {\n\t\t\tdisplayName: result.success ? result.data.login : 'Unknown',\n\t\t\tlink: result.success ? `https://github.com/${result.data.login}` : null,\n\t\t} as const\n\t}\n\n\tasync handleMockAction(request: Request) {\n\t\tif (!shouldMock) return\n\n\t\tconst connectionSession = await connectionSessionStorage.getSession(\n\t\t\trequest.headers.get('cookie'),\n\t\t)\n\t\tconst state = cuid()\n\t\tconnectionSession.set('oauth2:state', state)\n\n\t\t// allows us to inject a code when running e2e tests,\n\t\t// but falls back to a pre-defined üê® constant\n\t\tconst code =\n\t\t\trequest.headers.get(MOCK_CODE_GITHUB_HEADER) || MOCK_CODE_GITHUB\n\t\tconst searchParams = new URLSearchParams({ code, state })\n\t\tthrow redirect(`/auth/github/callback?${searchParams}`, {\n\t\t\theaders: {\n\t\t\t\t'set-cookie':\n\t\t\t\t\tawait connectionSessionStorage.commitSession(connectionSession),\n\t\t\t},\n\t\t})\n\t}\n}\n","import { createCookieSessionStorage } from '@remix-run/node'\nimport { type ProviderName } from './connections.tsx'\nimport { GitHubProvider } from './providers/github.server.ts'\nimport { type AuthProvider } from './providers/provider.ts'\nimport { type Timings } from './timing.server.ts'\n\nexport const connectionSessionStorage = createCookieSessionStorage({\n\tcookie: {\n\t\tname: 'en_connection',\n\t\tsameSite: 'lax', // CSRF protection is advised if changing to 'none'\n\t\tpath: '/',\n\t\thttpOnly: true,\n\t\tmaxAge: 60 * 10, // 10 minutes\n\t\tsecrets: process.env.SESSION_SECRET.split(','),\n\t\tsecure: process.env.NODE_ENV === 'production',\n\t},\n})\n\nexport const providers: Record<ProviderName, AuthProvider> = {\n\tgithub: new GitHubProvider(),\n}\n\nexport function handleMockAction(providerName: ProviderName, request: Request) {\n\treturn providers[providerName].handleMockAction(request)\n}\n\nexport function resolveConnectionData(\n\tproviderName: ProviderName,\n\tproviderId: string,\n\toptions?: { timings?: Timings },\n) {\n\treturn providers[providerName].resolveConnectionData(providerId, options)\n}\n","import { remember } from '@epic-web/remember'\nimport { PrismaClient } from '@prisma/client'\nimport chalk from 'chalk'\n\nexport const prisma = remember('prisma', () => {\n\t// NOTE: if you change anything in this function you'll need to restart\n\t// the dev server to see your changes.\n\n\t// Feel free to change this log threshold to something that makes sense for you\n\tconst logThreshold = 20\n\n\tconst client = new PrismaClient({\n\t\tlog: [\n\t\t\t{ level: 'query', emit: 'event' },\n\t\t\t{ level: 'error', emit: 'stdout' },\n\t\t\t{ level: 'warn', emit: 'stdout' },\n\t\t],\n\t})\n\tclient.$on('query', async e => {\n\t\tif (e.duration < logThreshold) return\n\t\tconst color =\n\t\t\te.duration < logThreshold * 1.1\n\t\t\t\t? 'green'\n\t\t\t\t: e.duration < logThreshold * 1.2\n\t\t\t\t\t? 'blue'\n\t\t\t\t\t: e.duration < logThreshold * 1.3\n\t\t\t\t\t\t? 'yellow'\n\t\t\t\t\t\t: e.duration < logThreshold * 1.4\n\t\t\t\t\t\t\t? 'redBright'\n\t\t\t\t\t\t\t: 'red'\n\t\tconst dur = chalk[color](`${e.duration}ms`)\n\t\tconsole.info(`prisma:query - ${dur} - ${e.query}`)\n\t})\n\tclient.$connect()\n\treturn client\n})\n","import { createCookieSessionStorage } from '@remix-run/node'\n\nexport const authSessionStorage = createCookieSessionStorage({\n\tcookie: {\n\t\tname: 'en_session',\n\t\tsameSite: 'lax', // CSRF protection is advised if changing to 'none'\n\t\tpath: '/',\n\t\thttpOnly: true,\n\t\tsecrets: process.env.SESSION_SECRET.split(','),\n\t\tsecure: process.env.NODE_ENV === 'production',\n\t},\n})\n\n// we have to do this because every time you commit the session you overwrite it\n// so we store the expiration time in the cookie and reset it every time we commit\nconst originalCommitSession = authSessionStorage.commitSession\n\nObject.defineProperty(authSessionStorage, 'commitSession', {\n\tvalue: async function commitSession(\n\t\t...args: Parameters<typeof originalCommitSession>\n\t) {\n\t\tconst [session, options] = args\n\t\tif (options?.expires) {\n\t\t\tsession.set('expires', options.expires)\n\t\t}\n\t\tif (options?.maxAge) {\n\t\t\tsession.set('expires', new Date(Date.now() + options.maxAge * 1000))\n\t\t}\n\t\tconst expires = session.has('expires')\n\t\t\t? new Date(session.get('expires'))\n\t\t\t: undefined\n\t\tconst setCookieHeader = await originalCommitSession(session, {\n\t\t\t...options,\n\t\t\texpires,\n\t\t})\n\t\treturn setCookieHeader\n\t},\n})\n","import { type Connection, type Password, type User } from '@prisma/client'\nimport { redirect } from '@remix-run/node'\nimport bcrypt from 'bcryptjs'\nimport { Authenticator } from 'remix-auth'\nimport { safeRedirect } from 'remix-utils/safe-redirect'\nimport { connectionSessionStorage, providers } from './connections.server.ts'\nimport { prisma } from './db.server.ts'\nimport { combineHeaders, downloadFile } from './misc.tsx'\nimport { type ProviderUser } from './providers/provider.ts'\nimport { authSessionStorage } from './session.server.ts'\n\nexport const SESSION_EXPIRATION_TIME = 1000 * 60 * 60 * 24 * 30\nexport const getSessionExpirationDate = () =>\n\tnew Date(Date.now() + SESSION_EXPIRATION_TIME)\n\nexport const sessionKey = 'sessionId'\n\nexport const authenticator = new Authenticator<ProviderUser>(\n\tconnectionSessionStorage,\n)\n\nfor (const [providerName, provider] of Object.entries(providers)) {\n\tauthenticator.use(provider.getAuthStrategy(), providerName)\n}\n\nexport async function getUserId(request: Request) {\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst sessionId = authSession.get(sessionKey)\n\tif (!sessionId) return null\n\tconst session = await prisma.session.findUnique({\n\t\tselect: { user: { select: { id: true } } },\n\t\twhere: { id: sessionId, expirationDate: { gt: new Date() } },\n\t})\n\tif (!session?.user) {\n\t\tthrow redirect('/', {\n\t\t\theaders: {\n\t\t\t\t'set-cookie': await authSessionStorage.destroySession(authSession),\n\t\t\t},\n\t\t})\n\t}\n\treturn session.user.id\n}\n\nexport async function requireUserId(\n\trequest: Request,\n\t{ redirectTo }: { redirectTo?: string | null } = {},\n) {\n\tconst userId = await getUserId(request)\n\tif (!userId) {\n\t\tconst requestUrl = new URL(request.url)\n\t\tredirectTo =\n\t\t\tredirectTo === null\n\t\t\t\t? null\n\t\t\t\t: redirectTo ?? `${requestUrl.pathname}${requestUrl.search}`\n\t\tconst loginParams = redirectTo ? new URLSearchParams({ redirectTo }) : null\n\t\tconst loginRedirect = ['/login', loginParams?.toString()]\n\t\t\t.filter(Boolean)\n\t\t\t.join('?')\n\t\tthrow redirect(loginRedirect)\n\t}\n\treturn userId\n}\n\nexport async function requireAnonymous(request: Request) {\n\tconst userId = await getUserId(request)\n\tif (userId) {\n\t\tthrow redirect('/')\n\t}\n}\n\nexport async function login({\n\tusername,\n\tpassword,\n}: {\n\tusername: User['username']\n\tpassword: string\n}) {\n\tconst user = await verifyUserPassword({ username }, password)\n\tif (!user) return null\n\tconst session = await prisma.session.create({\n\t\tselect: { id: true, expirationDate: true, userId: true },\n\t\tdata: {\n\t\t\texpirationDate: getSessionExpirationDate(),\n\t\t\tuserId: user.id,\n\t\t},\n\t})\n\treturn session\n}\n\nexport async function resetUserPassword({\n\tusername,\n\tpassword,\n}: {\n\tusername: User['username']\n\tpassword: string\n}) {\n\tconst hashedPassword = await getPasswordHash(password)\n\treturn prisma.user.update({\n\t\twhere: { username },\n\t\tdata: {\n\t\t\tpassword: {\n\t\t\t\tupdate: {\n\t\t\t\t\thash: hashedPassword,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n}\n\nexport async function signup({\n\temail,\n\tusername,\n\tpassword,\n\tname,\n}: {\n\temail: User['email']\n\tusername: User['username']\n\tname: User['name']\n\tpassword: string\n}) {\n\tconst hashedPassword = await getPasswordHash(password)\n\n\tconst session = await prisma.session.create({\n\t\tdata: {\n\t\t\texpirationDate: getSessionExpirationDate(),\n\t\t\tuser: {\n\t\t\t\tcreate: {\n\t\t\t\t\temail: email.toLowerCase(),\n\t\t\t\t\tusername: username.toLowerCase(),\n\t\t\t\t\tname,\n\t\t\t\t\troles: { connect: { name: 'user' } },\n\t\t\t\t\tpassword: {\n\t\t\t\t\t\tcreate: {\n\t\t\t\t\t\t\thash: hashedPassword,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tselect: { id: true, expirationDate: true },\n\t})\n\n\treturn session\n}\n\nexport async function signupWithConnection({\n\temail,\n\tusername,\n\tname,\n\tproviderId,\n\tproviderName,\n\timageUrl,\n}: {\n\temail: User['email']\n\tusername: User['username']\n\tname: User['name']\n\tproviderId: Connection['providerId']\n\tproviderName: Connection['providerName']\n\timageUrl?: string\n}) {\n\tconst session = await prisma.session.create({\n\t\tdata: {\n\t\t\texpirationDate: getSessionExpirationDate(),\n\t\t\tuser: {\n\t\t\t\tcreate: {\n\t\t\t\t\temail: email.toLowerCase(),\n\t\t\t\t\tusername: username.toLowerCase(),\n\t\t\t\t\tname,\n\t\t\t\t\troles: { connect: { name: 'user' } },\n\t\t\t\t\tconnections: { create: { providerId, providerName } },\n\t\t\t\t\timage: imageUrl\n\t\t\t\t\t\t? { create: await downloadFile(imageUrl) }\n\t\t\t\t\t\t: undefined,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tselect: { id: true, expirationDate: true },\n\t})\n\n\treturn session\n}\n\nexport async function logout(\n\t{\n\t\trequest,\n\t\tredirectTo = '/',\n\t}: {\n\t\trequest: Request\n\t\tredirectTo?: string\n\t},\n\tresponseInit?: ResponseInit,\n) {\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst sessionId = authSession.get(sessionKey)\n\t// if this fails, we still need to delete the session from the user's browser\n\t// and it doesn't do any harm staying in the db anyway.\n\tif (sessionId) {\n\t\t// the .catch is important because that's what triggers the query.\n\t\t// learn more about PrismaPromise: https://www.prisma.io/docs/orm/reference/prisma-client-reference#prismapromise-behavior\n\t\tvoid prisma.session.deleteMany({ where: { id: sessionId } }).catch(() => {})\n\t}\n\tthrow redirect(safeRedirect(redirectTo), {\n\t\t...responseInit,\n\t\theaders: combineHeaders(\n\t\t\t{ 'set-cookie': await authSessionStorage.destroySession(authSession) },\n\t\t\tresponseInit?.headers,\n\t\t),\n\t})\n}\n\nexport async function getPasswordHash(password: string) {\n\tconst hash = await bcrypt.hash(password, 10)\n\treturn hash\n}\n\nexport async function verifyUserPassword(\n\twhere: Pick<User, 'username'> | Pick<User, 'id'>,\n\tpassword: Password['hash'],\n) {\n\tconst userWithPassword = await prisma.user.findUnique({\n\t\twhere,\n\t\tselect: { id: true, password: { select: { hash: true } } },\n\t})\n\n\tif (!userWithPassword || !userWithPassword.password) {\n\t\treturn null\n\t}\n\n\tconst isValid = await bcrypt.compare(password, userWithPassword.password.hash)\n\n\tif (!isValid) {\n\t\treturn null\n\t}\n\n\treturn { id: userWithPassword.id }\n}\n","import { Honeypot, SpamError } from 'remix-utils/honeypot/server'\n\nexport const honeypot = new Honeypot({\n\tvalidFromFieldName: process.env.NODE_ENV === 'test' ? null : undefined,\n\tencryptionSeed: process.env.HONEYPOT_SECRET,\n})\n\nexport function checkHoneypot(formData: FormData) {\n\ttry {\n\t\thoneypot.check(formData)\n\t} catch (error) {\n\t\tif (error instanceof SpamError) {\n\t\t\tthrow new Response('Form not submitted properly', { status: 400 })\n\t\t}\n\t\tthrow error\n\t}\n}\n","import { createId as cuid } from '@paralleldrive/cuid2'\nimport { createCookieSessionStorage, redirect } from '@remix-run/node'\nimport { z } from 'zod'\nimport { combineHeaders } from './misc.tsx'\n\nexport const toastKey = 'toast'\n\nconst ToastSchema = z.object({\n\tdescription: z.string(),\n\tid: z.string().default(() => cuid()),\n\ttitle: z.string().optional(),\n\ttype: z.enum(['message', 'success', 'error']).default('message'),\n})\n\nexport type Toast = z.infer<typeof ToastSchema>\nexport type ToastInput = z.input<typeof ToastSchema>\n\nexport const toastSessionStorage = createCookieSessionStorage({\n\tcookie: {\n\t\tname: 'en_toast',\n\t\tsameSite: 'lax',\n\t\tpath: '/',\n\t\thttpOnly: true,\n\t\tsecrets: process.env.SESSION_SECRET.split(','),\n\t\tsecure: process.env.NODE_ENV === 'production',\n\t},\n})\n\nexport async function redirectWithToast(\n\turl: string,\n\ttoast: ToastInput,\n\tinit?: ResponseInit,\n) {\n\treturn redirect(url, {\n\t\t...init,\n\t\theaders: combineHeaders(init?.headers, await createToastHeaders(toast)),\n\t})\n}\n\nexport async function createToastHeaders(toastInput: ToastInput) {\n\tconst session = await toastSessionStorage.getSession()\n\tconst toast = ToastSchema.parse(toastInput)\n\tsession.flash(toastKey, toast)\n\tconst cookie = await toastSessionStorage.commitSession(session)\n\treturn new Headers({ 'set-cookie': cookie })\n}\n\nexport async function getToast(request: Request) {\n\tconst session = await toastSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst result = ToastSchema.safeParse(session.get(toastKey))\n\tconst toast = result.success ? result.data : null\n\treturn {\n\t\ttoast,\n\t\theaders: toast\n\t\t\t? new Headers({\n\t\t\t\t\t'set-cookie': await toastSessionStorage.destroySession(session),\n\t\t\t\t})\n\t\t\t: null,\n\t}\n}\n","import { type SerializeFrom } from '@remix-run/node'\nimport { useRouteLoaderData } from '@remix-run/react'\nimport { type loader as rootLoader } from '#app/root.tsx'\n\nfunction isUser(user: any): user is SerializeFrom<typeof rootLoader>['user'] {\n\treturn user && typeof user === 'object' && typeof user.id === 'string'\n}\n\nexport function useOptionalUser() {\n\tconst data = useRouteLoaderData<typeof rootLoader>('root')\n\tif (!data || !isUser(data.user)) {\n\t\treturn undefined\n\t}\n\treturn data.user\n}\n\nexport function useUser() {\n\tconst maybeUser = useOptionalUser()\n\tif (!maybeUser) {\n\t\tthrow new Error(\n\t\t\t'No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.',\n\t\t)\n\t}\n\treturn maybeUser\n}\n\ntype Action = 'create' | 'read' | 'update' | 'delete'\ntype Entity = 'user' | 'note'\ntype Access = 'own' | 'any' | 'own,any' | 'any,own'\nexport type PermissionString =\n\t| `${Action}:${Entity}`\n\t| `${Action}:${Entity}:${Access}`\n\nexport function parsePermissionString(permissionString: PermissionString) {\n\tconst [action, entity, access] = permissionString.split(':') as [\n\t\tAction,\n\t\tEntity,\n\t\tAccess | undefined,\n\t]\n\treturn {\n\t\taction,\n\t\tentity,\n\t\taccess: access ? (access.split(',') as Array<Access>) : undefined,\n\t}\n}\n\nexport function userHasPermission(\n\tuser: Pick<ReturnType<typeof useUser>, 'roles'> | null | undefined,\n\tpermission: PermissionString,\n) {\n\tif (!user) return false\n\tconst { action, entity, access } = parsePermissionString(permission)\n\treturn user.roles.some(role =>\n\t\trole.permissions.some(\n\t\t\tpermission =>\n\t\t\t\tpermission.entity === entity &&\n\t\t\t\tpermission.action === action &&\n\t\t\t\t(!access || access.includes(permission.access)),\n\t\t),\n\t)\n}\n\nexport function userHasRole(\n\tuser: Pick<ReturnType<typeof useUser>, 'roles'> | null,\n\trole: string,\n) {\n\tif (!user) return false\n\treturn user.roles.some(r => r.name === role)\n}\n","import {\n\tjson,\n\ttype LoaderFunctionArgs,\n\ttype HeadersFunction,\n\ttype LinksFunction,\n\ttype MetaFunction,\n} from '@remix-run/node'\nimport {\n\tForm,\n\tLink,\n\tLinks,\n\tMeta,\n\tOutlet,\n\tScripts,\n\tScrollRestoration,\n\tuseLoaderData,\n\tuseMatches,\n\tuseSubmit,\n} from '@remix-run/react'\nimport { withSentry } from '@sentry/remix'\nimport { useRef } from 'react'\nimport { HoneypotProvider } from 'remix-utils/honeypot/react'\nimport { GeneralErrorBoundary } from './components/error-boundary.tsx'\nimport { EpicProgress } from './components/progress-bar.tsx'\nimport { SearchBar } from './components/search-bar.tsx'\nimport { useToast } from './components/toaster.tsx'\nimport { Button } from './components/ui/button.tsx'\nimport {\n\tDropdownMenu,\n\tDropdownMenuContent,\n\tDropdownMenuItem,\n\tDropdownMenuPortal,\n\tDropdownMenuTrigger,\n} from './components/ui/dropdown-menu.tsx'\nimport { Icon, href as iconsHref } from './components/ui/icon.tsx'\nimport { EpicToaster } from './components/ui/sonner.tsx'\nimport { ThemeSwitch, useTheme } from './routes/resources+/theme-switch.tsx'\nimport tailwindStyleSheetUrl from './styles/tailwind.css?url'\nimport { getUserId, logout } from './utils/auth.server.ts'\nimport { ClientHintCheck, getHints } from './utils/client-hints.tsx'\nimport { prisma } from './utils/db.server.ts'\nimport { getEnv } from './utils/env.server.ts'\nimport { honeypot } from './utils/honeypot.server.ts'\nimport { combineHeaders, getDomainUrl, getUserImgSrc } from './utils/misc.tsx'\nimport { useNonce } from './utils/nonce-provider.ts'\nimport { type Theme, getTheme } from './utils/theme.server.ts'\nimport { makeTimings, time } from './utils/timing.server.ts'\nimport { getToast } from './utils/toast.server.ts'\nimport { useOptionalUser, useUser } from './utils/user.ts'\n\nexport const links: LinksFunction = () => {\n\treturn [\n\t\t// Preload svg sprite as a resource to avoid render blocking\n\t\t{ rel: 'preload', href: iconsHref, as: 'image' },\n\t\t// Preload CSS as a resource to avoid render blocking\n\t\t{ rel: 'mask-icon', href: '/favicons/mask-icon.svg' },\n\t\t{\n\t\t\trel: 'alternate icon',\n\t\t\ttype: 'image/png',\n\t\t\thref: '/favicons/favicon-32x32.png',\n\t\t},\n\t\t{ rel: 'apple-touch-icon', href: '/favicons/apple-touch-icon.png' },\n\t\t{\n\t\t\trel: 'manifest',\n\t\t\thref: '/site.webmanifest',\n\t\t\tcrossOrigin: 'use-credentials',\n\t\t} as const, // necessary to make typescript happy\n\t\t//These should match the css preloads above to avoid css as render blocking resource\n\t\t{ rel: 'icon', type: 'image/svg+xml', href: '/favicons/favicon.svg' },\n\t\t{ rel: 'stylesheet', href: tailwindStyleSheetUrl },\n\t].filter(Boolean)\n}\n\nexport const meta: MetaFunction<typeof loader> = ({ data }) => {\n\treturn [\n\t\t{ title: data ? 'Epic Notes' : 'Error | Epic Notes' },\n\t\t{ name: 'description', content: `Your own captain's log` },\n\t]\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst timings = makeTimings('root loader')\n\tconst userId = await time(() => getUserId(request), {\n\t\ttimings,\n\t\ttype: 'getUserId',\n\t\tdesc: 'getUserId in root',\n\t})\n\n\tconst user = userId\n\t\t? await time(\n\t\t\t\t() =>\n\t\t\t\t\tprisma.user.findUniqueOrThrow({\n\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\tid: true,\n\t\t\t\t\t\t\tname: true,\n\t\t\t\t\t\t\tusername: true,\n\t\t\t\t\t\t\timage: { select: { id: true } },\n\t\t\t\t\t\t\troles: {\n\t\t\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\t\t\tname: true,\n\t\t\t\t\t\t\t\t\tpermissions: {\n\t\t\t\t\t\t\t\t\t\tselect: { entity: true, action: true, access: true },\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\twhere: { id: userId },\n\t\t\t\t\t}),\n\t\t\t\t{ timings, type: 'find user', desc: 'find user in root' },\n\t\t\t)\n\t\t: null\n\tif (userId && !user) {\n\t\tconsole.info('something weird happened')\n\t\t// something weird happened... The user is authenticated but we can't find\n\t\t// them in the database. Maybe they were deleted? Let's log them out.\n\t\tawait logout({ request, redirectTo: '/' })\n\t}\n\tconst { toast, headers: toastHeaders } = await getToast(request)\n\tconst honeyProps = honeypot.getInputProps()\n\n\treturn json(\n\t\t{\n\t\t\tuser,\n\t\t\trequestInfo: {\n\t\t\t\thints: getHints(request),\n\t\t\t\torigin: getDomainUrl(request),\n\t\t\t\tpath: new URL(request.url).pathname,\n\t\t\t\tuserPrefs: {\n\t\t\t\t\ttheme: getTheme(request),\n\t\t\t\t},\n\t\t\t},\n\t\t\tENV: getEnv(),\n\t\t\ttoast,\n\t\t\thoneyProps,\n\t\t},\n\t\t{\n\t\t\theaders: combineHeaders(\n\t\t\t\t{ 'Server-Timing': timings.toString() },\n\t\t\t\ttoastHeaders,\n\t\t\t),\n\t\t},\n\t)\n}\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n\tconst headers = {\n\t\t'Server-Timing': loaderHeaders.get('Server-Timing') ?? '',\n\t}\n\treturn headers\n}\n\nfunction Document({\n\tchildren,\n\tnonce,\n\ttheme = 'light',\n\tenv = {},\n\tallowIndexing = true,\n}: {\n\tchildren: React.ReactNode\n\tnonce: string\n\ttheme?: Theme\n\tenv?: Record<string, string>\n\tallowIndexing?: boolean\n}) {\n\treturn (\n\t\t<html lang=\"en\" className={`${theme} h-full overflow-x-hidden`}>\n\t\t\t<head>\n\t\t\t\t<ClientHintCheck nonce={nonce} />\n\t\t\t\t<Meta />\n\t\t\t\t<meta charSet=\"utf-8\" />\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n\t\t\t\t{allowIndexing ? null : (\n\t\t\t\t\t<meta name=\"robots\" content=\"noindex, nofollow\" />\n\t\t\t\t)}\n\t\t\t\t<Links />\n\t\t\t</head>\n\t\t\t<body className=\"bg-background text-foreground\">\n\t\t\t\t{children}\n\t\t\t\t<script\n\t\t\t\t\tnonce={nonce}\n\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t__html: `window.ENV = ${JSON.stringify(env)}`,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<ScrollRestoration nonce={nonce} />\n\t\t\t\t<Scripts nonce={nonce} />\n\t\t\t</body>\n\t\t</html>\n\t)\n}\n\nfunction App() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst nonce = useNonce()\n\tconst user = useOptionalUser()\n\tconst theme = useTheme()\n\tconst matches = useMatches()\n\tconst isOnSearchPage = matches.find(m => m.id === 'routes/users+/index')\n\tconst searchBar = isOnSearchPage ? null : <SearchBar status=\"idle\" />\n\tconst allowIndexing = data.ENV.ALLOW_INDEXING !== 'false'\n\tuseToast(data.toast)\n\n\treturn (\n\t\t<Document\n\t\t\tnonce={nonce}\n\t\t\ttheme={theme}\n\t\t\tallowIndexing={allowIndexing}\n\t\t\tenv={data.ENV}\n\t\t>\n\t\t\t<div className=\"flex h-screen flex-col justify-between\">\n\t\t\t\t<header className=\"container py-6\">\n\t\t\t\t\t<nav className=\"flex flex-wrap items-center justify-between gap-4 sm:flex-nowrap md:gap-8\">\n\t\t\t\t\t\t<Logo />\n\t\t\t\t\t\t<div className=\"ml-auto hidden max-w-sm flex-1 sm:block\">\n\t\t\t\t\t\t\t{searchBar}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"flex items-center gap-10\">\n\t\t\t\t\t\t\t{user ? (\n\t\t\t\t\t\t\t\t<UserDropdown />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Button asChild variant=\"default\" size=\"lg\">\n\t\t\t\t\t\t\t\t\t<Link to=\"/login\">Log In</Link>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"block w-full sm:hidden\">{searchBar}</div>\n\t\t\t\t\t</nav>\n\t\t\t\t</header>\n\n\t\t\t\t<div className=\"flex-1\">\n\t\t\t\t\t<Outlet />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"container flex justify-between pb-5\">\n\t\t\t\t\t<Logo />\n\t\t\t\t\t<ThemeSwitch userPreference={data.requestInfo.userPrefs.theme} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<EpicToaster closeButton position=\"top-center\" theme={theme} />\n\t\t\t<EpicProgress />\n\t\t</Document>\n\t)\n}\n\nfunction Logo() {\n\treturn (\n\t\t<Link to=\"/\" className=\"group grid leading-snug\">\n\t\t\t<span className=\"font-light transition group-hover:-translate-x-1\">\n\t\t\t\tepic\n\t\t\t</span>\n\t\t\t<span className=\"font-bold transition group-hover:translate-x-1\">\n\t\t\t\tnotes\n\t\t\t</span>\n\t\t</Link>\n\t)\n}\n\nfunction AppWithProviders() {\n\tconst data = useLoaderData<typeof loader>()\n\treturn (\n\t\t<HoneypotProvider {...data.honeyProps}>\n\t\t\t<App />\n\t\t</HoneypotProvider>\n\t)\n}\n\nexport default withSentry(AppWithProviders)\n\nfunction UserDropdown() {\n\tconst user = useUser()\n\tconst submit = useSubmit()\n\tconst formRef = useRef<HTMLFormElement>(null)\n\treturn (\n\t\t<DropdownMenu>\n\t\t\t<DropdownMenuTrigger asChild>\n\t\t\t\t<Button asChild variant=\"secondary\">\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={`/users/${user.username}`}\n\t\t\t\t\t\t// this is for progressive enhancement\n\t\t\t\t\t\tonClick={e => e.preventDefault()}\n\t\t\t\t\t\tclassName=\"flex items-center gap-2\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName=\"h-8 w-8 rounded-full object-cover\"\n\t\t\t\t\t\t\talt={user.name ?? user.username}\n\t\t\t\t\t\t\tsrc={getUserImgSrc(user.image?.id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className=\"text-body-sm font-bold\">\n\t\t\t\t\t\t\t{user.name ?? user.username}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Link>\n\t\t\t\t</Button>\n\t\t\t</DropdownMenuTrigger>\n\t\t\t<DropdownMenuPortal>\n\t\t\t\t<DropdownMenuContent sideOffset={8} align=\"start\">\n\t\t\t\t\t<DropdownMenuItem asChild>\n\t\t\t\t\t\t<Link prefetch=\"intent\" to={`/users/${user.username}`}>\n\t\t\t\t\t\t\t<Icon className=\"text-body-md\" name=\"avatar\">\n\t\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t<DropdownMenuItem asChild>\n\t\t\t\t\t\t<Link prefetch=\"intent\" to={`/users/${user.username}/notes`}>\n\t\t\t\t\t\t\t<Icon className=\"text-body-md\" name=\"pencil-2\">\n\t\t\t\t\t\t\t\tNotes\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t<DropdownMenuItem\n\t\t\t\t\t\tasChild\n\t\t\t\t\t\t// this prevents the menu from closing before the form submission is completed\n\t\t\t\t\t\tonSelect={event => {\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\tsubmit(formRef.current)\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Form action=\"/logout\" method=\"POST\" ref={formRef}>\n\t\t\t\t\t\t\t<Icon className=\"text-body-md\" name=\"exit\">\n\t\t\t\t\t\t\t\t<button type=\"submit\">Logout</button>\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t</DropdownMenuContent>\n\t\t\t</DropdownMenuPortal>\n\t\t</DropdownMenu>\n\t)\n}\n\nexport function ErrorBoundary() {\n\t// the nonce doesn't rely on the loader so we can access that\n\tconst nonce = useNonce()\n\n\t// NOTE: you cannot use useLoaderData in an ErrorBoundary because the loader\n\t// likely failed to run so we have to do the best we can.\n\t// We could probably do better than this (it's possible the loader did run).\n\t// This would require a change in Remix.\n\n\t// Just make sure your root route never errors out and you'll always be able\n\t// to give the user a better UX.\n\n\treturn (\n\t\t<Document nonce={nonce}>\n\t\t\t<GeneralErrorBoundary />\n\t\t</Document>\n\t)\n}\n","// This is called a \"splat route\" and as it's in the root `/app/routes/`\n// directory, it's a catchall. If no other routes match, this one will and we\n// can know that the user is hitting a URL that doesn't exist. By throwing a\n// 404 from the loader, we can force the error boundary to render which will\n// ensure the user gets the right status code and we can display a nicer error\n// message for them than the Remix and/or browser default.\n\nimport { Link, useLocation } from '@remix-run/react'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\n\nexport async function loader() {\n\tthrow new Response('Not found', { status: 404 })\n}\n\nexport default function NotFound() {\n\t// due to the loader, this component will never be rendered, but we'll return\n\t// the error boundary just in case.\n\treturn <ErrorBoundary />\n}\n\nexport function ErrorBoundary() {\n\tconst location = useLocation()\n\treturn (\n\t\t<GeneralErrorBoundary\n\t\t\tstatusHandlers={{\n\t\t\t\t404: () => (\n\t\t\t\t\t<div className=\"flex flex-col gap-6\">\n\t\t\t\t\t\t<div className=\"flex flex-col gap-3\">\n\t\t\t\t\t\t\t<h1>We can't find this page:</h1>\n\t\t\t\t\t\t\t<pre className=\"whitespace-pre-wrap break-all text-body-lg\">\n\t\t\t\t\t\t\t\t{location.pathname}\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Link to=\"/\" className=\"text-body-md underline\">\n\t\t\t\t\t\t\t<Icon name=\"arrow-left\">Back to home</Icon>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import { Form } from '@remix-run/react'\nimport { z } from 'zod'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { useIsPending } from './misc.tsx'\n\nexport const GITHUB_PROVIDER_NAME = 'github'\n// to add another provider, set their name here and add it to the providerNames below\n\nexport const providerNames = [GITHUB_PROVIDER_NAME] as const\nexport const ProviderNameSchema = z.enum(providerNames)\nexport type ProviderName = z.infer<typeof ProviderNameSchema>\n\nexport const providerLabels: Record<ProviderName, string> = {\n\t[GITHUB_PROVIDER_NAME]: 'GitHub',\n} as const\n\nexport const providerIcons: Record<ProviderName, React.ReactNode> = {\n\t[GITHUB_PROVIDER_NAME]: <Icon name=\"github-logo\" />,\n} as const\n\nexport function ProviderConnectionForm({\n\tredirectTo,\n\ttype,\n\tproviderName,\n}: {\n\tredirectTo?: string | null\n\ttype: 'Connect' | 'Login' | 'Signup'\n\tproviderName: ProviderName\n}) {\n\tconst label = providerLabels[providerName]\n\tconst formAction = `/auth/${providerName}`\n\tconst isPending = useIsPending({ formAction })\n\treturn (\n\t\t<Form\n\t\t\tclassName=\"flex items-center justify-center gap-2\"\n\t\t\taction={formAction}\n\t\t\tmethod=\"POST\"\n\t\t>\n\t\t\t{redirectTo ? (\n\t\t\t\t<input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n\t\t\t) : null}\n\t\t\t<StatusButton\n\t\t\t\ttype=\"submit\"\n\t\t\t\tclassName=\"w-full\"\n\t\t\t\tstatus={isPending ? 'pending' : 'idle'}\n\t\t\t>\n\t\t\t\t<span className=\"inline-flex items-center gap-1.5\">\n\t\t\t\t\t{providerIcons[providerName]}\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{type} with {label}\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</StatusButton>\n\t\t</Form>\n\t)\n}\n","import * as cookie from 'cookie'\n\nconst key = 'redirectTo'\nexport const destroyRedirectToHeader = cookie.serialize(key, '', { maxAge: -1 })\n\nexport function getRedirectCookieHeader(redirectTo?: string) {\n\treturn redirectTo && redirectTo !== '/'\n\t\t? cookie.serialize(key, redirectTo, { maxAge: 60 * 10 })\n\t\t: null\n}\n\nexport function getRedirectCookieValue(request: Request) {\n\tconst rawCookie = request.headers.get('cookie')\n\tconst parsedCookies = rawCookie ? cookie.parse(rawCookie) : {}\n\tconst redirectTo = parsedCookies[key]\n\treturn redirectTo || null\n}\n","import { redirect, type ActionFunctionArgs } from '@remix-run/node'\nimport { authenticator } from '#app/utils/auth.server.ts'\nimport { handleMockAction } from '#app/utils/connections.server.ts'\nimport { ProviderNameSchema } from '#app/utils/connections.tsx'\nimport { getReferrerRoute } from '#app/utils/misc.tsx'\nimport { getRedirectCookieHeader } from '#app/utils/redirect-cookie.server.ts'\n\nexport async function loader() {\n\treturn redirect('/login')\n}\n\nexport async function action({ request, params }: ActionFunctionArgs) {\n\tconst providerName = ProviderNameSchema.parse(params.provider)\n\n\ttry {\n\t\tawait handleMockAction(providerName, request)\n\t\treturn await authenticator.authenticate(providerName, request)\n\t} catch (error: unknown) {\n\t\tif (error instanceof Response) {\n\t\t\tconst formData = await request.formData()\n\t\t\tconst rawRedirectTo = formData.get('redirectTo')\n\t\t\tconst redirectTo =\n\t\t\t\ttypeof rawRedirectTo === 'string'\n\t\t\t\t\t? rawRedirectTo\n\t\t\t\t\t: getReferrerRoute(request)\n\t\t\tconst redirectToCookie = getRedirectCookieHeader(redirectTo)\n\t\t\tif (redirectToCookie) {\n\t\t\t\terror.headers.append('set-cookie', redirectToCookie)\n\t\t\t}\n\t\t}\n\t\tthrow error\n\t}\n}\n","import { type Strategy } from 'remix-auth'\nimport { type Timings } from '../timing.server.ts'\n\n// Define a user type for cleaner typing\nexport type ProviderUser = {\n\tid: string\n\temail: string\n\tusername?: string\n\tname?: string\n\timageUrl?: string\n}\n\nexport interface AuthProvider {\n\tgetAuthStrategy(): Strategy<ProviderUser, any>\n\thandleMockAction(request: Request): Promise<void>\n\tresolveConnectionData(\n\t\tproviderId: string,\n\t\toptions?: { timings?: Timings },\n\t): Promise<{\n\t\tdisplayName: string\n\t\tlink?: string | null\n\t}>\n}\n\nexport const normalizeEmail = (s: string) => s.toLowerCase()\n\nexport const normalizeUsername = (s: string) =>\n\ts.replace(/[^a-zA-Z0-9_]/g, '_').toLowerCase()\n","import { createCookieSessionStorage } from '@remix-run/node'\n\nexport const verifySessionStorage = createCookieSessionStorage({\n\tcookie: {\n\t\tname: 'en_verification',\n\t\tsameSite: 'lax', // CSRF protection is advised if changing to 'none'\n\t\tpath: '/',\n\t\thttpOnly: true,\n\t\tmaxAge: 60 * 10, // 10 minutes\n\t\tsecrets: process.env.SESSION_SECRET.split(','),\n\t\tsecure: process.env.NODE_ENV === 'production',\n\t},\n})\n","import { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { Outlet } from '@remix-run/react'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { type VerificationTypes } from '#app/routes/_auth+/verify.tsx'\nimport { type BreadcrumbHandle } from './profile.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"lock-closed\">2FA</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nexport const twoFAVerificationType = '2fa' satisfies VerificationTypes\n\nexport default function TwoFactorRoute() {\n\treturn <Outlet />\n}\n","import { renderAsync } from '@react-email/components'\nimport { type ReactElement } from 'react'\nimport { z } from 'zod'\n\nconst resendErrorSchema = z.union([\n\tz.object({\n\t\tname: z.string(),\n\t\tmessage: z.string(),\n\t\tstatusCode: z.number(),\n\t}),\n\tz.object({\n\t\tname: z.literal('UnknownError'),\n\t\tmessage: z.literal('Unknown Error'),\n\t\tstatusCode: z.literal(500),\n\t\tcause: z.any(),\n\t}),\n])\ntype ResendError = z.infer<typeof resendErrorSchema>\n\nconst resendSuccessSchema = z.object({\n\tid: z.string(),\n})\n\nexport async function sendEmail({\n\treact,\n\t...options\n}: {\n\tto: string\n\tsubject: string\n} & (\n\t| { html: string; text: string; react?: never }\n\t| { react: ReactElement; html?: never; text?: never }\n)) {\n\tconst from = 'hello@epicstack.dev'\n\n\tconst email = {\n\t\tfrom,\n\t\t...options,\n\t\t...(react ? await renderReactEmail(react) : null),\n\t}\n\n\t// feel free to remove this condition once you've set up resend\n\tif (!process.env.RESEND_API_KEY && !process.env.MOCKS) {\n\t\tconsole.error(`RESEND_API_KEY not set and we're not in mocks mode.`)\n\t\tconsole.error(\n\t\t\t`To send emails, set the RESEND_API_KEY environment variable.`,\n\t\t)\n\t\tconsole.error(`Would have sent the following email:`, JSON.stringify(email))\n\t\treturn {\n\t\t\tstatus: 'success',\n\t\t\tdata: { id: 'mocked' },\n\t\t} as const\n\t}\n\n\tconst response = await fetch('https://api.resend.com/emails', {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(email),\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${process.env.RESEND_API_KEY}`,\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t})\n\tconst data = await response.json()\n\tconst parsedData = resendSuccessSchema.safeParse(data)\n\n\tif (response.ok && parsedData.success) {\n\t\treturn {\n\t\t\tstatus: 'success',\n\t\t\tdata: parsedData,\n\t\t} as const\n\t} else {\n\t\tconst parseResult = resendErrorSchema.safeParse(data)\n\t\tif (parseResult.success) {\n\t\t\treturn {\n\t\t\t\tstatus: 'error',\n\t\t\t\terror: parseResult.data,\n\t\t\t} as const\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tstatus: 'error',\n\t\t\t\terror: {\n\t\t\t\t\tname: 'UnknownError',\n\t\t\t\t\tmessage: 'Unknown Error',\n\t\t\t\t\tstatusCode: 500,\n\t\t\t\t\tcause: data,\n\t\t\t\t} satisfies ResendError,\n\t\t\t} as const\n\t\t}\n\t}\n}\n\nasync function renderReactEmail(react: ReactElement) {\n\tconst [html, text] = await Promise.all([\n\t\trenderAsync(react),\n\t\trenderAsync(react, { plainText: true }),\n\t])\n\treturn { html, text }\n}\n","import * as CheckboxPrimitive from '@radix-ui/react-checkbox'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nexport type CheckboxProps = Omit<\n\tReact.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>,\n\t'type'\n> & {\n\ttype?: string\n}\n\nconst Checkbox = React.forwardRef<\n\tReact.ElementRef<typeof CheckboxPrimitive.Root>,\n\tReact.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n\t<CheckboxPrimitive.Root\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t>\n\t\t<CheckboxPrimitive.Indicator\n\t\t\tclassName={cn('flex items-center justify-center text-current')}\n\t\t>\n\t\t\t<svg viewBox=\"0 0 8 8\">\n\t\t\t\t<path\n\t\t\t\t\td=\"M1,4 L3,6 L7,2\"\n\t\t\t\t\tstroke=\"currentcolor\"\n\t\t\t\t\tstrokeWidth=\"1\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t</CheckboxPrimitive.Indicator>\n\t</CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import { OTPInput, OTPInputContext } from 'input-otp'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nconst InputOTP = React.forwardRef<\n\tReact.ElementRef<typeof OTPInput>,\n\tReact.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n\t<OTPInput\n\t\tref={ref}\n\t\tcontainerClassName={cn(\n\t\t\t'flex items-center gap-2 has-[:disabled]:opacity-50',\n\t\t\tcontainerClassName,\n\t\t)}\n\t\tclassName={cn('disabled:cursor-not-allowed', className)}\n\t\t{...props}\n\t/>\n))\nInputOTP.displayName = 'InputOTP'\n\nconst InputOTPGroup = React.forwardRef<\n\tReact.ElementRef<'div'>,\n\tReact.ComponentPropsWithoutRef<'div'>\n>(({ className, ...props }, ref) => (\n\t<div ref={ref} className={cn('flex items-center', className)} {...props} />\n))\nInputOTPGroup.displayName = 'InputOTPGroup'\n\nconst InputOTPSlot = React.forwardRef<\n\tReact.ElementRef<'div'>,\n\tReact.ComponentPropsWithoutRef<'div'> & { index: number }\n>(({ index, className, ...props }, ref) => {\n\tconst inputOTPContext = React.useContext(OTPInputContext)\n\tconst slot = inputOTPContext.slots[index]\n\tif (!slot) throw new Error('Invalid slot index')\n\tconst { char, hasFakeCaret, isActive } = slot\n\n\treturn (\n\t\t<div\n\t\t\tref={ref}\n\t\t\tclassName={cn(\n\t\t\t\t'relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md',\n\t\t\t\tisActive && 'z-10 ring-2 ring-ring ring-offset-background',\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t>\n\t\t\t{char}\n\t\t\t{hasFakeCaret && (\n\t\t\t\t<div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n\t\t\t\t\t<div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n})\nInputOTPSlot.displayName = 'InputOTPSlot'\n\nconst InputOTPSeparator = React.forwardRef<\n\tReact.ElementRef<'div'>,\n\tReact.ComponentPropsWithoutRef<'div'>\n>(({ ...props }, ref) => (\n\t<div ref={ref} role=\"separator\" {...props}>\n\t\t-\n\t</div>\n))\nInputOTPSeparator.displayName = 'InputOTPSeparator'\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","import * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nexport interface TextareaProps\n\textends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n\t({ className, ...props }, ref) => {\n\t\treturn (\n\t\t\t<textarea\n\t\t\t\tclassName={cn(\n\t\t\t\t\t'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 aria-[invalid]:border-input-invalid',\n\t\t\t\t\tclassName,\n\t\t\t\t)}\n\t\t\t\tref={ref}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t)\n\t},\n)\nTextarea.displayName = 'Textarea'\n\nexport { Textarea }\n","import { useInputControl } from '@conform-to/react'\nimport { REGEXP_ONLY_DIGITS_AND_CHARS, type OTPInputProps } from 'input-otp'\nimport React, { useId } from 'react'\nimport { Checkbox, type CheckboxProps } from './ui/checkbox.tsx'\nimport {\n\tInputOTP,\n\tInputOTPGroup,\n\tInputOTPSeparator,\n\tInputOTPSlot,\n} from './ui/input-otp.tsx'\nimport { Input } from './ui/input.tsx'\nimport { Label } from './ui/label.tsx'\nimport { Textarea } from './ui/textarea.tsx'\n\nexport type ListOfErrors = Array<string | null | undefined> | null | undefined\n\nexport function ErrorList({\n\tid,\n\terrors,\n}: {\n\terrors?: ListOfErrors\n\tid?: string\n}) {\n\tconst errorsToRender = errors?.filter(Boolean)\n\tif (!errorsToRender?.length) return null\n\treturn (\n\t\t<ul id={id} className=\"flex flex-col gap-1\">\n\t\t\t{errorsToRender.map(e => (\n\t\t\t\t<li key={e} className=\"text-[10px] text-foreground-destructive\">\n\t\t\t\t\t{e}\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t)\n}\n\nexport function Field({\n\tlabelProps,\n\tinputProps,\n\terrors,\n\tclassName,\n}: {\n\tlabelProps: React.LabelHTMLAttributes<HTMLLabelElement>\n\tinputProps: React.InputHTMLAttributes<HTMLInputElement>\n\terrors?: ListOfErrors\n\tclassName?: string\n}) {\n\tconst fallbackId = useId()\n\tconst id = inputProps.id ?? fallbackId\n\tconst errorId = errors?.length ? `${id}-error` : undefined\n\treturn (\n\t\t<div className={className}>\n\t\t\t<Label htmlFor={id} {...labelProps} />\n\t\t\t<Input\n\t\t\t\tid={id}\n\t\t\t\taria-invalid={errorId ? true : undefined}\n\t\t\t\taria-describedby={errorId}\n\t\t\t\t{...inputProps}\n\t\t\t/>\n\t\t\t<div className=\"min-h-[32px] px-4 pb-3 pt-1\">\n\t\t\t\t{errorId ? <ErrorList id={errorId} errors={errors} /> : null}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function OTPField({\n\tlabelProps,\n\tinputProps,\n\terrors,\n\tclassName,\n}: {\n\tlabelProps: React.LabelHTMLAttributes<HTMLLabelElement>\n\tinputProps: Partial<OTPInputProps & { render: never }>\n\terrors?: ListOfErrors\n\tclassName?: string\n}) {\n\tconst fallbackId = useId()\n\tconst id = inputProps.id ?? fallbackId\n\tconst errorId = errors?.length ? `${id}-error` : undefined\n\treturn (\n\t\t<div className={className}>\n\t\t\t<Label htmlFor={id} {...labelProps} />\n\t\t\t<InputOTP\n\t\t\t\tpattern={REGEXP_ONLY_DIGITS_AND_CHARS}\n\t\t\t\tmaxLength={6}\n\t\t\t\tid={id}\n\t\t\t\taria-invalid={errorId ? true : undefined}\n\t\t\t\taria-describedby={errorId}\n\t\t\t\t{...inputProps}\n\t\t\t>\n\t\t\t\t<InputOTPGroup>\n\t\t\t\t\t<InputOTPSlot index={0} />\n\t\t\t\t\t<InputOTPSlot index={1} />\n\t\t\t\t\t<InputOTPSlot index={2} />\n\t\t\t\t</InputOTPGroup>\n\t\t\t\t<InputOTPSeparator />\n\t\t\t\t<InputOTPGroup>\n\t\t\t\t\t<InputOTPSlot index={3} />\n\t\t\t\t\t<InputOTPSlot index={4} />\n\t\t\t\t\t<InputOTPSlot index={5} />\n\t\t\t\t</InputOTPGroup>\n\t\t\t</InputOTP>\n\t\t\t<div className=\"min-h-[32px] px-4 pb-3 pt-1\">\n\t\t\t\t{errorId ? <ErrorList id={errorId} errors={errors} /> : null}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function TextareaField({\n\tlabelProps,\n\ttextareaProps,\n\terrors,\n\tclassName,\n}: {\n\tlabelProps: React.LabelHTMLAttributes<HTMLLabelElement>\n\ttextareaProps: React.TextareaHTMLAttributes<HTMLTextAreaElement>\n\terrors?: ListOfErrors\n\tclassName?: string\n}) {\n\tconst fallbackId = useId()\n\tconst id = textareaProps.id ?? textareaProps.name ?? fallbackId\n\tconst errorId = errors?.length ? `${id}-error` : undefined\n\treturn (\n\t\t<div className={className}>\n\t\t\t<Label htmlFor={id} {...labelProps} />\n\t\t\t<Textarea\n\t\t\t\tid={id}\n\t\t\t\taria-invalid={errorId ? true : undefined}\n\t\t\t\taria-describedby={errorId}\n\t\t\t\t{...textareaProps}\n\t\t\t/>\n\t\t\t<div className=\"min-h-[32px] px-4 pb-3 pt-1\">\n\t\t\t\t{errorId ? <ErrorList id={errorId} errors={errors} /> : null}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function CheckboxField({\n\tlabelProps,\n\tbuttonProps,\n\terrors,\n\tclassName,\n}: {\n\tlabelProps: JSX.IntrinsicElements['label']\n\tbuttonProps: CheckboxProps & {\n\t\tname: string\n\t\tform: string\n\t\tvalue?: string\n\t}\n\terrors?: ListOfErrors\n\tclassName?: string\n}) {\n\tconst { key, defaultChecked, ...checkboxProps } = buttonProps\n\tconst fallbackId = useId()\n\tconst checkedValue = buttonProps.value ?? 'on'\n\tconst input = useInputControl({\n\t\tkey,\n\t\tname: buttonProps.name,\n\t\tformId: buttonProps.form,\n\t\tinitialValue: defaultChecked ? checkedValue : undefined,\n\t})\n\tconst id = buttonProps.id ?? fallbackId\n\tconst errorId = errors?.length ? `${id}-error` : undefined\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t<div className=\"flex gap-2\">\n\t\t\t\t<Checkbox\n\t\t\t\t\t{...checkboxProps}\n\t\t\t\t\tid={id}\n\t\t\t\t\taria-invalid={errorId ? true : undefined}\n\t\t\t\t\taria-describedby={errorId}\n\t\t\t\t\tchecked={input.value === checkedValue}\n\t\t\t\t\tonCheckedChange={state => {\n\t\t\t\t\t\tinput.change(state.valueOf() ? checkedValue : '')\n\t\t\t\t\t\tbuttonProps.onCheckedChange?.(state)\n\t\t\t\t\t}}\n\t\t\t\t\tonFocus={event => {\n\t\t\t\t\t\tinput.focus()\n\t\t\t\t\t\tbuttonProps.onFocus?.(event)\n\t\t\t\t\t}}\n\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\tinput.blur()\n\t\t\t\t\t\tbuttonProps.onBlur?.(event)\n\t\t\t\t\t}}\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t/>\n\t\t\t\t<label\n\t\t\t\t\thtmlFor={id}\n\t\t\t\t\t{...labelProps}\n\t\t\t\t\tclassName=\"self-center text-body-xs text-muted-foreground\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"px-4 pb-3 pt-1\">\n\t\t\t\t{errorId ? <ErrorList id={errorId} errors={errors} /> : null}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import { z } from 'zod'\n\nexport const USERNAME_MIN_LENGTH = 3\nexport const USERNAME_MAX_LENGTH = 20\n\nexport const UsernameSchema = z\n\t.string({ required_error: 'Username is required' })\n\t.min(USERNAME_MIN_LENGTH, { message: 'Username is too short' })\n\t.max(USERNAME_MAX_LENGTH, { message: 'Username is too long' })\n\t.regex(/^[a-zA-Z0-9_]+$/, {\n\t\tmessage: 'Username can only include letters, numbers, and underscores',\n\t})\n\t// users can type the username in any case, but we store it in lowercase\n\t.transform(value => value.toLowerCase())\n\nexport const PasswordSchema = z\n\t.string({ required_error: 'Password is required' })\n\t.min(6, { message: 'Password is too short' })\n\t.max(100, { message: 'Password is too long' })\nexport const NameSchema = z\n\t.string({ required_error: 'Name is required' })\n\t.min(3, { message: 'Name is too short' })\n\t.max(40, { message: 'Name is too long' })\nexport const EmailSchema = z\n\t.string({ required_error: 'Email is required' })\n\t.email({ message: 'Email is invalid' })\n\t.min(3, { message: 'Email is too short' })\n\t.max(100, { message: 'Email is too long' })\n\t// users can type the email in any case, but we store it in lowercase\n\t.transform(value => value.toLowerCase())\n\nexport const PasswordAndConfirmPasswordSchema = z\n\t.object({ password: PasswordSchema, confirmPassword: PasswordSchema })\n\t.superRefine(({ confirmPassword, password }, ctx) => {\n\t\tif (confirmPassword !== password) {\n\t\t\tctx.addIssue({\n\t\t\t\tpath: ['confirmPassword'],\n\t\t\t\tcode: 'custom',\n\t\t\t\tmessage: 'The passwords must match',\n\t\t\t})\n\t\t}\n\t})\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\tredirect,\n\ttype ActionFunctionArgs,\n\ttype LoaderFunctionArgs,\n} from '@remix-run/node'\nimport { Form, useActionData, useLoaderData } from '@remix-run/react'\nimport { z } from 'zod'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport {\n\tprepareVerification,\n\trequireRecentVerification,\n} from '#app/routes/_auth+/verify.server.ts'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { sendEmail } from '#app/utils/email.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { EmailSchema } from '#app/utils/user-validation.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { EmailChangeEmail } from './profile.change-email.server.tsx'\nimport { type BreadcrumbHandle } from './profile.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"envelope-closed\">Change Email</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nexport const newEmailAddressSessionKey = 'new-email-address'\n\nconst ChangeEmailSchema = z.object({\n\temail: EmailSchema,\n})\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tawait requireRecentVerification(request)\n\tconst userId = await requireUserId(request)\n\tconst user = await prisma.user.findUnique({\n\t\twhere: { id: userId },\n\t\tselect: { email: true },\n\t})\n\tif (!user) {\n\t\tconst params = new URLSearchParams({ redirectTo: request.url })\n\t\tthrow redirect(`/login?${params}`)\n\t}\n\treturn json({ user })\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await request.formData()\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: ChangeEmailSchema.superRefine(async (data, ctx) => {\n\t\t\tconst existingUser = await prisma.user.findUnique({\n\t\t\t\twhere: { email: data.email },\n\t\t\t})\n\t\t\tif (existingUser) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['email'],\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: 'This email is already in use.',\n\t\t\t\t})\n\t\t\t}\n\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\tconst { otp, redirectTo, verifyUrl } = await prepareVerification({\n\t\tperiod: 10 * 60,\n\t\trequest,\n\t\ttarget: userId,\n\t\ttype: 'change-email',\n\t})\n\n\tconst response = await sendEmail({\n\t\tto: submission.value.email,\n\t\tsubject: `Epic Notes Email Change Verification`,\n\t\treact: <EmailChangeEmail verifyUrl={verifyUrl.toString()} otp={otp} />,\n\t})\n\n\tif (response.status === 'success') {\n\t\tconst verifySession = await verifySessionStorage.getSession()\n\t\tverifySession.set(newEmailAddressSessionKey, submission.value.email)\n\t\treturn redirect(redirectTo.toString(), {\n\t\t\theaders: {\n\t\t\t\t'set-cookie': await verifySessionStorage.commitSession(verifySession),\n\t\t\t},\n\t\t})\n\t} else {\n\t\treturn json(\n\t\t\t{ result: submission.reply({ formErrors: [response.error.message] }) },\n\t\t\t{ status: 500 },\n\t\t)\n\t}\n}\n\nexport default function ChangeEmailIndex() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst actionData = useActionData<typeof action>()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'change-email-form',\n\t\tconstraint: getZodConstraint(ChangeEmailSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ChangeEmailSchema })\n\t\t},\n\t})\n\n\tconst isPending = useIsPending()\n\treturn (\n\t\t<div>\n\t\t\t<h1 className=\"text-h1\">Change Email</h1>\n\t\t\t<p>You will receive an email at the new email address to confirm.</p>\n\t\t\t<p>\n\t\t\t\tAn email notice will also be sent to your old address {data.user.email}.\n\t\t\t</p>\n\t\t\t<div className=\"mx-auto mt-5 max-w-sm\">\n\t\t\t\t<Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ children: 'New Email' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.email, { type: 'email' }),\n\t\t\t\t\t\t\tautoComplete: 'email',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.email.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<ErrorList id={form.errorId} errors={form.errors} />\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\tstatus={isPending ? 'pending' : form.status ?? 'idle'}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSend Confirmation\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import { invariant } from '@epic-web/invariant'\nimport * as E from '@react-email/components'\nimport { json } from '@remix-run/node'\nimport {\n\trequireRecentVerification,\n\ttype VerifyFunctionArgs,\n} from '#app/routes/_auth+/verify.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { sendEmail } from '#app/utils/email.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { newEmailAddressSessionKey } from './profile.change-email'\n\nexport async function handleVerification({\n\trequest,\n\tsubmission,\n}: VerifyFunctionArgs) {\n\tawait requireRecentVerification(request)\n\tinvariant(\n\t\tsubmission.status === 'success',\n\t\t'Submission should be successful by now',\n\t)\n\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst newEmail = verifySession.get(newEmailAddressSessionKey)\n\tif (!newEmail) {\n\t\treturn json(\n\t\t\t{\n\t\t\t\tresult: submission.reply({\n\t\t\t\t\tformErrors: [\n\t\t\t\t\t\t'You must submit the code on the same device that requested the email change.',\n\t\t\t\t\t],\n\t\t\t\t}),\n\t\t\t},\n\t\t\t{ status: 400 },\n\t\t)\n\t}\n\tconst preUpdateUser = await prisma.user.findFirstOrThrow({\n\t\tselect: { email: true },\n\t\twhere: { id: submission.value.target },\n\t})\n\tconst user = await prisma.user.update({\n\t\twhere: { id: submission.value.target },\n\t\tselect: { id: true, email: true, username: true },\n\t\tdata: { email: newEmail },\n\t})\n\n\tvoid sendEmail({\n\t\tto: preUpdateUser.email,\n\t\tsubject: 'Epic Stack email changed',\n\t\treact: <EmailChangeNoticeEmail userId={user.id} />,\n\t})\n\n\treturn redirectWithToast(\n\t\t'/settings/profile',\n\t\t{\n\t\t\ttitle: 'Email Changed',\n\t\t\ttype: 'success',\n\t\t\tdescription: `Your email has been changed to ${user.email}`,\n\t\t},\n\t\t{\n\t\t\theaders: {\n\t\t\t\t'set-cookie': await verifySessionStorage.destroySession(verifySession),\n\t\t\t},\n\t\t},\n\t)\n}\n\nexport function EmailChangeEmail({\n\tverifyUrl,\n\totp,\n}: {\n\tverifyUrl: string\n\totp: string\n}) {\n\treturn (\n\t\t<E.Html lang=\"en\" dir=\"ltr\">\n\t\t\t<E.Container>\n\t\t\t\t<h1>\n\t\t\t\t\t<E.Text>Epic Notes Email Change</E.Text>\n\t\t\t\t</h1>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>\n\t\t\t\t\t\tHere's your verification code: <strong>{otp}</strong>\n\t\t\t\t\t</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>Or click the link:</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<E.Link href={verifyUrl}>{verifyUrl}</E.Link>\n\t\t\t</E.Container>\n\t\t</E.Html>\n\t)\n}\n\nfunction EmailChangeNoticeEmail({ userId }: { userId: string }) {\n\treturn (\n\t\t<E.Html lang=\"en\" dir=\"ltr\">\n\t\t\t<E.Container>\n\t\t\t\t<h1>\n\t\t\t\t\t<E.Text>Your Epic Notes email has been changed</E.Text>\n\t\t\t\t</h1>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>\n\t\t\t\t\t\tWe're writing to let you know that your Epic Notes email has been\n\t\t\t\t\t\tchanged.\n\t\t\t\t\t</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>\n\t\t\t\t\t\tIf you changed your email address, then you can safely ignore this.\n\t\t\t\t\t\tBut if you did not change your email address, then please contact\n\t\t\t\t\t\tsupport immediately.\n\t\t\t\t\t</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>Your Account ID: {userId}</E.Text>\n\t\t\t\t</p>\n\t\t\t</E.Container>\n\t\t</E.Html>\n\t)\n}\n","export function Spacer({\n\tsize,\n}: {\n\t/**\n\t * The size of the space\n\t *\n\t * 4xs: h-4 (16px)\n\t *\n\t * 3xs: h-8 (32px)\n\t *\n\t * 2xs: h-12 (48px)\n\t *\n\t * xs: h-16 (64px)\n\t *\n\t * sm: h-20 (80px)\n\t *\n\t * md: h-24 (96px)\n\t *\n\t * lg: h-28 (112px)\n\t *\n\t * xl: h-32 (128px)\n\t *\n\t * 2xl: h-36 (144px)\n\t *\n\t * 3xl: h-40 (160px)\n\t *\n\t * 4xl: h-44 (176px)\n\t */\n\tsize:\n\t\t| '4xs'\n\t\t| '3xs'\n\t\t| '2xs'\n\t\t| 'xs'\n\t\t| 'sm'\n\t\t| 'md'\n\t\t| 'lg'\n\t\t| 'xl'\n\t\t| '2xl'\n\t\t| '3xl'\n\t\t| '4xl'\n}) {\n\tconst options: Record<typeof size, string> = {\n\t\t'4xs': 'h-4',\n\t\t'3xs': 'h-8',\n\t\t'2xs': 'h-12',\n\t\txs: 'h-16',\n\t\tsm: 'h-20',\n\t\tmd: 'h-24',\n\t\tlg: 'h-28',\n\t\txl: 'h-32',\n\t\t'2xl': 'h-36',\n\t\t'3xl': 'h-40',\n\t\t'4xl': 'h-44',\n\t}\n\tconst className = options[size]\n\treturn <div className={className} />\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport {\n\tjson,\n\tredirect,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n\ttype MetaFunction,\n} from '@remix-run/node'\nimport {\n\tForm,\n\tuseActionData,\n\tuseLoaderData,\n\tuseSearchParams,\n} from '@remix-run/react'\nimport { HoneypotInputs } from 'remix-utils/honeypot/react'\nimport { safeRedirect } from 'remix-utils/safe-redirect'\nimport { z } from 'zod'\nimport { CheckboxField, ErrorList, Field } from '#app/components/forms.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireAnonymous, sessionKey, signup } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport {\n\tNameSchema,\n\tPasswordAndConfirmPasswordSchema,\n\tUsernameSchema,\n} from '#app/utils/user-validation.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\n\nexport const onboardingEmailSessionKey = 'onboardingEmail'\n\nconst SignupFormSchema = z\n\t.object({\n\t\tusername: UsernameSchema,\n\t\tname: NameSchema,\n\t\tagreeToTermsOfServiceAndPrivacyPolicy: z.boolean({\n\t\t\trequired_error:\n\t\t\t\t'You must agree to the terms of service and privacy policy',\n\t\t}),\n\t\tremember: z.boolean().optional(),\n\t\tredirectTo: z.string().optional(),\n\t})\n\t.and(PasswordAndConfirmPasswordSchema)\n\nasync function requireOnboardingEmail(request: Request) {\n\tawait requireAnonymous(request)\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst email = verifySession.get(onboardingEmailSessionKey)\n\tif (typeof email !== 'string' || !email) {\n\t\tthrow redirect('/signup')\n\t}\n\treturn email\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst email = await requireOnboardingEmail(request)\n\treturn json({ email })\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst email = await requireOnboardingEmail(request)\n\tconst formData = await request.formData()\n\tcheckHoneypot(formData)\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: intent =>\n\t\t\tSignupFormSchema.superRefine(async (data, ctx) => {\n\t\t\t\tconst existingUser = await prisma.user.findUnique({\n\t\t\t\t\twhere: { username: data.username },\n\t\t\t\t\tselect: { id: true },\n\t\t\t\t})\n\t\t\t\tif (existingUser) {\n\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\tpath: ['username'],\n\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\tmessage: 'A user already exists with this username',\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}).transform(async data => {\n\t\t\t\tif (intent !== null) return { ...data, session: null }\n\n\t\t\t\tconst session = await signup({ ...data, email })\n\t\t\t\treturn { ...data, session }\n\t\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success' || !submission.value.session) {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { session, remember, redirectTo } = submission.value\n\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tauthSession.set(sessionKey, session.id)\n\tconst verifySession = await verifySessionStorage.getSession()\n\tconst headers = new Headers()\n\theaders.append(\n\t\t'set-cookie',\n\t\tawait authSessionStorage.commitSession(authSession, {\n\t\t\texpires: remember ? session.expirationDate : undefined,\n\t\t}),\n\t)\n\theaders.append(\n\t\t'set-cookie',\n\t\tawait verifySessionStorage.destroySession(verifySession),\n\t)\n\n\treturn redirectWithToast(\n\t\tsafeRedirect(redirectTo),\n\t\t{ title: 'Welcome', description: 'Thanks for signing up!' },\n\t\t{ headers },\n\t)\n}\n\nexport const meta: MetaFunction = () => {\n\treturn [{ title: 'Setup Epic Notes Account' }]\n}\n\nexport default function OnboardingRoute() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst actionData = useActionData<typeof action>()\n\tconst isPending = useIsPending()\n\tconst [searchParams] = useSearchParams()\n\tconst redirectTo = searchParams.get('redirectTo')\n\n\tconst [form, fields] = useForm({\n\t\tid: 'onboarding-form',\n\t\tconstraint: getZodConstraint(SignupFormSchema),\n\t\tdefaultValue: { redirectTo },\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: SignupFormSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"container flex min-h-full flex-col justify-center pb-32 pt-20\">\n\t\t\t<div className=\"mx-auto w-full max-w-lg\">\n\t\t\t\t<div className=\"flex flex-col gap-3 text-center\">\n\t\t\t\t\t<h1 className=\"text-h1\">Welcome aboard {data.email}!</h1>\n\t\t\t\t\t<p className=\"text-body-md text-muted-foreground\">\n\t\t\t\t\t\tPlease enter your details.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<Spacer size=\"xs\" />\n\t\t\t\t<Form\n\t\t\t\t\tmethod=\"POST\"\n\t\t\t\t\tclassName=\"mx-auto min-w-full max-w-sm sm:min-w-[368px]\"\n\t\t\t\t\t{...getFormProps(form)}\n\t\t\t\t>\n\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ htmlFor: fields.username.id, children: 'Username' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.username, { type: 'text' }),\n\t\t\t\t\t\t\tautoComplete: 'username',\n\t\t\t\t\t\t\tclassName: 'lowercase',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.username.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ htmlFor: fields.name.id, children: 'Name' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.name, { type: 'text' }),\n\t\t\t\t\t\t\tautoComplete: 'name',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.name.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ htmlFor: fields.password.id, children: 'Password' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.password, { type: 'password' }),\n\t\t\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.password.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.confirmPassword.id,\n\t\t\t\t\t\t\tchildren: 'Confirm Password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.confirmPassword, { type: 'password' }),\n\t\t\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.confirmPassword.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CheckboxField\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.agreeToTermsOfServiceAndPrivacyPolicy.id,\n\t\t\t\t\t\t\tchildren:\n\t\t\t\t\t\t\t\t'Do you agree to our Terms of Service and Privacy Policy?',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tbuttonProps={getInputProps(\n\t\t\t\t\t\t\tfields.agreeToTermsOfServiceAndPrivacyPolicy,\n\t\t\t\t\t\t\t{ type: 'checkbox' },\n\t\t\t\t\t\t)}\n\t\t\t\t\t\terrors={fields.agreeToTermsOfServiceAndPrivacyPolicy.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<CheckboxField\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.remember.id,\n\t\t\t\t\t\t\tchildren: 'Remember me',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tbuttonProps={getInputProps(fields.remember, { type: 'checkbox' })}\n\t\t\t\t\t\terrors={fields.remember.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<input {...getInputProps(fields.redirectTo, { type: 'hidden' })} />\n\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t\t\t<div className=\"flex items-center justify-between gap-6\">\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\tstatus={isPending ? 'pending' : form.status ?? 'idle'}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCreate an account\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import { invariant } from '@epic-web/invariant'\nimport { redirect } from '@remix-run/node'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { onboardingEmailSessionKey } from './onboarding.tsx'\nimport { type VerifyFunctionArgs } from './verify.server.ts'\n\nexport async function handleVerification({ submission }: VerifyFunctionArgs) {\n\tinvariant(\n\t\tsubmission.status === 'success',\n\t\t'Submission should be successful by now',\n\t)\n\tconst verifySession = await verifySessionStorage.getSession()\n\tverifySession.set(onboardingEmailSessionKey, submission.value.target)\n\treturn redirect('/onboarding', {\n\t\theaders: {\n\t\t\t'set-cookie': await verifySessionStorage.commitSession(verifySession),\n\t\t},\n\t})\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport {\n\tjson,\n\tredirect,\n\ttype ActionFunctionArgs,\n\ttype LoaderFunctionArgs,\n\ttype MetaFunction,\n} from '@remix-run/node'\nimport { Form, useActionData, useLoaderData } from '@remix-run/react'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireAnonymous, resetUserPassword } from '#app/utils/auth.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { PasswordAndConfirmPasswordSchema } from '#app/utils/user-validation.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\n\nexport const resetPasswordUsernameSessionKey = 'resetPasswordUsername'\n\nconst ResetPasswordSchema = PasswordAndConfirmPasswordSchema\n\nasync function requireResetPasswordUsername(request: Request) {\n\tawait requireAnonymous(request)\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst resetPasswordUsername = verifySession.get(\n\t\tresetPasswordUsernameSessionKey,\n\t)\n\tif (typeof resetPasswordUsername !== 'string' || !resetPasswordUsername) {\n\t\tthrow redirect('/login')\n\t}\n\treturn resetPasswordUsername\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst resetPasswordUsername = await requireResetPasswordUsername(request)\n\treturn json({ resetPasswordUsername })\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst resetPasswordUsername = await requireResetPasswordUsername(request)\n\tconst formData = await request.formData()\n\tconst submission = parseWithZod(formData, {\n\t\tschema: ResetPasswordSchema,\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\tconst { password } = submission.value\n\n\tawait resetUserPassword({ username: resetPasswordUsername, password })\n\tconst verifySession = await verifySessionStorage.getSession()\n\treturn redirect('/login', {\n\t\theaders: {\n\t\t\t'set-cookie': await verifySessionStorage.destroySession(verifySession),\n\t\t},\n\t})\n}\n\nexport const meta: MetaFunction = () => {\n\treturn [{ title: 'Reset Password | Epic Notes' }]\n}\n\nexport default function ResetPasswordPage() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst actionData = useActionData<typeof action>()\n\tconst isPending = useIsPending()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'reset-password',\n\t\tconstraint: getZodConstraint(ResetPasswordSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ResetPasswordSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"container flex flex-col justify-center pb-32 pt-20\">\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<h1 className=\"text-h1\">Password Reset</h1>\n\t\t\t\t<p className=\"mt-3 text-body-md text-muted-foreground\">\n\t\t\t\t\tHi, {data.resetPasswordUsername}. No worries. It happens all the time.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"mx-auto mt-16 min-w-full max-w-sm sm:min-w-[368px]\">\n\t\t\t\t<Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.password.id,\n\t\t\t\t\t\t\tchildren: 'New Password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.password, { type: 'password' }),\n\t\t\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.password.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.confirmPassword.id,\n\t\t\t\t\t\t\tchildren: 'Confirm Password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.confirmPassword, { type: 'password' }),\n\t\t\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.confirmPassword.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t\t\t<StatusButton\n\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\tstatus={isPending ? 'pending' : form.status ?? 'idle'}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t>\n\t\t\t\t\t\tReset password\n\t\t\t\t\t</StatusButton>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n","import { invariant } from '@epic-web/invariant'\nimport { json, redirect } from '@remix-run/node'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { resetPasswordUsernameSessionKey } from './reset-password.tsx'\nimport { type VerifyFunctionArgs } from './verify.server.ts'\n\nexport async function handleVerification({ submission }: VerifyFunctionArgs) {\n\tinvariant(\n\t\tsubmission.status === 'success',\n\t\t'Submission should be successful by now',\n\t)\n\tconst target = submission.value.target\n\tconst user = await prisma.user.findFirst({\n\t\twhere: { OR: [{ email: target }, { username: target }] },\n\t\tselect: { email: true, username: true },\n\t})\n\t// we don't want to say the user is not found if the email is not found\n\t// because that would allow an attacker to check if an email is registered\n\tif (!user) {\n\t\treturn json(\n\t\t\t{ result: submission.reply({ fieldErrors: { code: ['Invalid code'] } }) },\n\t\t\t{ status: 400 },\n\t\t)\n\t}\n\n\tconst verifySession = await verifySessionStorage.getSession()\n\tverifySession.set(resetPasswordUsernameSessionKey, user.username)\n\treturn redirect('/reset-password', {\n\t\theaders: {\n\t\t\t'set-cookie': await verifySessionStorage.commitSession(verifySession),\n\t\t},\n\t})\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type ActionFunctionArgs } from '@remix-run/node'\nimport { Form, useActionData, useSearchParams } from '@remix-run/react'\nimport { HoneypotInputs } from 'remix-utils/honeypot/react'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { ErrorList, OTPField } from '#app/components/forms.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { validateRequest } from './verify.server.ts'\n\nexport const codeQueryParam = 'code'\nexport const targetQueryParam = 'target'\nexport const typeQueryParam = 'type'\nexport const redirectToQueryParam = 'redirectTo'\nconst types = ['onboarding', 'reset-password', 'change-email', '2fa'] as const\nconst VerificationTypeSchema = z.enum(types)\nexport type VerificationTypes = z.infer<typeof VerificationTypeSchema>\n\nexport const VerifySchema = z.object({\n\t[codeQueryParam]: z.string().min(6).max(6),\n\t[typeQueryParam]: VerificationTypeSchema,\n\t[targetQueryParam]: z.string(),\n\t[redirectToQueryParam]: z.string().optional(),\n})\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst formData = await request.formData()\n\tcheckHoneypot(formData)\n\treturn validateRequest(request, formData)\n}\n\nexport default function VerifyRoute() {\n\tconst [searchParams] = useSearchParams()\n\tconst isPending = useIsPending()\n\tconst actionData = useActionData<typeof action>()\n\tconst parseWithZoddType = VerificationTypeSchema.safeParse(\n\t\tsearchParams.get(typeQueryParam),\n\t)\n\tconst type = parseWithZoddType.success ? parseWithZoddType.data : null\n\n\tconst checkEmail = (\n\t\t<>\n\t\t\t<h1 className=\"text-h1\">Check your email</h1>\n\t\t\t<p className=\"mt-3 text-body-md text-muted-foreground\">\n\t\t\t\tWe've sent you a code to verify your email address.\n\t\t\t</p>\n\t\t</>\n\t)\n\n\tconst headings: Record<VerificationTypes, React.ReactNode> = {\n\t\tonboarding: checkEmail,\n\t\t'reset-password': checkEmail,\n\t\t'change-email': checkEmail,\n\t\t'2fa': (\n\t\t\t<>\n\t\t\t\t<h1 className=\"text-h1\">Check your 2FA app</h1>\n\t\t\t\t<p className=\"mt-3 text-body-md text-muted-foreground\">\n\t\t\t\t\tPlease enter your 2FA code to verify your identity.\n\t\t\t\t</p>\n\t\t\t</>\n\t\t),\n\t}\n\n\tconst [form, fields] = useForm({\n\t\tid: 'verify-form',\n\t\tconstraint: getZodConstraint(VerifySchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: VerifySchema })\n\t\t},\n\t\tdefaultValue: {\n\t\t\tcode: searchParams.get(codeQueryParam),\n\t\t\ttype: type,\n\t\t\ttarget: searchParams.get(targetQueryParam),\n\t\t\tredirectTo: searchParams.get(redirectToQueryParam),\n\t\t},\n\t})\n\n\treturn (\n\t\t<main className=\"container flex flex-col justify-center pb-32 pt-20\">\n\t\t\t<div className=\"text-center\">\n\t\t\t\t{type ? headings[type] : 'Invalid Verification Type'}\n\t\t\t</div>\n\n\t\t\t<Spacer size=\"xs\" />\n\n\t\t\t<div className=\"mx-auto flex w-72 max-w-full flex-col justify-center gap-1\">\n\t\t\t\t<div>\n\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex w-full gap-2\">\n\t\t\t\t\t<Form method=\"POST\" {...getFormProps(form)} className=\"flex-1\">\n\t\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t\t<div className=\"flex items-center justify-center\">\n\t\t\t\t\t\t\t<OTPField\n\t\t\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\t\t\thtmlFor: fields[codeQueryParam].id,\n\t\t\t\t\t\t\t\t\tchildren: 'Code',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t...getInputProps(fields[codeQueryParam], { type: 'text' }),\n\t\t\t\t\t\t\t\t\tautoComplete: 'one-time-code',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terrors={fields[codeQueryParam].errors}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t{...getInputProps(fields[typeQueryParam], { type: 'hidden' })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t{...getInputProps(fields[targetQueryParam], { type: 'hidden' })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t{...getInputProps(fields[redirectToQueryParam], {\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\tstatus={isPending ? 'pending' : form.status ?? 'idle'}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</main>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n","import { type Submission } from '@conform-to/react'\nimport { parseWithZod } from '@conform-to/zod'\nimport { json } from '@remix-run/node'\nimport { z } from 'zod'\nimport { handleVerification as handleChangeEmailVerification } from '#app/routes/settings+/profile.change-email.server.tsx'\nimport { twoFAVerificationType } from '#app/routes/settings+/profile.two-factor.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { ensurePrimary } from '#app/utils/litefs.server.ts'\nimport { getDomainUrl } from '#app/utils/misc.tsx'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { generateTOTP, verifyTOTP } from '#app/utils/totp.server.ts'\nimport { type twoFAVerifyVerificationType } from '../settings+/profile.two-factor.verify.tsx'\nimport {\n\thandleVerification as handleLoginTwoFactorVerification,\n\tshouldRequestTwoFA,\n} from './login.server.ts'\nimport { handleVerification as handleOnboardingVerification } from './onboarding.server.ts'\nimport { handleVerification as handleResetPasswordVerification } from './reset-password.server.ts'\nimport {\n\tVerifySchema,\n\tcodeQueryParam,\n\tredirectToQueryParam,\n\ttargetQueryParam,\n\ttypeQueryParam,\n\ttype VerificationTypes,\n} from './verify.tsx'\n\nexport type VerifyFunctionArgs = {\n\trequest: Request\n\tsubmission: Submission<\n\t\tz.input<typeof VerifySchema>,\n\t\tstring[],\n\t\tz.output<typeof VerifySchema>\n\t>\n\tbody: FormData | URLSearchParams\n}\n\nexport function getRedirectToUrl({\n\trequest,\n\ttype,\n\ttarget,\n\tredirectTo,\n}: {\n\trequest: Request\n\ttype: VerificationTypes\n\ttarget: string\n\tredirectTo?: string\n}) {\n\tconst redirectToUrl = new URL(`${getDomainUrl(request)}/verify`)\n\tredirectToUrl.searchParams.set(typeQueryParam, type)\n\tredirectToUrl.searchParams.set(targetQueryParam, target)\n\tif (redirectTo) {\n\t\tredirectToUrl.searchParams.set(redirectToQueryParam, redirectTo)\n\t}\n\treturn redirectToUrl\n}\n\nexport async function requireRecentVerification(request: Request) {\n\tconst userId = await requireUserId(request)\n\tconst shouldReverify = await shouldRequestTwoFA(request)\n\tif (shouldReverify) {\n\t\tconst reqUrl = new URL(request.url)\n\t\tconst redirectUrl = getRedirectToUrl({\n\t\t\trequest,\n\t\t\ttarget: userId,\n\t\t\ttype: twoFAVerificationType,\n\t\t\tredirectTo: reqUrl.pathname + reqUrl.search,\n\t\t})\n\t\tthrow await redirectWithToast(redirectUrl.toString(), {\n\t\t\ttitle: 'Please Reverify',\n\t\t\tdescription: 'Please reverify your account before proceeding',\n\t\t})\n\t}\n}\n\nexport async function prepareVerification({\n\tperiod,\n\trequest,\n\ttype,\n\ttarget,\n}: {\n\tperiod: number\n\trequest: Request\n\ttype: VerificationTypes\n\ttarget: string\n}) {\n\tconst verifyUrl = getRedirectToUrl({ request, type, target })\n\tconst redirectTo = new URL(verifyUrl.toString())\n\n\tconst { otp, ...verificationConfig } = generateTOTP({\n\t\talgorithm: 'SHA256',\n\t\t// Leaving off 0, O, and I on purpose to avoid confusing users.\n\t\tcharSet: 'ABCDEFGHJKLMNPQRSTUVWXYZ123456789',\n\t\tperiod,\n\t})\n\tconst verificationData = {\n\t\ttype,\n\t\ttarget,\n\t\t...verificationConfig,\n\t\texpiresAt: new Date(Date.now() + verificationConfig.period * 1000),\n\t}\n\tawait prisma.verification.upsert({\n\t\twhere: { target_type: { target, type } },\n\t\tcreate: verificationData,\n\t\tupdate: verificationData,\n\t})\n\n\t// add the otp to the url we'll email the user.\n\tverifyUrl.searchParams.set(codeQueryParam, otp)\n\n\treturn { otp, redirectTo, verifyUrl }\n}\n\nexport async function isCodeValid({\n\tcode,\n\ttype,\n\ttarget,\n}: {\n\tcode: string\n\ttype: VerificationTypes | typeof twoFAVerifyVerificationType\n\ttarget: string\n}) {\n\tconst verification = await prisma.verification.findUnique({\n\t\twhere: {\n\t\t\ttarget_type: { target, type },\n\t\t\tOR: [{ expiresAt: { gt: new Date() } }, { expiresAt: null }],\n\t\t},\n\t\tselect: { algorithm: true, secret: true, period: true, charSet: true },\n\t})\n\tif (!verification) return false\n\tconst result = verifyTOTP({\n\t\totp: code,\n\t\t...verification,\n\t})\n\tif (!result) return false\n\n\treturn true\n}\n\nexport async function validateRequest(\n\trequest: Request,\n\tbody: URLSearchParams | FormData,\n) {\n\tconst submission = await parseWithZod(body, {\n\t\tschema: VerifySchema.superRefine(async (data, ctx) => {\n\t\t\tconst codeIsValid = await isCodeValid({\n\t\t\t\tcode: data[codeQueryParam],\n\t\t\t\ttype: data[typeQueryParam],\n\t\t\t\ttarget: data[targetQueryParam],\n\t\t\t})\n\t\t\tif (!codeIsValid) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['code'],\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: `Invalid code`,\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\t// this code path could be part of a loader (GET request), so we need to make\n\t// sure we're running on primary because we're about to make writes.\n\tawait ensurePrimary()\n\n\tconst { value: submissionValue } = submission\n\n\tasync function deleteVerification() {\n\t\tawait prisma.verification.delete({\n\t\t\twhere: {\n\t\t\t\ttarget_type: {\n\t\t\t\t\ttype: submissionValue[typeQueryParam],\n\t\t\t\t\ttarget: submissionValue[targetQueryParam],\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t}\n\n\tswitch (submissionValue[typeQueryParam]) {\n\t\tcase 'reset-password': {\n\t\t\tawait deleteVerification()\n\t\t\treturn handleResetPasswordVerification({ request, body, submission })\n\t\t}\n\t\tcase 'onboarding': {\n\t\t\tawait deleteVerification()\n\t\t\treturn handleOnboardingVerification({ request, body, submission })\n\t\t}\n\t\tcase 'change-email': {\n\t\t\tawait deleteVerification()\n\t\t\treturn handleChangeEmailVerification({ request, body, submission })\n\t\t}\n\t\tcase '2fa': {\n\t\t\treturn handleLoginTwoFactorVerification({ request, body, submission })\n\t\t}\n\t}\n}\n","import { invariant } from '@epic-web/invariant'\nimport { redirect } from '@remix-run/node'\nimport { safeRedirect } from 'remix-utils/safe-redirect'\nimport { twoFAVerificationType } from '#app/routes/settings+/profile.two-factor.tsx'\nimport { getUserId, sessionKey } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { combineResponseInits } from '#app/utils/misc.tsx'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { getRedirectToUrl, type VerifyFunctionArgs } from './verify.server.ts'\n\nconst verifiedTimeKey = 'verified-time'\nconst unverifiedSessionIdKey = 'unverified-session-id'\nconst rememberKey = 'remember'\n\nexport async function handleNewSession(\n\t{\n\t\trequest,\n\t\tsession,\n\t\tredirectTo,\n\t\tremember,\n\t}: {\n\t\trequest: Request\n\t\tsession: { userId: string; id: string; expirationDate: Date }\n\t\tredirectTo?: string\n\t\tremember: boolean\n\t},\n\tresponseInit?: ResponseInit,\n) {\n\tconst verification = await prisma.verification.findUnique({\n\t\tselect: { id: true },\n\t\twhere: {\n\t\t\ttarget_type: { target: session.userId, type: twoFAVerificationType },\n\t\t},\n\t})\n\tconst userHasTwoFactor = Boolean(verification)\n\n\tif (userHasTwoFactor) {\n\t\tconst verifySession = await verifySessionStorage.getSession()\n\t\tverifySession.set(unverifiedSessionIdKey, session.id)\n\t\tverifySession.set(rememberKey, remember)\n\t\tconst redirectUrl = getRedirectToUrl({\n\t\t\trequest,\n\t\t\ttype: twoFAVerificationType,\n\t\t\ttarget: session.userId,\n\t\t\tredirectTo,\n\t\t})\n\t\treturn redirect(\n\t\t\t`${redirectUrl.pathname}?${redirectUrl.searchParams}`,\n\t\t\tcombineResponseInits(\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'set-cookie':\n\t\t\t\t\t\t\tawait verifySessionStorage.commitSession(verifySession),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tresponseInit,\n\t\t\t),\n\t\t)\n\t} else {\n\t\tconst authSession = await authSessionStorage.getSession(\n\t\t\trequest.headers.get('cookie'),\n\t\t)\n\t\tauthSession.set(sessionKey, session.id)\n\n\t\treturn redirect(\n\t\t\tsafeRedirect(redirectTo),\n\t\t\tcombineResponseInits(\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'set-cookie': await authSessionStorage.commitSession(authSession, {\n\t\t\t\t\t\t\texpires: remember ? session.expirationDate : undefined,\n\t\t\t\t\t\t}),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tresponseInit,\n\t\t\t),\n\t\t)\n\t}\n}\n\nexport async function handleVerification({\n\trequest,\n\tsubmission,\n}: VerifyFunctionArgs) {\n\tinvariant(\n\t\tsubmission.status === 'success',\n\t\t'Submission should be successful by now',\n\t)\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\n\tconst remember = verifySession.get(rememberKey)\n\tconst { redirectTo } = submission.value\n\tconst headers = new Headers()\n\tauthSession.set(verifiedTimeKey, Date.now())\n\n\tconst unverifiedSessionId = verifySession.get(unverifiedSessionIdKey)\n\tif (unverifiedSessionId) {\n\t\tconst session = await prisma.session.findUnique({\n\t\t\tselect: { expirationDate: true },\n\t\t\twhere: { id: unverifiedSessionId },\n\t\t})\n\t\tif (!session) {\n\t\t\tthrow await redirectWithToast('/login', {\n\t\t\t\ttype: 'error',\n\t\t\t\ttitle: 'Invalid session',\n\t\t\t\tdescription: 'Could not find session to verify. Please try again.',\n\t\t\t})\n\t\t}\n\t\tauthSession.set(sessionKey, unverifiedSessionId)\n\n\t\theaders.append(\n\t\t\t'set-cookie',\n\t\t\tawait authSessionStorage.commitSession(authSession, {\n\t\t\t\texpires: remember ? session.expirationDate : undefined,\n\t\t\t}),\n\t\t)\n\t} else {\n\t\theaders.append(\n\t\t\t'set-cookie',\n\t\t\tawait authSessionStorage.commitSession(authSession),\n\t\t)\n\t}\n\n\theaders.append(\n\t\t'set-cookie',\n\t\tawait verifySessionStorage.destroySession(verifySession),\n\t)\n\n\treturn redirect(safeRedirect(redirectTo), { headers })\n}\n\nexport async function shouldRequestTwoFA(request: Request) {\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tif (verifySession.has(unverifiedSessionIdKey)) return true\n\tconst userId = await getUserId(request)\n\tif (!userId) return false\n\t// if it's over two hours since they last verified, we should request 2FA again\n\tconst userHasTwoFA = await prisma.verification.findUnique({\n\t\tselect: { id: true },\n\t\twhere: { target_type: { target: userId, type: twoFAVerificationType } },\n\t})\n\tif (!userHasTwoFA) return false\n\tconst verifiedTime = authSession.get(verifiedTimeKey) ?? new Date(0)\n\tconst twoHours = 1000 * 60 * 2\n\treturn Date.now() - verifiedTime > twoHours\n}\n","import {\n\tgetFormProps,\n\tgetInputProps,\n\tuseForm,\n\ttype SubmissionResult,\n} from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport {\n\tredirect,\n\tjson,\n\ttype ActionFunctionArgs,\n\ttype LoaderFunctionArgs,\n\ttype MetaFunction,\n} from '@remix-run/node'\nimport {\n\ttype Params,\n\tForm,\n\tuseActionData,\n\tuseLoaderData,\n\tuseSearchParams,\n} from '@remix-run/react'\nimport { safeRedirect } from 'remix-utils/safe-redirect'\nimport { z } from 'zod'\nimport { CheckboxField, ErrorList, Field } from '#app/components/forms.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport {\n\tauthenticator,\n\tsessionKey,\n\tsignupWithConnection,\n\trequireAnonymous,\n} from '#app/utils/auth.server.ts'\nimport { connectionSessionStorage } from '#app/utils/connections.server'\nimport { ProviderNameSchema } from '#app/utils/connections.tsx'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { NameSchema, UsernameSchema } from '#app/utils/user-validation.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { onboardingEmailSessionKey } from './onboarding'\n\nexport const providerIdKey = 'providerId'\nexport const prefilledProfileKey = 'prefilledProfile'\n\nconst SignupFormSchema = z.object({\n\timageUrl: z.string().optional(),\n\tusername: UsernameSchema,\n\tname: NameSchema,\n\tagreeToTermsOfServiceAndPrivacyPolicy: z.boolean({\n\t\trequired_error: 'You must agree to the terms of service and privacy policy',\n\t}),\n\tremember: z.boolean().optional(),\n\tredirectTo: z.string().optional(),\n})\n\nasync function requireData({\n\trequest,\n\tparams,\n}: {\n\trequest: Request\n\tparams: Params\n}) {\n\tawait requireAnonymous(request)\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst email = verifySession.get(onboardingEmailSessionKey)\n\tconst providerId = verifySession.get(providerIdKey)\n\tconst result = z\n\t\t.object({\n\t\t\temail: z.string(),\n\t\t\tproviderName: ProviderNameSchema,\n\t\t\tproviderId: z.string(),\n\t\t})\n\t\t.safeParse({ email, providerName: params.provider, providerId })\n\tif (result.success) {\n\t\treturn result.data\n\t} else {\n\t\tconsole.error(result.error)\n\t\tthrow redirect('/signup')\n\t}\n}\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n\tconst { email } = await requireData({ request, params })\n\tconst connectionSession = await connectionSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst prefilledProfile = verifySession.get(prefilledProfileKey)\n\n\tconst formError = connectionSession.get(authenticator.sessionErrorKey)\n\tconst hasError = typeof formError === 'string'\n\n\treturn json({\n\t\temail,\n\t\tstatus: 'idle',\n\t\tsubmission: {\n\t\t\tstatus: hasError ? 'error' : undefined,\n\t\t\tinitialValue: prefilledProfile ?? {},\n\t\t\terror: { '': hasError ? [formError] : [] },\n\t\t} as SubmissionResult,\n\t})\n}\n\nexport async function action({ request, params }: ActionFunctionArgs) {\n\tconst { email, providerId, providerName } = await requireData({\n\t\trequest,\n\t\tparams,\n\t})\n\tconst formData = await request.formData()\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: SignupFormSchema.superRefine(async (data, ctx) => {\n\t\t\tconst existingUser = await prisma.user.findUnique({\n\t\t\t\twhere: { username: data.username },\n\t\t\t\tselect: { id: true },\n\t\t\t})\n\t\t\tif (existingUser) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['username'],\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: 'A user already exists with this username',\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}).transform(async data => {\n\t\t\tconst session = await signupWithConnection({\n\t\t\t\t...data,\n\t\t\t\temail,\n\t\t\t\tproviderId,\n\t\t\t\tproviderName,\n\t\t\t})\n\t\t\treturn { ...data, session }\n\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { session, remember, redirectTo } = submission.value\n\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tauthSession.set(sessionKey, session.id)\n\tconst headers = new Headers()\n\theaders.append(\n\t\t'set-cookie',\n\t\tawait authSessionStorage.commitSession(authSession, {\n\t\t\texpires: remember ? session.expirationDate : undefined,\n\t\t}),\n\t)\n\theaders.append(\n\t\t'set-cookie',\n\t\tawait verifySessionStorage.destroySession(verifySession),\n\t)\n\n\treturn redirectWithToast(\n\t\tsafeRedirect(redirectTo),\n\t\t{ title: 'Welcome', description: 'Thanks for signing up!' },\n\t\t{ headers },\n\t)\n}\n\nexport const meta: MetaFunction = () => {\n\treturn [{ title: 'Setup Epic Notes Account' }]\n}\n\nexport default function OnboardingProviderRoute() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst actionData = useActionData<typeof action>()\n\tconst isPending = useIsPending()\n\tconst [searchParams] = useSearchParams()\n\tconst redirectTo = searchParams.get('redirectTo')\n\n\tconst [form, fields] = useForm({\n\t\tid: 'onboarding-provider-form',\n\t\tconstraint: getZodConstraint(SignupFormSchema),\n\t\tlastResult: actionData?.result ?? data.submission,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: SignupFormSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"container flex min-h-full flex-col justify-center pb-32 pt-20\">\n\t\t\t<div className=\"mx-auto w-full max-w-lg\">\n\t\t\t\t<div className=\"flex flex-col gap-3 text-center\">\n\t\t\t\t\t<h1 className=\"text-h1\">Welcome aboard {data.email}!</h1>\n\t\t\t\t\t<p className=\"text-body-md text-muted-foreground\">\n\t\t\t\t\t\tPlease enter your details.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<Spacer size=\"xs\" />\n\t\t\t\t<Form\n\t\t\t\t\tmethod=\"POST\"\n\t\t\t\t\tclassName=\"mx-auto min-w-full max-w-sm sm:min-w-[368px]\"\n\t\t\t\t\t{...getFormProps(form)}\n\t\t\t\t>\n\t\t\t\t\t{fields.imageUrl.initialValue ? (\n\t\t\t\t\t\t<div className=\"mb-4 flex flex-col items-center justify-center gap-4\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={fields.imageUrl.initialValue}\n\t\t\t\t\t\t\t\talt=\"Profile\"\n\t\t\t\t\t\t\t\tclassName=\"h-24 w-24 rounded-full\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<p className=\"text-body-sm text-muted-foreground\">\n\t\t\t\t\t\t\t\tYou can change your photo later\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<input {...getInputProps(fields.imageUrl, { type: 'hidden' })} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ htmlFor: fields.username.id, children: 'Username' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.username, { type: 'text' }),\n\t\t\t\t\t\t\tautoComplete: 'username',\n\t\t\t\t\t\t\tclassName: 'lowercase',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.username.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ htmlFor: fields.name.id, children: 'Name' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.name, { type: 'text' }),\n\t\t\t\t\t\t\tautoComplete: 'name',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.name.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CheckboxField\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.agreeToTermsOfServiceAndPrivacyPolicy.id,\n\t\t\t\t\t\t\tchildren:\n\t\t\t\t\t\t\t\t'Do you agree to our Terms of Service and Privacy Policy?',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tbuttonProps={getInputProps(\n\t\t\t\t\t\t\tfields.agreeToTermsOfServiceAndPrivacyPolicy,\n\t\t\t\t\t\t\t{ type: 'checkbox' },\n\t\t\t\t\t\t)}\n\t\t\t\t\t\terrors={fields.agreeToTermsOfServiceAndPrivacyPolicy.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<CheckboxField\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.remember.id,\n\t\t\t\t\t\t\tchildren: 'Remember me',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tbuttonProps={getInputProps(fields.remember, { type: 'checkbox' })}\n\t\t\t\t\t\terrors={fields.remember.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{redirectTo ? (\n\t\t\t\t\t\t<input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n\t\t\t\t\t) : null}\n\n\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t\t\t<div className=\"flex items-center justify-between gap-6\">\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\tstatus={isPending ? 'pending' : form.status ?? 'idle'}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCreate an account\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import { redirect, type LoaderFunctionArgs } from '@remix-run/node'\nimport {\n\tauthenticator,\n\tgetSessionExpirationDate,\n\tgetUserId,\n} from '#app/utils/auth.server.ts'\nimport { ProviderNameSchema, providerLabels } from '#app/utils/connections.tsx'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { ensurePrimary } from '#app/utils/litefs.server.ts'\nimport { combineHeaders } from '#app/utils/misc.tsx'\nimport {\n\tnormalizeEmail,\n\tnormalizeUsername,\n} from '#app/utils/providers/provider.ts'\nimport {\n\tdestroyRedirectToHeader,\n\tgetRedirectCookieValue,\n} from '#app/utils/redirect-cookie.server.ts'\nimport {\n\tcreateToastHeaders,\n\tredirectWithToast,\n} from '#app/utils/toast.server.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { handleNewSession } from './login.server.ts'\nimport { onboardingEmailSessionKey } from './onboarding.tsx'\nimport { prefilledProfileKey, providerIdKey } from './onboarding_.$provider.tsx'\n\nconst destroyRedirectTo = { 'set-cookie': destroyRedirectToHeader }\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n\t// this loader performs mutations, so we need to make sure we're on the\n\t// primary instance to avoid writing to a read-only replica\n\tawait ensurePrimary()\n\n\tconst providerName = ProviderNameSchema.parse(params.provider)\n\tconst redirectTo = getRedirectCookieValue(request)\n\tconst label = providerLabels[providerName]\n\n\tconst authResult = await authenticator\n\t\t.authenticate(providerName, request, { throwOnError: true })\n\t\t.then(\n\t\t\tdata => ({ success: true, data }) as const,\n\t\t\terror => ({ success: false, error }) as const,\n\t\t)\n\n\tif (!authResult.success) {\n\t\tconsole.error(authResult.error)\n\t\tthrow await redirectWithToast(\n\t\t\t'/login',\n\t\t\t{\n\t\t\t\ttitle: 'Auth Failed',\n\t\t\t\tdescription: `There was an error authenticating with ${label}.`,\n\t\t\t\ttype: 'error',\n\t\t\t},\n\t\t\t{ headers: destroyRedirectTo },\n\t\t)\n\t}\n\n\tconst { data: profile } = authResult\n\n\tconst existingConnection = await prisma.connection.findUnique({\n\t\tselect: { userId: true },\n\t\twhere: {\n\t\t\tproviderName_providerId: { providerName, providerId: profile.id },\n\t\t},\n\t})\n\n\tconst userId = await getUserId(request)\n\n\tif (existingConnection && userId) {\n\t\tif (existingConnection.userId === userId) {\n\t\t\treturn redirectWithToast(\n\t\t\t\t'/settings/profile/connections',\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Already Connected',\n\t\t\t\t\tdescription: `Your \"${profile.username}\" ${label} account is already connected.`,\n\t\t\t\t},\n\t\t\t\t{ headers: destroyRedirectTo },\n\t\t\t)\n\t\t} else {\n\t\t\treturn redirectWithToast(\n\t\t\t\t'/settings/profile/connections',\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Already Connected',\n\t\t\t\t\tdescription: `The \"${profile.username}\" ${label} account is already connected to another account.`,\n\t\t\t\t},\n\t\t\t\t{ headers: destroyRedirectTo },\n\t\t\t)\n\t\t}\n\t}\n\n\t// If we're already logged in, then link the account\n\tif (userId) {\n\t\tawait prisma.connection.create({\n\t\t\tdata: {\n\t\t\t\tproviderName,\n\t\t\t\tproviderId: profile.id,\n\t\t\t\tuserId,\n\t\t\t},\n\t\t})\n\t\treturn redirectWithToast(\n\t\t\t'/settings/profile/connections',\n\t\t\t{\n\t\t\t\ttitle: 'Connected',\n\t\t\t\ttype: 'success',\n\t\t\t\tdescription: `Your \"${profile.username}\" ${label} account has been connected.`,\n\t\t\t},\n\t\t\t{ headers: destroyRedirectTo },\n\t\t)\n\t}\n\n\t// Connection exists already? Make a new session\n\tif (existingConnection) {\n\t\treturn makeSession({ request, userId: existingConnection.userId })\n\t}\n\n\t// if the email matches a user in the db, then link the account and\n\t// make a new session\n\tconst user = await prisma.user.findUnique({\n\t\tselect: { id: true },\n\t\twhere: { email: profile.email.toLowerCase() },\n\t})\n\tif (user) {\n\t\tawait prisma.connection.create({\n\t\t\tdata: {\n\t\t\t\tproviderName,\n\t\t\t\tproviderId: profile.id,\n\t\t\t\tuserId: user.id,\n\t\t\t},\n\t\t})\n\t\treturn makeSession(\n\t\t\t{ request, userId: user.id },\n\t\t\t{\n\t\t\t\theaders: await createToastHeaders({\n\t\t\t\t\ttitle: 'Connected',\n\t\t\t\t\tdescription: `Your \"${profile.username}\" ${label} account has been connected.`,\n\t\t\t\t}),\n\t\t\t},\n\t\t)\n\t}\n\n\t// this is a new user, so let's get them onboarded\n\tconst verifySession = await verifySessionStorage.getSession()\n\tverifySession.set(onboardingEmailSessionKey, profile.email)\n\tverifySession.set(prefilledProfileKey, {\n\t\t...profile,\n\t\temail: normalizeEmail(profile.email),\n\t\tusername:\n\t\t\ttypeof profile.username === 'string'\n\t\t\t\t? normalizeUsername(profile.username)\n\t\t\t\t: undefined,\n\t})\n\tverifySession.set(providerIdKey, profile.id)\n\tconst onboardingRedirect = [\n\t\t`/onboarding/${providerName}`,\n\t\tredirectTo ? new URLSearchParams({ redirectTo }) : null,\n\t]\n\t\t.filter(Boolean)\n\t\t.join('?')\n\treturn redirect(onboardingRedirect, {\n\t\theaders: combineHeaders(\n\t\t\t{ 'set-cookie': await verifySessionStorage.commitSession(verifySession) },\n\t\t\tdestroyRedirectTo,\n\t\t),\n\t})\n}\n\nasync function makeSession(\n\t{\n\t\trequest,\n\t\tuserId,\n\t\tredirectTo,\n\t}: { request: Request; userId: string; redirectTo?: string | null },\n\tresponseInit?: ResponseInit,\n) {\n\tredirectTo ??= '/'\n\tconst session = await prisma.session.create({\n\t\tselect: { id: true, expirationDate: true, userId: true },\n\t\tdata: {\n\t\t\texpirationDate: getSessionExpirationDate(),\n\t\t\tuserId,\n\t\t},\n\t})\n\treturn handleNewSession(\n\t\t{ request, session, redirectTo, remember: true },\n\t\t{ headers: combineHeaders(responseInit?.headers, destroyRedirectTo) },\n\t)\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport * as E from '@react-email/components'\nimport {\n\tjson,\n\tredirect,\n\ttype ActionFunctionArgs,\n\ttype MetaFunction,\n} from '@remix-run/node'\nimport { Link, useFetcher } from '@remix-run/react'\nimport { HoneypotInputs } from 'remix-utils/honeypot/react'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { sendEmail } from '#app/utils/email.server.ts'\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts'\nimport { EmailSchema, UsernameSchema } from '#app/utils/user-validation.ts'\nimport { prepareVerification } from './verify.server.ts'\n\nconst ForgotPasswordSchema = z.object({\n\tusernameOrEmail: z.union([EmailSchema, UsernameSchema]),\n})\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst formData = await request.formData()\n\tcheckHoneypot(formData)\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: ForgotPasswordSchema.superRefine(async (data, ctx) => {\n\t\t\tconst user = await prisma.user.findFirst({\n\t\t\t\twhere: {\n\t\t\t\t\tOR: [\n\t\t\t\t\t\t{ email: data.usernameOrEmail },\n\t\t\t\t\t\t{ username: data.usernameOrEmail },\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tselect: { id: true },\n\t\t\t})\n\t\t\tif (!user) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['usernameOrEmail'],\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: 'No user exists with this username or email',\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}),\n\t\tasync: true,\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\tconst { usernameOrEmail } = submission.value\n\n\tconst user = await prisma.user.findFirstOrThrow({\n\t\twhere: { OR: [{ email: usernameOrEmail }, { username: usernameOrEmail }] },\n\t\tselect: { email: true, username: true },\n\t})\n\n\tconst { verifyUrl, redirectTo, otp } = await prepareVerification({\n\t\tperiod: 10 * 60,\n\t\trequest,\n\t\ttype: 'reset-password',\n\t\ttarget: usernameOrEmail,\n\t})\n\n\tconst response = await sendEmail({\n\t\tto: user.email,\n\t\tsubject: `Epic Notes Password Reset`,\n\t\treact: (\n\t\t\t<ForgotPasswordEmail onboardingUrl={verifyUrl.toString()} otp={otp} />\n\t\t),\n\t})\n\n\tif (response.status === 'success') {\n\t\treturn redirect(redirectTo.toString())\n\t} else {\n\t\treturn json(\n\t\t\t{ result: submission.reply({ formErrors: [response.error.message] }) },\n\t\t\t{ status: 500 },\n\t\t)\n\t}\n}\n\nfunction ForgotPasswordEmail({\n\tonboardingUrl,\n\totp,\n}: {\n\tonboardingUrl: string\n\totp: string\n}) {\n\treturn (\n\t\t<E.Html lang=\"en\" dir=\"ltr\">\n\t\t\t<E.Container>\n\t\t\t\t<h1>\n\t\t\t\t\t<E.Text>Epic Notes Password Reset</E.Text>\n\t\t\t\t</h1>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>\n\t\t\t\t\t\tHere's your verification code: <strong>{otp}</strong>\n\t\t\t\t\t</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>Or click the link:</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<E.Link href={onboardingUrl}>{onboardingUrl}</E.Link>\n\t\t\t</E.Container>\n\t\t</E.Html>\n\t)\n}\n\nexport const meta: MetaFunction = () => {\n\treturn [{ title: 'Password Recovery for Epic Notes' }]\n}\n\nexport default function ForgotPasswordRoute() {\n\tconst forgotPassword = useFetcher<typeof action>()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'forgot-password-form',\n\t\tconstraint: getZodConstraint(ForgotPasswordSchema),\n\t\tlastResult: forgotPassword.data?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ForgotPasswordSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"container pb-32 pt-20\">\n\t\t\t<div className=\"flex flex-col justify-center\">\n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t<h1 className=\"text-h1\">Forgot Password</h1>\n\t\t\t\t\t<p className=\"mt-3 text-body-md text-muted-foreground\">\n\t\t\t\t\t\tNo worries, we'll send you reset instructions.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mx-auto mt-16 min-w-full max-w-sm sm:min-w-[368px]\">\n\t\t\t\t\t<forgotPassword.Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\t\t\thtmlFor: fields.usernameOrEmail.id,\n\t\t\t\t\t\t\t\t\tchildren: 'Username or Email',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t\t\t\t...getInputProps(fields.usernameOrEmail, { type: 'text' }),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terrors={fields.usernameOrEmail.errors}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t\t\t\t<div className=\"mt-6\">\n\t\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\t\t\tforgotPassword.state === 'submitting'\n\t\t\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t\t\t: form.status ?? 'idle'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={forgotPassword.state !== 'idle'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRecover password\n\t\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</forgotPassword.Form>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto=\"/login\"\n\t\t\t\t\t\tclassName=\"mt-11 text-center text-body-sm font-bold\"\n\t\t\t\t\t>\n\t\t\t\t\t\tBack to Login\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport {\n\tjson,\n\ttype ActionFunctionArgs,\n\ttype LoaderFunctionArgs,\n\ttype MetaFunction,\n} from '@remix-run/node'\nimport { Form, Link, useActionData, useSearchParams } from '@remix-run/react'\nimport { HoneypotInputs } from 'remix-utils/honeypot/react'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { CheckboxField, ErrorList, Field } from '#app/components/forms.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { login, requireAnonymous } from '#app/utils/auth.server.ts'\nimport {\n\tProviderConnectionForm,\n\tproviderNames,\n} from '#app/utils/connections.tsx'\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { PasswordSchema, UsernameSchema } from '#app/utils/user-validation.ts'\nimport { handleNewSession } from './login.server.ts'\n\nconst LoginFormSchema = z.object({\n\tusername: UsernameSchema,\n\tpassword: PasswordSchema,\n\tredirectTo: z.string().optional(),\n\tremember: z.boolean().optional(),\n})\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tawait requireAnonymous(request)\n\treturn json({})\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tawait requireAnonymous(request)\n\tconst formData = await request.formData()\n\tcheckHoneypot(formData)\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: intent =>\n\t\t\tLoginFormSchema.transform(async (data, ctx) => {\n\t\t\t\tif (intent !== null) return { ...data, session: null }\n\n\t\t\t\tconst session = await login(data)\n\t\t\t\tif (!session) {\n\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\tmessage: 'Invalid username or password',\n\t\t\t\t\t})\n\t\t\t\t\treturn z.NEVER\n\t\t\t\t}\n\n\t\t\t\treturn { ...data, session }\n\t\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success' || !submission.value.session) {\n\t\treturn json(\n\t\t\t{ result: submission.reply({ hideFields: ['password'] }) },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { session, remember, redirectTo } = submission.value\n\n\treturn handleNewSession({\n\t\trequest,\n\t\tsession,\n\t\tremember: remember ?? false,\n\t\tredirectTo,\n\t})\n}\n\nexport default function LoginPage() {\n\tconst actionData = useActionData<typeof action>()\n\tconst isPending = useIsPending()\n\tconst [searchParams] = useSearchParams()\n\tconst redirectTo = searchParams.get('redirectTo')\n\n\tconst [form, fields] = useForm({\n\t\tid: 'login-form',\n\t\tconstraint: getZodConstraint(LoginFormSchema),\n\t\tdefaultValue: { redirectTo },\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: LoginFormSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"flex min-h-full flex-col justify-center pb-32 pt-20\">\n\t\t\t<div className=\"mx-auto w-full max-w-md\">\n\t\t\t\t<div className=\"flex flex-col gap-3 text-center\">\n\t\t\t\t\t<h1 className=\"text-h1\">Welcome back!</h1>\n\t\t\t\t\t<p className=\"text-body-md text-muted-foreground\">\n\t\t\t\t\t\tPlease enter your details.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<Spacer size=\"xs\" />\n\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"mx-auto w-full max-w-md px-8\">\n\t\t\t\t\t\t<Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tlabelProps={{ children: 'Username' }}\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t...getInputProps(fields.username, { type: 'text' }),\n\t\t\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t\t\t\tclassName: 'lowercase',\n\t\t\t\t\t\t\t\t\tautoComplete: 'username',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terrors={fields.username.errors}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tlabelProps={{ children: 'Password' }}\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t...getInputProps(fields.password, {\n\t\t\t\t\t\t\t\t\t\ttype: 'password',\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tautoComplete: 'current-password',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terrors={fields.password.errors}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<div className=\"flex justify-between\">\n\t\t\t\t\t\t\t\t<CheckboxField\n\t\t\t\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\t\t\t\thtmlFor: fields.remember.id,\n\t\t\t\t\t\t\t\t\t\tchildren: 'Remember me',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tbuttonProps={getInputProps(fields.remember, {\n\t\t\t\t\t\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\terrors={fields.remember.errors}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tto=\"/forgot-password\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"text-body-xs font-semibold\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t{...getInputProps(fields.redirectTo, { type: 'hidden' })}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t\t\t\t\t<div className=\"flex items-center justify-between gap-6 pt-3\">\n\t\t\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\t\t\tstatus={isPending ? 'pending' : form.status ?? 'idle'}\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tLog in\n\t\t\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t<ul className=\"mt-5 flex flex-col gap-5 border-b-2 border-t-2 border-border py-3\">\n\t\t\t\t\t\t\t{providerNames.map(providerName => (\n\t\t\t\t\t\t\t\t<li key={providerName}>\n\t\t\t\t\t\t\t\t\t<ProviderConnectionForm\n\t\t\t\t\t\t\t\t\t\ttype=\"Login\"\n\t\t\t\t\t\t\t\t\t\tproviderName={providerName}\n\t\t\t\t\t\t\t\t\t\tredirectTo={redirectTo}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<div className=\"flex items-center justify-center gap-2 pt-6\">\n\t\t\t\t\t\t\t<span className=\"text-muted-foreground\">New here?</span>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tto={\n\t\t\t\t\t\t\t\t\tredirectTo\n\t\t\t\t\t\t\t\t\t\t? `/signup?${encodeURIComponent(redirectTo)}`\n\t\t\t\t\t\t\t\t\t\t: '/signup'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCreate an account\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport const meta: MetaFunction = () => {\n\treturn [{ title: 'Login to Epic Notes' }]\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n","import { redirect, type ActionFunctionArgs } from '@remix-run/node'\nimport { logout } from '#app/utils/auth.server.ts'\n\nexport async function loader() {\n\treturn redirect('/')\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\treturn logout({ request })\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport * as E from '@react-email/components'\nimport {\n\tjson,\n\tredirect,\n\ttype ActionFunctionArgs,\n\ttype MetaFunction,\n} from '@remix-run/node'\nimport { Form, useActionData, useSearchParams } from '@remix-run/react'\nimport { HoneypotInputs } from 'remix-utils/honeypot/react'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport {\n\tProviderConnectionForm,\n\tproviderNames,\n} from '#app/utils/connections.tsx'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { sendEmail } from '#app/utils/email.server.ts'\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { EmailSchema } from '#app/utils/user-validation.ts'\nimport { prepareVerification } from './verify.server.ts'\n\nconst SignupSchema = z.object({\n\temail: EmailSchema,\n})\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst formData = await request.formData()\n\n\tcheckHoneypot(formData)\n\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: SignupSchema.superRefine(async (data, ctx) => {\n\t\t\tconst existingUser = await prisma.user.findUnique({\n\t\t\t\twhere: { email: data.email },\n\t\t\t\tselect: { id: true },\n\t\t\t})\n\t\t\tif (existingUser) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['email'],\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: 'A user already exists with this email',\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}),\n\t\tasync: true,\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\tconst { email } = submission.value\n\tconst { verifyUrl, redirectTo, otp } = await prepareVerification({\n\t\tperiod: 10 * 60,\n\t\trequest,\n\t\ttype: 'onboarding',\n\t\ttarget: email,\n\t})\n\n\tconst response = await sendEmail({\n\t\tto: email,\n\t\tsubject: `Welcome to Epic Notes!`,\n\t\treact: <SignupEmail onboardingUrl={verifyUrl.toString()} otp={otp} />,\n\t})\n\n\tif (response.status === 'success') {\n\t\treturn redirect(redirectTo.toString())\n\t} else {\n\t\treturn json(\n\t\t\t{\n\t\t\t\tresult: submission.reply({ formErrors: [response.error.message] }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tstatus: 500,\n\t\t\t},\n\t\t)\n\t}\n}\n\nexport function SignupEmail({\n\tonboardingUrl,\n\totp,\n}: {\n\tonboardingUrl: string\n\totp: string\n}) {\n\treturn (\n\t\t<E.Html lang=\"en\" dir=\"ltr\">\n\t\t\t<E.Container>\n\t\t\t\t<h1>\n\t\t\t\t\t<E.Text>Welcome to Epic Notes!</E.Text>\n\t\t\t\t</h1>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>\n\t\t\t\t\t\tHere's your verification code: <strong>{otp}</strong>\n\t\t\t\t\t</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>Or click the link to get started:</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<E.Link href={onboardingUrl}>{onboardingUrl}</E.Link>\n\t\t\t</E.Container>\n\t\t</E.Html>\n\t)\n}\n\nexport const meta: MetaFunction = () => {\n\treturn [{ title: 'Sign Up | Epic Notes' }]\n}\n\nexport default function SignupRoute() {\n\tconst actionData = useActionData<typeof action>()\n\tconst isPending = useIsPending()\n\tconst [searchParams] = useSearchParams()\n\tconst redirectTo = searchParams.get('redirectTo')\n\n\tconst [form, fields] = useForm({\n\t\tid: 'signup-form',\n\t\tconstraint: getZodConstraint(SignupSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\tconst result = parseWithZod(formData, { schema: SignupSchema })\n\t\t\treturn result\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"container flex flex-col justify-center pb-32 pt-20\">\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<h1 className=\"text-h1\">Let's start your journey!</h1>\n\t\t\t\t<p className=\"mt-3 text-body-md text-muted-foreground\">\n\t\t\t\t\tPlease enter your email.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"mx-auto mt-16 min-w-full max-w-sm sm:min-w-[368px]\">\n\t\t\t\t<Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.email.id,\n\t\t\t\t\t\t\tchildren: 'Email',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.email, { type: 'email' }),\n\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t\tautoComplete: 'email',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.email.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\t\t\t\t\t<StatusButton\n\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\tstatus={isPending ? 'pending' : form.status ?? 'idle'}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</StatusButton>\n\t\t\t\t</Form>\n\t\t\t\t<ul className=\"mt-5 flex flex-col gap-5 border-b-2 border-t-2 border-border py-3\">\n\t\t\t\t\t{providerNames.map(providerName => (\n\t\t\t\t\t\t<li key={providerName}>\n\t\t\t\t\t\t\t<ProviderConnectionForm\n\t\t\t\t\t\t\t\ttype=\"Signup\"\n\t\t\t\t\t\t\t\tproviderName={providerName}\n\t\t\t\t\t\t\t\tredirectTo={redirectTo}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n","export default function AboutRoute() {\n\treturn <div>About page</div>\n}\n","export default \"__VITE_ASSET__Q2a1JfT7__\"","export default \"data:image/svg+xml,%3c?xml%20version='1.0'%20encoding='utf-8'?%3e%3c!--%20Generator:%20Adobe%20Illustrator%2015.1.0,%20SVG%20Export%20Plug-In%20.%20SVG%20Version:%206.00%20Build%200)%20--%3e%3c!DOCTYPE%20svg%20PUBLIC%20'-//W3C//DTD%20SVG%201.1//EN'%20'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3e%3csvg%20version='1.1'%20id='Layer_1'%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20viewBox='0%200%20294.825%20258.982'%20xml:space='preserve'%3e%3cg%3e%3cpath%20fill='%238080F2'%20d='M97.021,99.016l48.432-27.962c1.212-0.7,2.706-0.7,3.918,0l48.433,27.962%20c1.211,0.7,1.959,1.993,1.959,3.393v55.924c0,1.399-0.748,2.693-1.959,3.394l-48.433,27.962c-1.212,0.7-2.706,0.7-3.918,0%20l-48.432-27.962c-1.212-0.7-1.959-1.994-1.959-3.394v-55.924C95.063,101.009,95.81,99.716,97.021,99.016'/%3e%3cpath%20fill='%234B32C3'%20d='M273.336,124.488L215.469,23.816c-2.102-3.64-5.985-6.325-10.188-6.325H89.545%20c-4.204,0-8.088,2.685-10.19,6.325l-57.867,100.45c-2.102,3.641-2.102,8.236,0,11.877l57.867,99.847%20c2.102,3.64,5.986,5.501,10.19,5.501h115.735c4.203,0,8.087-1.805,10.188-5.446l57.867-100.01%20C275.439,132.396,275.439,128.128,273.336,124.488%20M225.419,172.898c0,1.48-0.891,2.849-2.174,3.59l-73.71,42.527%20c-1.282,0.74-2.888,0.74-4.17,0l-73.767-42.527c-1.282-0.741-2.179-2.109-2.179-3.59V87.843c0-1.481,0.884-2.849,2.167-3.59%20l73.707-42.527c1.282-0.741,2.886-0.741,4.168,0l73.772,42.527c1.283,0.741,2.186,2.109,2.186,3.59V172.898z'/%3e%3c/g%3e%3c/svg%3e\"","export default \"__VITE_ASSET__yoDGwirA__\"","export default \"__VITE_ASSET__2JQ90qDL__\"","export default \"data:image/svg+xml,%3csvg%20width='98'%20height='96'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M48.854%200C21.839%200%200%2022%200%2049.217c0%2021.756%2013.993%2040.172%2033.405%2046.69%202.427.49%203.316-1.059%203.316-2.362%200-1.141-.08-5.052-.08-9.127-13.59%202.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015%204.934.326%207.523%205.052%207.523%205.052%204.367%207.496%2011.404%205.378%2014.235%204.074.404-3.178%201.699-5.378%203.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283%200-5.378%201.94-9.778%205.014-13.2-.485-1.222-2.184-6.275.486-13.038%200%200%204.125-1.304%2013.426%205.052a46.97%2046.97%200%200%201%2012.214-1.63c4.125%200%208.33.571%2012.213%201.63%209.302-6.356%2013.427-5.052%2013.427-5.052%202.67%206.763.97%2011.816.485%2013.038%203.155%203.422%205.015%207.822%205.015%2013.2%200%2018.905-11.404%2023.06-22.324%2024.283%201.78%201.548%203.316%204.481%203.316%209.126%200%206.6-.08%2011.897-.08%2013.526%200%201.304.89%202.853%203.316%202.364%2019.412-6.52%2033.405-24.935%2033.405-46.691C97.707%2022%2075.788%200%2048.854%200z'%20fill='%2324292f'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3c?xml%20version='1.0'%20encoding='UTF-8'?%3e%3csvg%20width='128px'%20height='128px'%20viewBox='0%200%20128%20128'%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3ctitle%3eLOGO%3c/title%3e%3cg%20id='LOGO'%20stroke='none'%20stroke-width='1'%20fill='none'%20fill-rule='evenodd'%3e%3crect%20id='Rectangle'%20fill='%23000000'%20x='0'%20y='0'%20width='128'%20height='128'%20rx='24'%3e%3c/rect%3e%3cg%20id='logo'%20transform='translate(-27.172013,%20-27.850148)'%20stroke-width='17.85'%3e%3cg%20id='Group'%20transform='translate(91.172013,%2091.850148)%20rotate(-42.000000)%20translate(-91.172013,%20-91.850148)%20translate(30.956217,%2022.472129)'%3e%3cpath%20d='M63.77676,39.8567809%20C66.7201615,39.8567809%2069.3849115,41.0498301%2071.3138112,42.9787297%20C73.2427108,44.9076293%2074.43576,47.5723793%2074.43576,50.5157809%20C74.43576,53.1536096%2073.4576536,55.6977418%2071.690581,57.6562093%20L40.9074742,91.7734893%20C40.2942428,92.4531409%2039.4635827,92.8198888%2038.6163176,92.863416%20C37.7690524,92.9069431%2036.9051822,92.6272495%2036.2255306,92.0140181%20L5.20189513,57.6562093%20C3.23012026,55.470868%202.33079774,52.693193%202.47075426,49.9689097%20C2.61071079,47.2446264%203.78994636,44.5737347%205.97528769,42.6019599%20C7.93375514,40.8348872%2010.4778874,39.8567809%2013.1157161,39.8567809%20Z'%20id='back'%20stroke='%23FF3333'%20opacity='0.48'%20transform='translate(38.446238,%2069.378019)%20rotate(90.000000)%20translate(-38.446238,%20-69.378019)%20'%3e%3c/path%3e%3cpath%20d='M123.833688,39.8567809%20C124.7491,39.8567809%20125.57785,40.2278249%20126.177747,40.8277219%20C126.777644,41.4276189%20127.148688,42.2563689%20127.148688,43.1717809%20C127.148688,43.9921582%20126.844492,44.7833955%20126.294924,45.3924883%20L84.4465906,91.7734893%20C83.8333592,92.4531409%2083.0026991,92.8198888%2082.1554339,92.863416%20C81.3081688,92.9069431%2080.4442986,92.6272495%2079.764647,92.0140181%20L37.6757849,45.3924883%20C37.0625535,44.7128367%2036.7828599,43.8489665%2036.826387,43.0017013%20C36.8699142,42.1544362%2037.2366621,41.3237761%2037.9163137,40.7105447%20C38.5254064,40.1609766%2039.3166437,39.8567809%2040.1370211,39.8567809%20Z'%20id='front'%20stroke='%23FF6A33'%20transform='translate(81.985354,%2069.378019)%20rotate(-90.000000)%20translate(-81.985354,%20-69.378019)%20'%3e%3c/path%3e%3c/g%3e%3c/g%3e%3c/g%3e%3c/svg%3e\"","export default \"__VITE_ASSET__DSPjnI_X__\"","export default \"__VITE_ASSET__UhKH8YsL__\"","export default \"__VITE_ASSET__GbOWJe85__\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='250'%20height='250'%20viewBox='0%200%2025%2025'%20fill='none'%20style='margin-right:3px'%3e%3cpath%20d='M12%2025C7.58173%2025%204%2021.4183%204%2017C4%2012.5817%207.58173%209%2012%209V25Z'%20fill='currentcolor'%3e%3c/path%3e%3cpath%20d='M12%200H4V8H12V0Z'%20fill='currentcolor'%3e%3c/path%3e%3cpath%20d='M17%208C19.2091%208%2021%206.20914%2021%204C21%201.79086%2019.2091%200%2017%200C14.7909%200%2013%201.79086%2013%204C13%206.20914%2014.7909%208%2017%208Z'%20fill='currentcolor'%3e%3c/path%3e%3c/svg%3e\"","export default \"__VITE_ASSET__BQ4k4JSF__\"","export default \"data:image/svg+xml,%3csvg%20width='800'%20height='800'%20viewBox='0%200%20800%20800'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3crect%20width='800'%20height='800'%20fill='%23212121'/%3e%3cg%20filter='url(%23filter0_dd_126_53)'%3e%3cpath%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M587.947%20527.768C592.201%20582.418%20592.201%20608.036%20592.201%20636H465.756C465.756%20629.909%20465.865%20624.337%20465.975%20618.687C466.317%20601.123%20466.674%20582.807%20463.828%20545.819C460.067%20491.667%20436.748%20479.634%20393.871%20479.634H355.883H195V381.109H399.889C454.049%20381.109%20481.13%20364.633%20481.13%20321.011C481.13%20282.654%20454.049%20259.41%20399.889%20259.41H195V163H422.456C545.069%20163%20606%20220.912%20606%20313.42C606%20382.613%20563.123%20427.739%20505.201%20435.26C554.096%20445.037%20582.681%20472.865%20587.947%20527.768Z'%20fill='%23E8F2FF'/%3e%3cpath%20d='M195%20636V562.553H328.697C351.029%20562.553%20355.878%20579.116%20355.878%20588.994V636H195Z'%20fill='%23E8F2FF'/%3e%3c/g%3e%3cdefs%3e%3cfilter%20id='filter0_dd_126_53'%20x='131'%20y='99'%20width='539'%20height='601'%20filterUnits='userSpaceOnUse'%20color-interpolation-filters='sRGB'%3e%3cfeFlood%20flood-opacity='0'%20result='BackgroundImageFix'/%3e%3cfeColorMatrix%20in='SourceAlpha'%20type='matrix'%20values='0%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%20127%200'%20result='hardAlpha'/%3e%3cfeOffset/%3e%3cfeGaussianBlur%20stdDeviation='28'/%3e%3cfeComposite%20in2='hardAlpha'%20operator='out'/%3e%3cfeColorMatrix%20type='matrix'%20values='0%200%200%200%200.223529%200%200%200%200%200.572549%200%200%200%200%201%200%200%200%201%200'/%3e%3cfeBlend%20mode='normal'%20in2='BackgroundImageFix'%20result='effect1_dropShadow_126_53'/%3e%3cfeColorMatrix%20in='SourceAlpha'%20type='matrix'%20values='0%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%20127%200'%20result='hardAlpha'/%3e%3cfeOffset/%3e%3cfeGaussianBlur%20stdDeviation='32'/%3e%3cfeComposite%20in2='hardAlpha'%20operator='out'/%3e%3cfeColorMatrix%20type='matrix'%20values='0%200%200%200%200.223529%200%200%200%200%200.572549%200%200%200%200%201%200%200%200%200.9%200'/%3e%3cfeBlend%20mode='normal'%20in2='effect1_dropShadow_126_53'%20result='effect2_dropShadow_126_53'/%3e%3cfeBlend%20mode='normal'%20in='SourceGraphic'%20in2='effect2_dropShadow_126_53'%20result='shape'/%3e%3c/filter%3e%3c/defs%3e%3c/svg%3e\"","export default \"__VITE_ASSET__BmZrEPSC__\"","export default \"data:image/svg+xml,%3csvg%20class='css-lfbo6j%20e10nushx4'%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20222%2066'%20width='400'%20height='119'%3e%3cpath%20d='M29,2.26a4.67,4.67,0,0,0-8,0L14.42,13.53A32.21,32.21,0,0,1,32.17,40.19H27.55A27.68,27.68,0,0,0,12.09,17.47L6,28a15.92,15.92,0,0,1,9.23,12.17H4.62A.76.76,0,0,1,4,39.06l2.94-5a10.74,10.74,0,0,0-3.36-1.9l-2.91,5a4.54,4.54,0,0,0,1.69,6.24A4.66,4.66,0,0,0,4.62,44H19.15a19.4,19.4,0,0,0-8-17.31l2.31-4A23.87,23.87,0,0,1,23.76,44H36.07a35.88,35.88,0,0,0-16.41-31.8l4.67-8a.77.77,0,0,1,1.05-.27c.53.29,20.29,34.77,20.66,35.17a.76.76,0,0,1-.68,1.13H40.6q.09,1.91,0,3.81h4.78A4.59,4.59,0,0,0,50,39.43a4.49,4.49,0,0,0-.62-2.28Z%20M124.32,28.28,109.56,9.22h-3.68V34.77h3.73V15.19l15.18,19.58h3.26V9.22h-3.73ZM87.15,23.54h13.23V20.22H87.14V12.53h14.93V9.21H83.34V34.77h18.92V31.45H87.14ZM71.59,20.3h0C66.44,19.06,65,18.08,65,15.7c0-2.14,1.89-3.59,4.71-3.59a12.06,12.06,0,0,1,7.07,2.55l2-2.83a14.1,14.1,0,0,0-9-3c-5.06,0-8.59,3-8.59,7.27,0,4.6,3,6.19,8.46,7.52C74.51,24.74,76,25.78,76,28.11s-2,3.77-5.09,3.77a12.34,12.34,0,0,1-8.3-3.26l-2.25,2.69a15.94,15.94,0,0,0,10.42,3.85c5.48,0,9-2.95,9-7.51C79.75,23.79,77.47,21.72,71.59,20.3ZM195.7,9.22l-7.69,12-7.64-12h-4.46L186,24.67V34.78h3.84V24.55L200,9.22Zm-64.63,3.46h8.37v22.1h3.84V12.68h8.37V9.22H131.08ZM169.41,24.8c3.86-1.07,6-3.77,6-7.63,0-4.91-3.59-8-9.38-8H154.67V34.76h3.8V25.58h6.45l6.48,9.2h4.44l-7-9.82Zm-10.95-2.5V12.6h7.17c3.74,0,5.88,1.77,5.88,4.84s-2.29,4.86-5.84,4.86Z'%20transform='translate(11,%2011)'%20fill='%23362d59'%3e%3c/path%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20256%20256'%3e%3crect%20width='256'%20height='256'%20fill='none'%3e%3c/rect%3e%3cline%20x1='208'%20y1='128'%20x2='128'%20y2='208'%20fill='none'%20stroke='currentColor'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='16'%3e%3c/line%3e%3cline%20x1='192'%20y1='40'%20x2='40'%20y2='192'%20fill='none'%20stroke='currentColor'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='16'%3e%3c/line%3e%3c/svg%3e\"","export default \"__VITE_ASSET__C3SenuCW__\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2054%2033'%3e%3cg%20clip-path='url(%23prefix__clip0)'%3e%3cpath%20fill='%2338bdf8'%20fill-rule='evenodd'%20d='M27%200c-7.2%200-11.7%203.6-13.5%2010.8%202.7-3.6%205.85-4.95%209.45-4.05%202.054.513%203.522%202.004%205.147%203.653C30.744%2013.09%2033.808%2016.2%2040.5%2016.2c7.2%200%2011.7-3.6%2013.5-10.8-2.7%203.6-5.85%204.95-9.45%204.05-2.054-.513-3.522-2.004-5.147-3.653C36.756%203.11%2033.692%200%2027%200zM13.5%2016.2C6.3%2016.2%201.8%2019.8%200%2027c2.7-3.6%205.85-4.95%209.45-4.05%202.054.514%203.522%202.004%205.147%203.653C17.244%2029.29%2020.308%2032.4%2027%2032.4c7.2%200%2011.7-3.6%2013.5-10.8-2.7%203.6-5.85%204.95-9.45%204.05-2.054-.513-3.522-2.004-5.147-3.653C23.256%2019.31%2020.192%2016.2%2013.5%2016.2z'%20clip-rule='evenodd'/%3e%3c/g%3e%3cdefs%3e%3cclipPath%20id='prefix__clip0'%3e%3cpath%20fill='%23fff'%20d='M0%200h54v32.4H0z'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e\"","export default \"__VITE_ASSET__gIEtGA3$__\"","export default \"data:image/svg+xml,%3c?xml%20version='1.0'%20encoding='UTF-8'?%3e%3csvg%20width='512'%20height='512'%20fill='none'%20version='1.1'%20viewBox='0%200%20512%20512'%20xmlns='http://www.w3.org/2000/svg'%20xmlns:cc='http://creativecommons.org/ns%23'%20xmlns:dc='http://purl.org/dc/elements/1.1/'%20xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns%23'%3e%3ctitle%3eTypeScript%20logo%3c/title%3e%3crect%20width='512'%20height='512'%20rx='50'%20fill='%233178c6'/%3e%3cpath%20d='m317%20407v50c8.1%204.2%2018%207.3%2029%209.4s23%203.1%2035%203.1c12%200%2023-1.1%2034-3.4%2011-2.3%2020-6.1%2028-11%208.1-5.3%2015-12%2019-21s7.1-19%207.1-32c0-9.1-1.4-17-4.1-24s-6.6-13-12-18c-5.1-5.3-11-10-18-14s-15-8.2-24-12c-6.6-2.7-12-5.3-18-7.9-5.2-2.6-9.7-5.2-13-7.8-3.7-2.7-6.5-5.5-8.5-8.4-2-3-3-6.3-3-10%200-3.4%200.89-6.5%202.7-9.3s4.3-5.1%207.5-7.1c3.2-2%207.2-3.5%2012-4.6%204.7-1.1%209.9-1.6%2016-1.6%204.2%200%208.6%200.31%2013%200.94%204.6%200.63%209.3%201.6%2014%202.9%204.7%201.3%209.3%202.9%2014%204.9%204.4%202%208.5%204.3%2012%206.9v-47c-7.6-2.9-16-5.1-25-6.5s-19-2.1-31-2.1c-12%200-23%201.3-34%203.8s-20%206.5-28%2012c-8.1%205.4-14%2012-19%2021-4.7%208.4-7%2018-7%2030%200%2015%204.3%2028%2013%2038%208.6%2011%2022%2019%2039%2027%206.9%202.8%2013%205.6%2019%208.3s11%205.5%2015%208.4c4.3%202.9%207.7%206.1%2010%209.5%202.5%203.4%203.8%207.4%203.8%2012%200%203.2-0.78%206.2-2.3%209s-3.9%205.2-7.1%207.2-7.1%203.6-12%204.8c-4.7%201.1-10%201.7-17%201.7-11%200-22-1.9-32-5.7-11-3.8-21-9.5-30-17zm-84-123h64v-41h-179v41h64v183h51z'%20clip-rule='evenodd'%20fill='%23fff'%20fill-rule='evenodd'%20style='fill:%23fff'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20width='165'%20height='165'%20viewBox='0%200%20165%20165'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M120.831%2057.2543L84.693%20109.505C84.3099%20110.059%2083.7558%20110.474%2083.1148%20110.687C82.4738%20110.9%2081.7809%20110.898%2081.1412%20110.684C80.5015%20110.469%2079.95%20110.052%2079.5702%20109.497C79.1905%20108.941%2079.0032%20108.277%2079.037%20107.606L80.4833%2078.7582L57.1343%2073.8064C56.6353%2073.7007%2056.1704%2073.474%2055.7807%2073.1465C55.391%2072.8191%2055.0885%2072.4009%2054.9001%2071.929C54.7117%2071.4571%2054.6432%2070.9461%2054.7006%2070.4412C54.758%2069.9364%2054.9395%2069.4532%2055.2291%2069.0345L91.3675%2016.7837C91.7507%2016.2294%2092.3048%2015.8145%2092.9458%2015.6018C93.5869%2015.3891%2094.2798%2015.3902%2094.9196%2015.6051C95.5593%2015.8199%2096.1109%2016.2367%2096.4906%2016.7923C96.8703%2017.3478%2097.0575%2018.0117%2097.0236%2018.6833L95.5773%2047.5314L118.926%2052.4828C119.425%2052.5885%20119.89%2052.8152%20120.28%2053.1426C120.67%2053.4701%20120.972%2053.8883%20121.16%2054.3602C121.349%2054.8321%20121.417%2055.3431%20121.36%2055.8479C121.303%2056.3528%20121.121%2056.836%20120.831%2057.2547L120.831%2057.2543Z'%20fill='%23FCC72B'/%3e%3cpath%20d='M82.9866%20153.343C82.0254%20153.344%2081.0735%20153.156%2080.1855%20152.788C79.2975%20152.42%2078.4909%20151.88%2077.8122%20151.2L43.6658%20117.056C42.2998%20115.683%2041.5341%20113.824%2041.5366%20111.887C41.5392%20109.95%2042.3098%20108.092%2043.6796%20106.723C45.0493%20105.353%2046.9064%20104.582%2048.8435%20104.579C50.7807%20104.577%2052.6399%20105.342%2054.0134%20106.708L82.9866%20135.678L146.105%2072.5626C147.481%2071.2088%20149.336%2070.4536%20151.266%2070.4615C153.197%2070.4693%20155.046%2071.2396%20156.41%2072.6045C157.775%2073.9695%20158.546%2075.8184%20158.554%2077.7487C158.561%2079.679%20157.806%2081.5342%20156.452%2082.9101L88.1597%20151.2C87.4811%20151.881%2086.6747%20152.42%2085.7869%20152.788C84.8992%20153.156%2083.9475%20153.344%2082.9866%20153.343Z'%20fill='%23729B1B'/%3e%3cpath%20d='M82.9572%20153.343C83.9184%20153.344%2084.8703%20153.156%2085.7583%20152.788C86.6463%20152.42%2087.4528%20151.88%2088.1316%20151.2L122.278%20117.056C123.644%20115.683%20124.41%20113.824%20124.407%20111.887C124.405%20109.95%20123.634%20108.092%20122.264%20106.723C120.894%20105.353%20119.037%20104.582%20117.1%20104.579C115.163%20104.577%20113.304%20105.342%20111.93%20106.708L82.9572%20135.678L19.8389%2072.5626C18.4629%2071.2088%2016.6077%2070.4536%2014.6775%2070.4615C12.7472%2070.4693%2010.8982%2071.2396%209.53331%2072.6045C8.16839%2073.9695%207.39811%2075.8184%207.39025%2077.7487C7.38239%2079.679%208.13759%2081.5342%209.49135%2082.9101L77.784%20151.2C78.4627%20151.881%2079.2691%20152.42%2080.1568%20152.788C81.0446%20153.156%2081.9963%20153.344%2082.9572%20153.343Z'%20fill='%23729B1B'%20fill-opacity='0.5'/%3e%3c/svg%3e\"","export default \"__VITE_ASSET__DTiGmrs$__\"","import docker from './docker.svg'\nimport eslint from './eslint.svg'\nimport fakerJS from './faker.svg'\nimport fly from './fly.svg'\nimport github from './github.svg'\nimport msw from './msw.svg'\nimport playwright from './playwright.svg'\nimport prettier from './prettier.svg'\nimport prisma from './prisma.svg'\nimport radixUI from './radix.svg'\nimport reactEmail from './react-email.svg'\nimport remix from './remix.svg'\nimport resend from './resend.svg'\nimport sentry from './sentry.svg'\nimport shadcnUI from './shadcn-ui.svg'\nimport sqlite from './sqlite.svg'\nimport tailwind from './tailwind.svg'\nimport testingLibrary from './testing-library.png'\nimport typescript from './typescript.svg'\nimport vitest from './vitest.svg'\nimport zod from './zod.svg'\n\nexport { default as stars } from './stars.jpg'\n\nexport const logos = [\n\t{\n\t\tsrc: remix,\n\t\talt: 'Remix',\n\t\thref: 'https://remix.run',\n\t\tcolumn: 1,\n\t\trow: 1,\n\t},\n\t{\n\t\tsrc: fly,\n\t\talt: 'Fly.io',\n\t\thref: 'https://fly.io',\n\t\tcolumn: 1,\n\t\trow: 2,\n\t},\n\t{\n\t\tsrc: sqlite,\n\t\talt: 'SQLite',\n\t\thref: 'https://sqlite.org',\n\t\tcolumn: 1,\n\t\trow: 3,\n\t},\n\t{\n\t\tsrc: prisma,\n\t\talt: 'Prisma',\n\t\thref: 'https://prisma.io',\n\t\tcolumn: 2,\n\t\trow: 2,\n\t},\n\t{\n\t\tsrc: zod,\n\t\talt: 'Zod',\n\t\thref: 'https://zod.dev/',\n\t\tcolumn: 2,\n\t\trow: 3,\n\t},\n\t{\n\t\tsrc: github,\n\t\talt: 'GitHub',\n\t\thref: 'https://github.com',\n\t\tcolumn: 2,\n\t\trow: 4,\n\t},\n\t{\n\t\tsrc: resend,\n\t\talt: 'Resend',\n\t\thref: 'https://resend.com',\n\t\tcolumn: 2,\n\t\trow: 5,\n\t},\n\t{\n\t\tsrc: reactEmail,\n\t\talt: 'React Email',\n\t\thref: 'https://react.email',\n\t\tcolumn: 2,\n\t\trow: 6,\n\t},\n\t{\n\t\tsrc: tailwind,\n\t\talt: 'Tailwind CSS',\n\t\thref: 'https://tailwindcss.com',\n\t\tcolumn: 3,\n\t\trow: 3,\n\t},\n\t{\n\t\tsrc: radixUI,\n\t\talt: 'Radix UI',\n\t\thref: 'https://www.radix-ui.com/',\n\t\tcolumn: 3,\n\t\trow: 4,\n\t},\n\t{\n\t\tsrc: shadcnUI,\n\t\talt: 'shadcn/ui',\n\t\thref: 'https://ui.shadcn.com/',\n\t\tcolumn: 3,\n\t\trow: 5,\n\t},\n\t{\n\t\tsrc: playwright,\n\t\talt: 'Playwright',\n\t\thref: 'https://playwright.dev/',\n\t\tcolumn: 4,\n\t\trow: 1,\n\t},\n\t{\n\t\tsrc: msw,\n\t\talt: 'MSW',\n\t\thref: 'https://mswjs.io',\n\t\tcolumn: 4,\n\t\trow: 2,\n\t},\n\t{\n\t\tsrc: fakerJS,\n\t\talt: 'Faker.js',\n\t\thref: 'https://fakerjs.dev/',\n\t\tcolumn: 4,\n\t\trow: 3,\n\t},\n\t{\n\t\tsrc: vitest,\n\t\talt: 'Vitest',\n\t\thref: 'https://vitest.dev',\n\t\tcolumn: 4,\n\t\trow: 4,\n\t},\n\t{\n\t\tsrc: testingLibrary,\n\t\talt: 'Testing Library',\n\t\thref: 'https://testing-library.com',\n\t\tcolumn: 4,\n\t\trow: 5,\n\t},\n\t{\n\t\tsrc: docker,\n\t\talt: 'Docker',\n\t\thref: 'https://www.docker.com',\n\t\tcolumn: 4,\n\t\trow: 6,\n\t},\n\t{\n\t\tsrc: typescript,\n\t\talt: 'TypeScript',\n\t\thref: 'https://typescriptlang.org',\n\t\tcolumn: 5,\n\t\trow: 2,\n\t},\n\t{\n\t\tsrc: prettier,\n\t\talt: 'Prettier',\n\t\thref: 'https://prettier.io',\n\t\tcolumn: 5,\n\t\trow: 3,\n\t},\n\t{\n\t\tsrc: eslint,\n\t\talt: 'ESLint',\n\t\thref: 'https://eslint.org',\n\t\tcolumn: 5,\n\t\trow: 4,\n\t},\n\t{\n\t\tsrc: sentry,\n\t\talt: 'Sentry',\n\t\thref: 'https://sentry.io',\n\t\tcolumn: 5,\n\t\trow: 5,\n\t},\n]\n","import { type MetaFunction } from '@remix-run/node'\nimport {\n\tTooltip,\n\tTooltipContent,\n\tTooltipProvider,\n\tTooltipTrigger,\n} from '#app/components/ui/tooltip.tsx'\nimport { cn } from '#app/utils/misc.tsx'\nimport { logos } from './logos/logos.ts'\n\nexport const meta: MetaFunction = () => [{ title: 'Epic Notes' }]\n\n// Tailwind Grid cell classes lookup\nconst columnClasses: Record<(typeof logos)[number]['column'], string> = {\n\t1: 'xl:col-start-1',\n\t2: 'xl:col-start-2',\n\t3: 'xl:col-start-3',\n\t4: 'xl:col-start-4',\n\t5: 'xl:col-start-5',\n}\nconst rowClasses: Record<(typeof logos)[number]['row'], string> = {\n\t1: 'xl:row-start-1',\n\t2: 'xl:row-start-2',\n\t3: 'xl:row-start-3',\n\t4: 'xl:row-start-4',\n\t5: 'xl:row-start-5',\n\t6: 'xl:row-start-6',\n}\n\nexport default function Index() {\n\treturn (\n\t\t<main className=\"font-poppins grid h-full place-items-center\">\n\t\t\t<div className=\"grid place-items-center px-4 py-16 xl:grid-cols-2 xl:gap-24\">\n\t\t\t\t<div className=\"flex max-w-md flex-col items-center text-center xl:order-2 xl:items-start xl:text-left\">\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://www.epicweb.dev/stack\"\n\t\t\t\t\t\tclassName=\"animate-slide-top [animation-fill-mode:backwards] xl:animate-slide-left xl:[animation-delay:0.5s] xl:[animation-fill-mode:backwards]\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\tclassName=\"size-20 text-foreground xl:-mt-4\"\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tviewBox=\"0 0 65 65\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\td=\"M39.445 25.555 37 17.163 65 0 47.821 28l-8.376-2.445Zm-13.89 0L28 17.163 0 0l17.179 28 8.376-2.445Zm13.89 13.89L37 47.837 65 65 47.821 37l-8.376 2.445Zm-13.89 0L28 47.837 0 65l17.179-28 8.376 2.445Z\"\n\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<h1\n\t\t\t\t\t\tdata-heading\n\t\t\t\t\t\tclassName=\"mt-8 animate-slide-top text-4xl font-medium text-foreground [animation-delay:0.3s] [animation-fill-mode:backwards] md:text-5xl xl:mt-4 xl:animate-slide-left xl:text-6xl xl:[animation-delay:0.8s] xl:[animation-fill-mode:backwards]\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<a href=\"https://www.epicweb.dev/stack\">The Epic Stack</a>\n\t\t\t\t\t</h1>\n\t\t\t\t\t<p\n\t\t\t\t\t\tdata-paragraph\n\t\t\t\t\t\tclassName=\"mt-6 animate-slide-top text-xl/7 text-muted-foreground [animation-delay:0.8s] [animation-fill-mode:backwards] xl:mt-8 xl:animate-slide-left xl:text-xl/6 xl:leading-10 xl:[animation-delay:1s] xl:[animation-fill-mode:backwards]\"\n\t\t\t\t\t>\n\t\t\t\t\t\tCheck the{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName=\"underline hover:no-underline\"\n\t\t\t\t\t\t\thref=\"https://github.com/epicweb-dev/epic-stack/blob/main/docs/getting-started.md\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tGetting Started guide\n\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\tfile for how to get your project off the ground!\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<ul className=\"mt-16 flex max-w-3xl flex-wrap justify-center gap-2 sm:gap-4 xl:mt-0 xl:grid xl:grid-flow-col xl:grid-cols-5 xl:grid-rows-6\">\n\t\t\t\t\t<TooltipProvider>\n\t\t\t\t\t\t{logos.map((logo, i) => (\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\tkey={logo.href}\n\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\tcolumnClasses[logo.column],\n\t\t\t\t\t\t\t\t\trowClasses[logo.row],\n\t\t\t\t\t\t\t\t\t'animate-roll-reveal [animation-fill-mode:backwards]',\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tstyle={{ animationDelay: `${i * 0.07}s` }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Tooltip>\n\t\t\t\t\t\t\t\t\t<TooltipTrigger asChild>\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\thref={logo.href}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"grid size-20 place-items-center rounded-2xl bg-violet-600/10 p-4 transition hover:-rotate-6 hover:bg-violet-600/15 dark:bg-violet-200 dark:hover:bg-violet-100 sm:size-24\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<img src={logo.src} alt=\"\" />\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</TooltipTrigger>\n\t\t\t\t\t\t\t\t\t<TooltipContent>{logo.alt}</TooltipContent>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TooltipProvider>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</main>\n\t)\n}\n","export default function PrivacyRoute() {\n\treturn <div>Privacy</div>\n}\n","export default function SupportRoute() {\n\treturn <div>Support</div>\n}\n","import { type Config } from 'tailwindcss'\n\nexport const marketingPreset = {\n\ttheme: {\n\t\textend: {\n\t\t\tkeyframes: {\n\t\t\t\t'roll-reveal': {\n\t\t\t\t\tfrom: { transform: 'rotate(12deg) scale(0)', opacity: '0' },\n\t\t\t\t\tto: { transform: 'rotate(0deg) scale(1)', opacity: '1' },\n\t\t\t\t},\n\t\t\t\t'slide-left': {\n\t\t\t\t\tfrom: { transform: 'translateX(20px)', opacity: '0' },\n\t\t\t\t\tto: { transform: 'translateX(0px)', opacity: '1' },\n\t\t\t\t},\n\t\t\t\t'slide-top': {\n\t\t\t\t\tfrom: { transform: 'translateY(20px)', opacity: '0' },\n\t\t\t\t\tto: { transform: 'translateY(0px)', opacity: '1' },\n\t\t\t\t},\n\t\t\t},\n\t\t\tanimation: {\n\t\t\t\t'roll-reveal': 'roll-reveal 0.4s cubic-bezier(.22,1.28,.54,.99)',\n\t\t\t\t'slide-left': 'slide-left 0.3s ease-out',\n\t\t\t\t'slide-top': 'slide-top 0.3s ease-out',\n\t\t\t},\n\t\t},\n\t},\n} satisfies Omit<Config, 'content'>\n","export default function TermsOfServiceRoute() {\n\treturn <div>Terms of service</div>\n}\n","import { generateRobotsTxt } from '@nasa-gcn/remix-seo'\nimport { type LoaderFunctionArgs } from '@remix-run/node'\nimport { getDomainUrl } from '#app/utils/misc.tsx'\n\nexport function loader({ request }: LoaderFunctionArgs) {\n\treturn generateRobotsTxt([\n\t\t{ type: 'sitemap', value: `${getDomainUrl(request)}/sitemap.xml` },\n\t])\n}\n","import { generateSitemap } from '@nasa-gcn/remix-seo'\nimport { type ServerBuild, type LoaderFunctionArgs } from '@remix-run/node'\nimport { getDomainUrl } from '#app/utils/misc.tsx'\n\nexport async function loader({ request, context }: LoaderFunctionArgs) {\n\tconst serverBuild = (await context.serverBuild) as ServerBuild\n\treturn generateSitemap(request, serverBuild.routes, {\n\t\tsiteUrl: getDomainUrl(request),\n\t\theaders: {\n\t\t\t'Cache-Control': `public, max-age=${60 * 5}`,\n\t\t},\n\t})\n}\n","import { json } from '@remix-run/node'\nimport { requireUserId } from './auth.server.ts'\nimport { prisma } from './db.server.ts'\nimport { type PermissionString, parsePermissionString } from './user.ts'\n\nexport async function requireUserWithPermission(\n\trequest: Request,\n\tpermission: PermissionString,\n) {\n\tconst userId = await requireUserId(request)\n\tconst permissionData = parsePermissionString(permission)\n\tconst user = await prisma.user.findFirst({\n\t\tselect: { id: true },\n\t\twhere: {\n\t\t\tid: userId,\n\t\t\troles: {\n\t\t\t\tsome: {\n\t\t\t\t\tpermissions: {\n\t\t\t\t\t\tsome: {\n\t\t\t\t\t\t\t...permissionData,\n\t\t\t\t\t\t\taccess: permissionData.access\n\t\t\t\t\t\t\t\t? { in: permissionData.access }\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n\tif (!user) {\n\t\tthrow json(\n\t\t\t{\n\t\t\t\terror: 'Unauthorized',\n\t\t\t\trequiredPermission: permissionData,\n\t\t\t\tmessage: `Unauthorized: required permissions: ${permission}`,\n\t\t\t},\n\t\t\t{ status: 403 },\n\t\t)\n\t}\n\treturn user.id\n}\n\nexport async function requireUserWithRole(request: Request, name: string) {\n\tconst userId = await requireUserId(request)\n\tconst user = await prisma.user.findFirst({\n\t\tselect: { id: true },\n\t\twhere: { id: userId, roles: { some: { name } } },\n\t})\n\tif (!user) {\n\t\tthrow json(\n\t\t\t{\n\t\t\t\terror: 'Unauthorized',\n\t\t\t\trequiredRole: name,\n\t\t\t\tmessage: `Unauthorized: required role: ${name}`,\n\t\t\t},\n\t\t\t{ status: 403 },\n\t\t)\n\t}\n\treturn user.id\n}\n","import { invariantResponse } from '@epic-web/invariant'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\tredirect,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n} from '@remix-run/node'\nimport {\n\tForm,\n\tLink,\n\tuseFetcher,\n\tuseLoaderData,\n\tuseSearchParams,\n\tuseSubmit,\n} from '@remix-run/react'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary'\nimport { Field } from '#app/components/forms.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport {\n\tcache,\n\tgetAllCacheKeys,\n\tlruCache,\n\tsearchCacheKeys,\n} from '#app/utils/cache.server.ts'\nimport {\n\tensureInstance,\n\tgetAllInstances,\n\tgetInstanceInfo,\n} from '#app/utils/litefs.server.ts'\nimport { useDebounce, useDoubleCheck } from '#app/utils/misc.tsx'\nimport { requireUserWithRole } from '#app/utils/permissions.server.ts'\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tawait requireUserWithRole(request, 'admin')\n\tconst searchParams = new URL(request.url).searchParams\n\tconst query = searchParams.get('query')\n\tif (query === '') {\n\t\tsearchParams.delete('query')\n\t\treturn redirect(`/admin/cache?${searchParams.toString()}`)\n\t}\n\tconst limit = Number(searchParams.get('limit') ?? 100)\n\n\tconst currentInstanceInfo = await getInstanceInfo()\n\tconst instance =\n\t\tsearchParams.get('instance') ?? currentInstanceInfo.currentInstance\n\tconst instances = await getAllInstances()\n\tawait ensureInstance(instance)\n\n\tlet cacheKeys: { sqlite: Array<string>; lru: Array<string> }\n\tif (typeof query === 'string') {\n\t\tcacheKeys = await searchCacheKeys(query, limit)\n\t} else {\n\t\tcacheKeys = await getAllCacheKeys(limit)\n\t}\n\treturn json({ cacheKeys, instance, instances, currentInstanceInfo })\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tawait requireUserWithRole(request, 'admin')\n\tconst formData = await request.formData()\n\tconst key = formData.get('cacheKey')\n\tconst { currentInstance } = await getInstanceInfo()\n\tconst instance = formData.get('instance') ?? currentInstance\n\tconst type = formData.get('type')\n\n\tinvariantResponse(typeof key === 'string', 'cacheKey must be a string')\n\tinvariantResponse(typeof type === 'string', 'type must be a string')\n\tinvariantResponse(typeof instance === 'string', 'instance must be a string')\n\tawait ensureInstance(instance)\n\n\tswitch (type) {\n\t\tcase 'sqlite': {\n\t\t\tawait cache.delete(key)\n\t\t\tbreak\n\t\t}\n\t\tcase 'lru': {\n\t\t\tlruCache.delete(key)\n\t\t\tbreak\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Unknown cache type: ${type}`)\n\t\t}\n\t}\n\treturn json({ success: true })\n}\n\nexport default function CacheAdminRoute() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst [searchParams] = useSearchParams()\n\tconst submit = useSubmit()\n\tconst query = searchParams.get('query') ?? ''\n\tconst limit = searchParams.get('limit') ?? '100'\n\tconst instance = searchParams.get('instance') ?? data.instance\n\n\tconst handleFormChange = useDebounce((form: HTMLFormElement) => {\n\t\tsubmit(form)\n\t}, 400)\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h1 className=\"text-h1\">Cache Admin</h1>\n\t\t\t<Spacer size=\"2xs\" />\n\t\t\t<Form\n\t\t\t\tmethod=\"get\"\n\t\t\t\tclassName=\"flex flex-col gap-4\"\n\t\t\t\tonChange={e => handleFormChange(e.currentTarget)}\n\t\t\t>\n\t\t\t\t<div className=\"flex-1\">\n\t\t\t\t\t<div className=\"flex flex-1 gap-4\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tclassName=\"flex h-16 items-center justify-center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tüîé\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tclassName=\"flex-1\"\n\t\t\t\t\t\t\tlabelProps={{ children: 'Search' }}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\ttype: 'search',\n\t\t\t\t\t\t\t\tname: 'query',\n\t\t\t\t\t\t\t\tdefaultValue: query,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"flex h-16 w-14 items-center text-lg font-medium text-muted-foreground\">\n\t\t\t\t\t\t\t<span title=\"Total results shown\">\n\t\t\t\t\t\t\t\t{data.cacheKeys.sqlite.length + data.cacheKeys.lru.length}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex flex-wrap items-center gap-4\">\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\tchildren: 'Limit',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\tname: 'limit',\n\t\t\t\t\t\t\tdefaultValue: limit,\n\t\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\t\tstep: '1',\n\t\t\t\t\t\t\tmin: '1',\n\t\t\t\t\t\t\tmax: '10000',\n\t\t\t\t\t\t\tplaceholder: 'results limit',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<select name=\"instance\" defaultValue={instance}>\n\t\t\t\t\t\t{Object.entries(data.instances).map(([inst, region]) => (\n\t\t\t\t\t\t\t<option key={inst} value={inst}>\n\t\t\t\t\t\t\t\t{[\n\t\t\t\t\t\t\t\t\tinst,\n\t\t\t\t\t\t\t\t\t`(${region})`,\n\t\t\t\t\t\t\t\t\tinst === data.currentInstanceInfo.currentInstance\n\t\t\t\t\t\t\t\t\t\t? '(current)'\n\t\t\t\t\t\t\t\t\t\t: '',\n\t\t\t\t\t\t\t\t\tinst === data.currentInstanceInfo.primaryInstance\n\t\t\t\t\t\t\t\t\t\t? ' (primary)'\n\t\t\t\t\t\t\t\t\t\t: '',\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t\t\t\t\t.join(' ')}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</Form>\n\t\t\t<Spacer size=\"2xs\" />\n\t\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t\t<h2 className=\"text-h2\">LRU Cache:</h2>\n\t\t\t\t{data.cacheKeys.lru.map(key => (\n\t\t\t\t\t<CacheKeyRow\n\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\tcacheKey={key}\n\t\t\t\t\t\tinstance={instance}\n\t\t\t\t\t\ttype=\"lru\"\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<Spacer size=\"3xs\" />\n\t\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t\t<h2 className=\"text-h2\">SQLite Cache:</h2>\n\t\t\t\t{data.cacheKeys.sqlite.map(key => (\n\t\t\t\t\t<CacheKeyRow\n\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\tcacheKey={key}\n\t\t\t\t\t\tinstance={instance}\n\t\t\t\t\t\ttype=\"sqlite\"\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nfunction CacheKeyRow({\n\tcacheKey,\n\tinstance,\n\ttype,\n}: {\n\tcacheKey: string\n\tinstance?: string\n\ttype: 'sqlite' | 'lru'\n}) {\n\tconst fetcher = useFetcher<typeof action>()\n\tconst dc = useDoubleCheck()\n\tconst encodedKey = encodeURIComponent(cacheKey)\n\tconst valuePage = `/admin/cache/${type}/${encodedKey}?instance=${instance}`\n\treturn (\n\t\t<div className=\"flex items-center gap-2 font-mono\">\n\t\t\t<fetcher.Form method=\"POST\">\n\t\t\t\t<input type=\"hidden\" name=\"cacheKey\" value={cacheKey} />\n\t\t\t\t<input type=\"hidden\" name=\"instance\" value={instance} />\n\t\t\t\t<input type=\"hidden\" name=\"type\" value={type} />\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t{...dc.getButtonProps({ type: 'submit' })}\n\t\t\t\t>\n\t\t\t\t\t{fetcher.state === 'idle'\n\t\t\t\t\t\t? dc.doubleCheck\n\t\t\t\t\t\t\t? 'You sure?'\n\t\t\t\t\t\t\t: 'Delete'\n\t\t\t\t\t\t: 'Deleting...'}\n\t\t\t\t</Button>\n\t\t\t</fetcher.Form>\n\t\t\t<Link reloadDocument to={valuePage}>\n\t\t\t\t{cacheKey}\n\t\t\t</Link>\n\t\t</div>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn (\n\t\t<GeneralErrorBoundary\n\t\t\tstatusHandlers={{\n\t\t\t\t403: ({ error }) => (\n\t\t\t\t\t<p>You are not allowed to do that: {error?.data.message}</p>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import { invariantResponse } from '@epic-web/invariant'\nimport { json, type LoaderFunctionArgs } from '@remix-run/node'\nimport { lruCache } from '#app/utils/cache.server.ts'\nimport {\n\tgetAllInstances,\n\tgetInstanceInfo,\n\tensureInstance,\n} from '#app/utils/litefs.server.ts'\nimport { requireUserWithRole } from '#app/utils/permissions.server.ts'\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n\tawait requireUserWithRole(request, 'admin')\n\tconst searchParams = new URL(request.url).searchParams\n\tconst currentInstanceInfo = await getInstanceInfo()\n\tconst allInstances = await getAllInstances()\n\tconst instance =\n\t\tsearchParams.get('instance') ?? currentInstanceInfo.currentInstance\n\tawait ensureInstance(instance)\n\n\tconst { cacheKey } = params\n\tinvariantResponse(cacheKey, 'cacheKey is required')\n\treturn json({\n\t\tinstance: {\n\t\t\thostname: instance,\n\t\t\tregion: allInstances[instance],\n\t\t\tisPrimary: currentInstanceInfo.primaryInstance === instance,\n\t\t},\n\t\tcacheKey,\n\t\tvalue: lruCache.get(cacheKey),\n\t})\n}\n","import { json, redirect, type ActionFunctionArgs } from '@remix-run/node'\nimport { z } from 'zod'\nimport { cache } from '#app/utils/cache.server.ts'\nimport { getInstanceInfo } from '#app/utils/litefs.server'\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst { currentIsPrimary, primaryInstance } = await getInstanceInfo()\n\tif (!currentIsPrimary) {\n\t\tthrow new Error(\n\t\t\t`${request.url} should only be called on the primary instance (${primaryInstance})}`,\n\t\t)\n\t}\n\tconst token = process.env.INTERNAL_COMMAND_TOKEN\n\tconst isAuthorized =\n\t\trequest.headers.get('Authorization') === `Bearer ${token}`\n\tif (!isAuthorized) {\n\t\t// nah, you can't be here...\n\t\treturn redirect('https://www.youtube.com/watch?v=dQw4w9WgXcQ')\n\t}\n\tconst { key, cacheValue } = z\n\t\t.object({ key: z.string(), cacheValue: z.unknown().optional() })\n\t\t.parse(await request.json())\n\tif (cacheValue === undefined) {\n\t\tawait cache.delete(key)\n\t} else {\n\t\t// @ts-expect-error - we don't reliably know the type of cacheValue\n\t\tawait cache.set(key, cacheValue)\n\t}\n\treturn json({ success: true })\n}\n","import { invariantResponse } from '@epic-web/invariant'\nimport { json, type LoaderFunctionArgs } from '@remix-run/node'\nimport { cache } from '#app/utils/cache.server.ts'\nimport {\n\tgetAllInstances,\n\tgetInstanceInfo,\n\tensureInstance,\n} from '#app/utils/litefs.server.ts'\nimport { requireUserWithRole } from '#app/utils/permissions.server.ts'\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n\tawait requireUserWithRole(request, 'admin')\n\tconst searchParams = new URL(request.url).searchParams\n\tconst currentInstanceInfo = await getInstanceInfo()\n\tconst allInstances = await getAllInstances()\n\tconst instance =\n\t\tsearchParams.get('instance') ?? currentInstanceInfo.currentInstance\n\tawait ensureInstance(instance)\n\n\tconst { cacheKey } = params\n\tinvariantResponse(cacheKey, 'cacheKey is required')\n\treturn json({\n\t\tinstance: {\n\t\t\thostname: instance,\n\t\t\tregion: allInstances[instance],\n\t\t\tisPrimary: currentInstanceInfo.primaryInstance === instance,\n\t\t},\n\t\tcacheKey,\n\t\tvalue: cache.get(cacheKey),\n\t})\n}\n","import { redirect, type LoaderFunctionArgs } from '@remix-run/node'\nimport { requireUserId, logout } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst user = await prisma.user.findUnique({ where: { id: userId } })\n\tif (!user) {\n\t\tconst requestUrl = new URL(request.url)\n\t\tconst loginParams = new URLSearchParams([\n\t\t\t['redirectTo', `${requestUrl.pathname}${requestUrl.search}`],\n\t\t])\n\t\tconst redirectTo = `/login?${loginParams}`\n\t\tawait logout({ request, redirectTo })\n\t\treturn redirect(redirectTo)\n\t}\n\treturn redirect(`/users/${user.username}`)\n}\n","import { json, type LoaderFunctionArgs } from '@remix-run/node'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { getDomainUrl } from '#app/utils/misc.tsx'\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst user = await prisma.user.findUniqueOrThrow({\n\t\twhere: { id: userId },\n\t\t// this is one of the *few* instances where you can use \"include\" because\n\t\t// the goal is to literally get *everything*. Normally you should be\n\t\t// explicit with \"select\". We're using select for images because we don't\n\t\t// want to send back the entire blob of the image. We'll send a URL they can\n\t\t// use to download it instead.\n\t\tinclude: {\n\t\t\timage: {\n\t\t\t\tselect: {\n\t\t\t\t\tid: true,\n\t\t\t\t\tcreatedAt: true,\n\t\t\t\t\tupdatedAt: true,\n\t\t\t\t\tcontentType: true,\n\t\t\t\t},\n\t\t\t},\n\t\t\tnotes: {\n\t\t\t\tinclude: {\n\t\t\t\t\timages: {\n\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\tid: true,\n\t\t\t\t\t\t\tcreatedAt: true,\n\t\t\t\t\t\t\tupdatedAt: true,\n\t\t\t\t\t\t\tcontentType: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tpassword: false, // <-- intentionally omit password\n\t\t\tsessions: true,\n\t\t\troles: true,\n\t\t},\n\t})\n\n\tconst domain = getDomainUrl(request)\n\n\treturn json({\n\t\tuser: {\n\t\t\t...user,\n\t\t\timage: user.image\n\t\t\t\t? {\n\t\t\t\t\t\t...user.image,\n\t\t\t\t\t\turl: `${domain}/resources/user-images/${user.image.id}`,\n\t\t\t\t\t}\n\t\t\t\t: null,\n\t\t\tnotes: user.notes.map(note => ({\n\t\t\t\t...note,\n\t\t\t\timages: note.images.map(image => ({\n\t\t\t\t\t...image,\n\t\t\t\t\turl: `${domain}/resources/note-images/${image.id}`,\n\t\t\t\t})),\n\t\t\t})),\n\t\t},\n\t})\n}\n","// learn more: https://fly.io/docs/reference/configuration/#services-http_checks\nimport { type LoaderFunctionArgs } from '@remix-run/node'\nimport { prisma } from '#app/utils/db.server.ts'\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst host =\n\t\trequest.headers.get('X-Forwarded-Host') ?? request.headers.get('host')\n\n\ttry {\n\t\t// if we can connect to the database and make a simple query\n\t\t// and make a HEAD request to ourselves, then we're good.\n\t\tawait Promise.all([\n\t\t\tprisma.user.count(),\n\t\t\tfetch(`${new URL(request.url).protocol}${host}`, {\n\t\t\t\tmethod: 'HEAD',\n\t\t\t\theaders: { 'X-Healthcheck': 'true' },\n\t\t\t}).then(r => {\n\t\t\t\tif (!r.ok) return Promise.reject(r)\n\t\t\t}),\n\t\t])\n\t\treturn new Response('OK')\n\t} catch (error: unknown) {\n\t\tconsole.log('healthcheck ‚ùå', { error })\n\t\treturn new Response('ERROR', { status: 500 })\n\t}\n}\n","import { invariantResponse } from '@epic-web/invariant'\nimport { type LoaderFunctionArgs } from '@remix-run/node'\nimport { prisma } from '#app/utils/db.server.ts'\n\nexport async function loader({ params }: LoaderFunctionArgs) {\n\tinvariantResponse(params.imageId, 'Image ID is required', { status: 400 })\n\tconst image = await prisma.noteImage.findUnique({\n\t\twhere: { id: params.imageId },\n\t\tselect: { contentType: true, blob: true },\n\t})\n\n\tinvariantResponse(image, 'Not found', { status: 404 })\n\n\treturn new Response(image.blob, {\n\t\theaders: {\n\t\t\t'Content-Type': image.contentType,\n\t\t\t'Content-Length': Buffer.byteLength(image.blob).toString(),\n\t\t\t'Content-Disposition': `inline; filename=\"${params.imageId}\"`,\n\t\t\t'Cache-Control': 'public, max-age=31536000, immutable',\n\t\t},\n\t})\n}\n","import { invariantResponse } from '@epic-web/invariant'\nimport { type LoaderFunctionArgs } from '@remix-run/node'\nimport { prisma } from '#app/utils/db.server.ts'\n\nexport async function loader({ params }: LoaderFunctionArgs) {\n\tinvariantResponse(params.imageId, 'Image ID is required', { status: 400 })\n\tconst image = await prisma.userImage.findUnique({\n\t\twhere: { id: params.imageId },\n\t\tselect: { contentType: true, blob: true },\n\t})\n\n\tinvariantResponse(image, 'Not found', { status: 404 })\n\n\treturn new Response(image.blob, {\n\t\theaders: {\n\t\t\t'Content-Type': image.contentType,\n\t\t\t'Content-Length': Buffer.byteLength(image.blob).toString(),\n\t\t\t'Content-Disposition': `inline; filename=\"${params.imageId}\"`,\n\t\t\t'Cache-Control': 'public, max-age=31536000, immutable',\n\t\t},\n\t})\n}\n","import { invariantResponse } from '@epic-web/invariant'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { json, type LoaderFunctionArgs } from '@remix-run/node'\nimport { Link, Outlet, useMatches } from '@remix-run/react'\nimport { z } from 'zod'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { cn } from '#app/utils/misc.tsx'\nimport { useUser } from '#app/utils/user.ts'\n\nexport const BreadcrumbHandle = z.object({ breadcrumb: z.any() })\nexport type BreadcrumbHandle = z.infer<typeof BreadcrumbHandle>\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"file-text\">Edit Profile</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst user = await prisma.user.findUnique({\n\t\twhere: { id: userId },\n\t\tselect: { username: true },\n\t})\n\tinvariantResponse(user, 'User not found', { status: 404 })\n\treturn json({})\n}\n\nconst BreadcrumbHandleMatch = z.object({\n\thandle: BreadcrumbHandle,\n})\n\nexport default function EditUserProfile() {\n\tconst user = useUser()\n\tconst matches = useMatches()\n\tconst breadcrumbs = matches\n\t\t.map(m => {\n\t\t\tconst result = BreadcrumbHandleMatch.safeParse(m)\n\t\t\tif (!result.success || !result.data.handle.breadcrumb) return null\n\t\t\treturn (\n\t\t\t\t<Link key={m.id} to={m.pathname} className=\"flex items-center\">\n\t\t\t\t\t{result.data.handle.breadcrumb}\n\t\t\t\t</Link>\n\t\t\t)\n\t\t})\n\t\t.filter(Boolean)\n\n\treturn (\n\t\t<div className=\"m-auto mb-24 mt-16 max-w-3xl\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<ul className=\"flex gap-3\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tclassName=\"text-muted-foreground\"\n\t\t\t\t\t\t\tto={`/users/${user.username}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t{breadcrumbs.map((breadcrumb, i, arr) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tclassName={cn('flex items-center gap-3', {\n\t\t\t\t\t\t\t\t'text-muted-foreground': i < arr.length - 1,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t‚ñ∂Ô∏è {breadcrumb}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<Spacer size=\"xs\" />\n\t\t\t<main className=\"mx-auto bg-muted px-6 py-8 md:container md:rounded-3xl\">\n\t\t\t\t<Outlet />\n\t\t\t</main>\n\t\t</div>\n\t)\n}\n","import { invariantResponse } from '@epic-web/invariant'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n\ttype SerializeFrom,\n\ttype HeadersFunction,\n} from '@remix-run/node'\nimport { useFetcher, useLoaderData } from '@remix-run/react'\nimport { useState } from 'react'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport {\n\tTooltip,\n\tTooltipContent,\n\tTooltipProvider,\n\tTooltipTrigger,\n} from '#app/components/ui/tooltip.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { resolveConnectionData } from '#app/utils/connections.server.ts'\nimport {\n\tProviderConnectionForm,\n\ttype ProviderName,\n\tProviderNameSchema,\n\tproviderIcons,\n\tproviderNames,\n} from '#app/utils/connections.tsx'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { makeTimings } from '#app/utils/timing.server.ts'\nimport { createToastHeaders } from '#app/utils/toast.server.ts'\nimport { type BreadcrumbHandle } from './profile.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"link-2\">Connections</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nasync function userCanDeleteConnections(userId: string) {\n\tconst user = await prisma.user.findUnique({\n\t\tselect: {\n\t\t\tpassword: { select: { userId: true } },\n\t\t\t_count: { select: { connections: true } },\n\t\t},\n\t\twhere: { id: userId },\n\t})\n\t// user can delete their connections if they have a password\n\tif (user?.password) return true\n\t// users have to have more than one remaining connection to delete one\n\treturn Boolean(user?._count.connections && user?._count.connections > 1)\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst timings = makeTimings('profile connections loader')\n\tconst rawConnections = await prisma.connection.findMany({\n\t\tselect: { id: true, providerName: true, providerId: true, createdAt: true },\n\t\twhere: { userId },\n\t})\n\tconst connections: Array<{\n\t\tproviderName: ProviderName\n\t\tid: string\n\t\tdisplayName: string\n\t\tlink?: string | null\n\t\tcreatedAtFormatted: string\n\t}> = []\n\tfor (const connection of rawConnections) {\n\t\tconst r = ProviderNameSchema.safeParse(connection.providerName)\n\t\tif (!r.success) continue\n\t\tconst providerName = r.data\n\t\tconst connectionData = await resolveConnectionData(\n\t\t\tproviderName,\n\t\t\tconnection.providerId,\n\t\t\t{ timings },\n\t\t)\n\t\tconnections.push({\n\t\t\t...connectionData,\n\t\t\tproviderName,\n\t\t\tid: connection.id,\n\t\t\tcreatedAtFormatted: connection.createdAt.toLocaleString(),\n\t\t})\n\t}\n\n\treturn json(\n\t\t{\n\t\t\tconnections,\n\t\t\tcanDeleteConnections: await userCanDeleteConnections(userId),\n\t\t},\n\t\t{ headers: { 'Server-Timing': timings.toString() } },\n\t)\n}\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n\tconst headers = {\n\t\t'Server-Timing': loaderHeaders.get('Server-Timing') ?? '',\n\t}\n\treturn headers\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await request.formData()\n\tinvariantResponse(\n\t\tformData.get('intent') === 'delete-connection',\n\t\t'Invalid intent',\n\t)\n\tinvariantResponse(\n\t\tawait userCanDeleteConnections(userId),\n\t\t'You cannot delete your last connection unless you have a password.',\n\t)\n\tconst connectionId = formData.get('connectionId')\n\tinvariantResponse(typeof connectionId === 'string', 'Invalid connectionId')\n\tawait prisma.connection.delete({\n\t\twhere: {\n\t\t\tid: connectionId,\n\t\t\tuserId: userId,\n\t\t},\n\t})\n\tconst toastHeaders = await createToastHeaders({\n\t\ttitle: 'Deleted',\n\t\tdescription: 'Your connection has been deleted.',\n\t})\n\treturn json({ status: 'success' } as const, { headers: toastHeaders })\n}\n\nexport default function Connections() {\n\tconst data = useLoaderData<typeof loader>()\n\n\treturn (\n\t\t<div className=\"mx-auto max-w-md\">\n\t\t\t{data.connections.length ? (\n\t\t\t\t<div className=\"flex flex-col gap-2\">\n\t\t\t\t\t<p>Here are your current connections:</p>\n\t\t\t\t\t<ul className=\"flex flex-col gap-4\">\n\t\t\t\t\t\t{data.connections.map(c => (\n\t\t\t\t\t\t\t<li key={c.id}>\n\t\t\t\t\t\t\t\t<Connection\n\t\t\t\t\t\t\t\t\tconnection={c}\n\t\t\t\t\t\t\t\t\tcanDelete={data.canDeleteConnections}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<p>You don't have any connections yet.</p>\n\t\t\t)}\n\t\t\t<div className=\"mt-5 flex flex-col gap-5 border-b-2 border-t-2 border-border py-3\">\n\t\t\t\t{providerNames.map(providerName => (\n\t\t\t\t\t<ProviderConnectionForm\n\t\t\t\t\t\tkey={providerName}\n\t\t\t\t\t\ttype=\"Connect\"\n\t\t\t\t\t\tproviderName={providerName}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nfunction Connection({\n\tconnection,\n\tcanDelete,\n}: {\n\tconnection: SerializeFrom<typeof loader>['connections'][number]\n\tcanDelete: boolean\n}) {\n\tconst deleteFetcher = useFetcher<typeof action>()\n\tconst [infoOpen, setInfoOpen] = useState(false)\n\tconst icon = providerIcons[connection.providerName]\n\treturn (\n\t\t<div className=\"flex justify-between gap-2\">\n\t\t\t<span className={`inline-flex items-center gap-1.5`}>\n\t\t\t\t{icon}\n\t\t\t\t<span>\n\t\t\t\t\t{connection.link ? (\n\t\t\t\t\t\t<a href={connection.link} className=\"underline\">\n\t\t\t\t\t\t\t{connection.displayName}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tconnection.displayName\n\t\t\t\t\t)}{' '}\n\t\t\t\t\t({connection.createdAtFormatted})\n\t\t\t\t</span>\n\t\t\t</span>\n\t\t\t{canDelete ? (\n\t\t\t\t<deleteFetcher.Form method=\"POST\">\n\t\t\t\t\t<input name=\"connectionId\" value={connection.id} type=\"hidden\" />\n\t\t\t\t\t<TooltipProvider>\n\t\t\t\t\t\t<Tooltip>\n\t\t\t\t\t\t\t<TooltipTrigger asChild>\n\t\t\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\t\t\tname=\"intent\"\n\t\t\t\t\t\t\t\t\tvalue=\"delete-connection\"\n\t\t\t\t\t\t\t\t\tvariant=\"destructive\"\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\t\t\t\tdeleteFetcher.state !== 'idle'\n\t\t\t\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t\t\t\t: deleteFetcher.data?.status ?? 'idle'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Icon name=\"cross-1\" />\n\t\t\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t\t\t</TooltipTrigger>\n\t\t\t\t\t\t\t<TooltipContent>Disconnect this account</TooltipContent>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</TooltipProvider>\n\t\t\t\t</deleteFetcher.Form>\n\t\t\t) : (\n\t\t\t\t<TooltipProvider>\n\t\t\t\t\t<Tooltip open={infoOpen} onOpenChange={setInfoOpen}>\n\t\t\t\t\t\t<TooltipTrigger onClick={() => setInfoOpen(true)}>\n\t\t\t\t\t\t\t<Icon name=\"question-mark-circled\"></Icon>\n\t\t\t\t\t\t</TooltipTrigger>\n\t\t\t\t\t\t<TooltipContent>\n\t\t\t\t\t\t\tYou cannot delete your last connection unless you have a password.\n\t\t\t\t\t\t</TooltipContent>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</TooltipProvider>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { invariantResponse } from '@epic-web/invariant'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n} from '@remix-run/node'\nimport { Link, useFetcher, useLoaderData } from '@remix-run/react'\nimport { z } from 'zod'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireUserId, sessionKey } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { getUserImgSrc, useDoubleCheck } from '#app/utils/misc.tsx'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { NameSchema, UsernameSchema } from '#app/utils/user-validation.ts'\nimport { twoFAVerificationType } from './profile.two-factor.tsx'\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nconst ProfileFormSchema = z.object({\n\tname: NameSchema.optional(),\n\tusername: UsernameSchema,\n})\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst user = await prisma.user.findUniqueOrThrow({\n\t\twhere: { id: userId },\n\t\tselect: {\n\t\t\tid: true,\n\t\t\tname: true,\n\t\t\tusername: true,\n\t\t\temail: true,\n\t\t\timage: {\n\t\t\t\tselect: { id: true },\n\t\t\t},\n\t\t\t_count: {\n\t\t\t\tselect: {\n\t\t\t\t\tsessions: {\n\t\t\t\t\t\twhere: {\n\t\t\t\t\t\t\texpirationDate: { gt: new Date() },\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n\n\tconst twoFactorVerification = await prisma.verification.findUnique({\n\t\tselect: { id: true },\n\t\twhere: { target_type: { type: twoFAVerificationType, target: userId } },\n\t})\n\n\tconst password = await prisma.password.findUnique({\n\t\tselect: { userId: true },\n\t\twhere: { userId },\n\t})\n\n\treturn json({\n\t\tuser,\n\t\thasPassword: Boolean(password),\n\t\tisTwoFactorEnabled: Boolean(twoFactorVerification),\n\t})\n}\n\ntype ProfileActionArgs = {\n\trequest: Request\n\tuserId: string\n\tformData: FormData\n}\nconst profileUpdateActionIntent = 'update-profile'\nconst signOutOfSessionsActionIntent = 'sign-out-of-sessions'\nconst deleteDataActionIntent = 'delete-data'\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await request.formData()\n\tconst intent = formData.get('intent')\n\tswitch (intent) {\n\t\tcase profileUpdateActionIntent: {\n\t\t\treturn profileUpdateAction({ request, userId, formData })\n\t\t}\n\t\tcase signOutOfSessionsActionIntent: {\n\t\t\treturn signOutOfSessionsAction({ request, userId, formData })\n\t\t}\n\t\tcase deleteDataActionIntent: {\n\t\t\treturn deleteDataAction({ request, userId, formData })\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Response(`Invalid intent \"${intent}\"`, { status: 400 })\n\t\t}\n\t}\n}\n\nexport default function EditUserProfile() {\n\tconst data = useLoaderData<typeof loader>()\n\n\treturn (\n\t\t<div className=\"flex flex-col gap-12\">\n\t\t\t<div className=\"flex justify-center\">\n\t\t\t\t<div className=\"relative h-52 w-52\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={getUserImgSrc(data.user.image?.id)}\n\t\t\t\t\t\talt={data.user.username}\n\t\t\t\t\t\tclassName=\"h-full w-full rounded-full object-cover\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tasChild\n\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\tclassName=\"absolute -right-3 top-3 flex h-10 w-10 items-center justify-center rounded-full p-0\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tpreventScrollReset\n\t\t\t\t\t\t\tto=\"photo\"\n\t\t\t\t\t\t\ttitle=\"Change profile photo\"\n\t\t\t\t\t\t\taria-label=\"Change profile photo\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon name=\"camera\" className=\"h-4 w-4\" />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<UpdateProfile />\n\n\t\t\t<div className=\"col-span-6 my-6 h-1 border-b-[1.5px] border-foreground\" />\n\t\t\t<div className=\"col-span-full flex flex-col gap-6\">\n\t\t\t\t<div>\n\t\t\t\t\t<Link to=\"change-email\">\n\t\t\t\t\t\t<Icon name=\"envelope-closed\">\n\t\t\t\t\t\t\tChange email from {data.user.email}\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Link to=\"two-factor\">\n\t\t\t\t\t\t{data.isTwoFactorEnabled ? (\n\t\t\t\t\t\t\t<Icon name=\"lock-closed\">2FA is enabled</Icon>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Icon name=\"lock-open-1\">Enable 2FA</Icon>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Link to={data.hasPassword ? 'password' : 'password/create'}>\n\t\t\t\t\t\t<Icon name=\"dots-horizontal\">\n\t\t\t\t\t\t\t{data.hasPassword ? 'Change Password' : 'Create a Password'}\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Link to=\"connections\">\n\t\t\t\t\t\t<Icon name=\"link-2\">Manage connections</Icon>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Link\n\t\t\t\t\t\treloadDocument\n\t\t\t\t\t\tdownload=\"my-epic-notes-data.json\"\n\t\t\t\t\t\tto=\"/resources/download-user-data\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon name=\"download\">Download your data</Icon>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<SignOutOfSessions />\n\t\t\t\t<DeleteData />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nasync function profileUpdateAction({ userId, formData }: ProfileActionArgs) {\n\tconst submission = await parseWithZod(formData, {\n\t\tasync: true,\n\t\tschema: ProfileFormSchema.superRefine(async ({ username }, ctx) => {\n\t\t\tconst existingUsername = await prisma.user.findUnique({\n\t\t\t\twhere: { username },\n\t\t\t\tselect: { id: true },\n\t\t\t})\n\t\t\tif (existingUsername && existingUsername.id !== userId) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['username'],\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: 'A user already exists with this username',\n\t\t\t\t})\n\t\t\t}\n\t\t}),\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst data = submission.value\n\n\tawait prisma.user.update({\n\t\tselect: { username: true },\n\t\twhere: { id: userId },\n\t\tdata: {\n\t\t\tname: data.name,\n\t\t\tusername: data.username,\n\t\t},\n\t})\n\n\treturn json({\n\t\tresult: submission.reply(),\n\t})\n}\n\nfunction UpdateProfile() {\n\tconst data = useLoaderData<typeof loader>()\n\n\tconst fetcher = useFetcher<typeof profileUpdateAction>()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'edit-profile',\n\t\tconstraint: getZodConstraint(ProfileFormSchema),\n\t\tlastResult: fetcher.data?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ProfileFormSchema })\n\t\t},\n\t\tdefaultValue: {\n\t\t\tusername: data.user.username,\n\t\t\tname: data.user.name,\n\t\t},\n\t})\n\n\treturn (\n\t\t<fetcher.Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t<div className=\"grid grid-cols-6 gap-x-10\">\n\t\t\t\t<Field\n\t\t\t\t\tclassName=\"col-span-3\"\n\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\thtmlFor: fields.username.id,\n\t\t\t\t\t\tchildren: 'Username',\n\t\t\t\t\t}}\n\t\t\t\t\tinputProps={getInputProps(fields.username, { type: 'text' })}\n\t\t\t\t\terrors={fields.username.errors}\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tclassName=\"col-span-3\"\n\t\t\t\t\tlabelProps={{ htmlFor: fields.name.id, children: 'Name' }}\n\t\t\t\t\tinputProps={getInputProps(fields.name, { type: 'text' })}\n\t\t\t\t\terrors={fields.name.errors}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t<div className=\"mt-8 flex justify-center\">\n\t\t\t\t<StatusButton\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tsize=\"wide\"\n\t\t\t\t\tname=\"intent\"\n\t\t\t\t\tvalue={profileUpdateActionIntent}\n\t\t\t\t\tstatus={fetcher.state !== 'idle' ? 'pending' : form.status ?? 'idle'}\n\t\t\t\t>\n\t\t\t\t\tSave changes\n\t\t\t\t</StatusButton>\n\t\t\t</div>\n\t\t</fetcher.Form>\n\t)\n}\n\nasync function signOutOfSessionsAction({ request, userId }: ProfileActionArgs) {\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst sessionId = authSession.get(sessionKey)\n\tinvariantResponse(\n\t\tsessionId,\n\t\t'You must be authenticated to sign out of other sessions',\n\t)\n\tawait prisma.session.deleteMany({\n\t\twhere: {\n\t\t\tuserId,\n\t\t\tid: { not: sessionId },\n\t\t},\n\t})\n\treturn json({ status: 'success' } as const)\n}\n\nfunction SignOutOfSessions() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst dc = useDoubleCheck()\n\n\tconst fetcher = useFetcher<typeof signOutOfSessionsAction>()\n\tconst otherSessionsCount = data.user._count.sessions - 1\n\treturn (\n\t\t<div>\n\t\t\t{otherSessionsCount ? (\n\t\t\t\t<fetcher.Form method=\"POST\">\n\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t{...dc.getButtonProps({\n\t\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t\t\tname: 'intent',\n\t\t\t\t\t\t\tvalue: signOutOfSessionsActionIntent,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tvariant={dc.doubleCheck ? 'destructive' : 'default'}\n\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\tfetcher.state !== 'idle'\n\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t: fetcher.data?.status ?? 'idle'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon name=\"avatar\">\n\t\t\t\t\t\t\t{dc.doubleCheck\n\t\t\t\t\t\t\t\t? `Are you sure?`\n\t\t\t\t\t\t\t\t: `Sign out of ${otherSessionsCount} other sessions`}\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</StatusButton>\n\t\t\t\t</fetcher.Form>\n\t\t\t) : (\n\t\t\t\t<Icon name=\"avatar\">This is your only session</Icon>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nasync function deleteDataAction({ userId }: ProfileActionArgs) {\n\tawait prisma.user.delete({ where: { id: userId } })\n\treturn redirectWithToast('/', {\n\t\ttype: 'success',\n\t\ttitle: 'Data Deleted',\n\t\tdescription: 'All of your data has been deleted',\n\t})\n}\n\nfunction DeleteData() {\n\tconst dc = useDoubleCheck()\n\n\tconst fetcher = useFetcher<typeof deleteDataAction>()\n\treturn (\n\t\t<div>\n\t\t\t<fetcher.Form method=\"POST\">\n\t\t\t\t<StatusButton\n\t\t\t\t\t{...dc.getButtonProps({\n\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t\tname: 'intent',\n\t\t\t\t\t\tvalue: deleteDataActionIntent,\n\t\t\t\t\t})}\n\t\t\t\t\tvariant={dc.doubleCheck ? 'destructive' : 'default'}\n\t\t\t\t\tstatus={fetcher.state !== 'idle' ? 'pending' : 'idle'}\n\t\t\t\t>\n\t\t\t\t\t<Icon name=\"trash\">\n\t\t\t\t\t\t{dc.doubleCheck ? `Are you sure?` : `Delete all your data`}\n\t\t\t\t\t</Icon>\n\t\t\t\t</StatusButton>\n\t\t\t</fetcher.Form>\n\t\t</div>\n\t)\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\tredirect,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n} from '@remix-run/node'\nimport { Form, Link, useActionData } from '@remix-run/react'\nimport { z } from 'zod'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport {\n\tgetPasswordHash,\n\trequireUserId,\n\tverifyUserPassword,\n} from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { PasswordSchema } from '#app/utils/user-validation.ts'\nimport { type BreadcrumbHandle } from './profile.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"dots-horizontal\">Password</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nconst ChangePasswordForm = z\n\t.object({\n\t\tcurrentPassword: PasswordSchema,\n\t\tnewPassword: PasswordSchema,\n\t\tconfirmNewPassword: PasswordSchema,\n\t})\n\t.superRefine(({ confirmNewPassword, newPassword }, ctx) => {\n\t\tif (confirmNewPassword !== newPassword) {\n\t\t\tctx.addIssue({\n\t\t\t\tpath: ['confirmNewPassword'],\n\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\tmessage: 'The passwords must match',\n\t\t\t})\n\t\t}\n\t})\n\nasync function requirePassword(userId: string) {\n\tconst password = await prisma.password.findUnique({\n\t\tselect: { userId: true },\n\t\twhere: { userId },\n\t})\n\tif (!password) {\n\t\tthrow redirect('/settings/profile/password/create')\n\t}\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tawait requirePassword(userId)\n\treturn json({})\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tawait requirePassword(userId)\n\tconst formData = await request.formData()\n\tconst submission = await parseWithZod(formData, {\n\t\tasync: true,\n\t\tschema: ChangePasswordForm.superRefine(\n\t\t\tasync ({ currentPassword, newPassword }, ctx) => {\n\t\t\t\tif (currentPassword && newPassword) {\n\t\t\t\t\tconst user = await verifyUserPassword({ id: userId }, currentPassword)\n\t\t\t\t\tif (!user) {\n\t\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\t\tpath: ['currentPassword'],\n\t\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\t\tmessage: 'Incorrect password.',\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t),\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{\n\t\t\t\tresult: submission.reply({\n\t\t\t\t\thideFields: ['currentPassword', 'newPassword', 'confirmNewPassword'],\n\t\t\t\t}),\n\t\t\t},\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { newPassword } = submission.value\n\n\tawait prisma.user.update({\n\t\tselect: { username: true },\n\t\twhere: { id: userId },\n\t\tdata: {\n\t\t\tpassword: {\n\t\t\t\tupdate: {\n\t\t\t\t\thash: await getPasswordHash(newPassword),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n\n\treturn redirectWithToast(\n\t\t`/settings/profile`,\n\t\t{\n\t\t\ttype: 'success',\n\t\t\ttitle: 'Password Changed',\n\t\t\tdescription: 'Your password has been changed.',\n\t\t},\n\t\t{ status: 302 },\n\t)\n}\n\nexport default function ChangePasswordRoute() {\n\tconst actionData = useActionData<typeof action>()\n\tconst isPending = useIsPending()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'password-change-form',\n\t\tconstraint: getZodConstraint(ChangePasswordForm),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ChangePasswordForm })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<Form method=\"POST\" {...getFormProps(form)} className=\"mx-auto max-w-md\">\n\t\t\t<Field\n\t\t\t\tlabelProps={{ children: 'Current Password' }}\n\t\t\t\tinputProps={{\n\t\t\t\t\t...getInputProps(fields.currentPassword, { type: 'password' }),\n\t\t\t\t\tautoComplete: 'current-password',\n\t\t\t\t}}\n\t\t\t\terrors={fields.currentPassword.errors}\n\t\t\t/>\n\t\t\t<Field\n\t\t\t\tlabelProps={{ children: 'New Password' }}\n\t\t\t\tinputProps={{\n\t\t\t\t\t...getInputProps(fields.newPassword, { type: 'password' }),\n\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t}}\n\t\t\t\terrors={fields.newPassword.errors}\n\t\t\t/>\n\t\t\t<Field\n\t\t\t\tlabelProps={{ children: 'Confirm New Password' }}\n\t\t\t\tinputProps={{\n\t\t\t\t\t...getInputProps(fields.confirmNewPassword, {\n\t\t\t\t\t\ttype: 'password',\n\t\t\t\t\t}),\n\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t}}\n\t\t\t\terrors={fields.confirmNewPassword.errors}\n\t\t\t/>\n\t\t\t<ErrorList id={form.errorId} errors={form.errors} />\n\t\t\t<div className=\"grid w-full grid-cols-2 gap-6\">\n\t\t\t\t<Button variant=\"secondary\" asChild>\n\t\t\t\t\t<Link to=\"..\">Cancel</Link>\n\t\t\t\t</Button>\n\t\t\t\t<StatusButton\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tstatus={isPending ? 'pending' : form.status ?? 'idle'}\n\t\t\t\t>\n\t\t\t\t\tChange Password\n\t\t\t\t</StatusButton>\n\t\t\t</div>\n\t\t</Form>\n\t)\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\tredirect,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n} from '@remix-run/node'\nimport { Form, Link, useActionData } from '@remix-run/react'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { getPasswordHash, requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { PasswordAndConfirmPasswordSchema } from '#app/utils/user-validation.ts'\nimport { type BreadcrumbHandle } from './profile.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"dots-horizontal\">Password</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nconst CreatePasswordForm = PasswordAndConfirmPasswordSchema\n\nasync function requireNoPassword(userId: string) {\n\tconst password = await prisma.password.findUnique({\n\t\tselect: { userId: true },\n\t\twhere: { userId },\n\t})\n\tif (password) {\n\t\tthrow redirect('/settings/profile/password')\n\t}\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tawait requireNoPassword(userId)\n\treturn json({})\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tawait requireNoPassword(userId)\n\tconst formData = await request.formData()\n\tconst submission = await parseWithZod(formData, {\n\t\tasync: true,\n\t\tschema: CreatePasswordForm,\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{\n\t\t\t\tresult: submission.reply({\n\t\t\t\t\thideFields: ['password', 'confirmPassword'],\n\t\t\t\t}),\n\t\t\t},\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { password } = submission.value\n\n\tawait prisma.user.update({\n\t\tselect: { username: true },\n\t\twhere: { id: userId },\n\t\tdata: {\n\t\t\tpassword: {\n\t\t\t\tcreate: {\n\t\t\t\t\thash: await getPasswordHash(password),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n\n\treturn redirect(`/settings/profile`, { status: 302 })\n}\n\nexport default function CreatePasswordRoute() {\n\tconst actionData = useActionData<typeof action>()\n\tconst isPending = useIsPending()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'password-create-form',\n\t\tconstraint: getZodConstraint(CreatePasswordForm),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: CreatePasswordForm })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<Form method=\"POST\" {...getFormProps(form)} className=\"mx-auto max-w-md\">\n\t\t\t<Field\n\t\t\t\tlabelProps={{ children: 'New Password' }}\n\t\t\t\tinputProps={{\n\t\t\t\t\t...getInputProps(fields.password, { type: 'password' }),\n\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t}}\n\t\t\t\terrors={fields.password.errors}\n\t\t\t/>\n\t\t\t<Field\n\t\t\t\tlabelProps={{ children: 'Confirm New Password' }}\n\t\t\t\tinputProps={{\n\t\t\t\t\t...getInputProps(fields.confirmPassword, {\n\t\t\t\t\t\ttype: 'password',\n\t\t\t\t\t}),\n\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t}}\n\t\t\t\terrors={fields.confirmPassword.errors}\n\t\t\t/>\n\t\t\t<ErrorList id={form.errorId} errors={form.errors} />\n\t\t\t<div className=\"grid w-full grid-cols-2 gap-6\">\n\t\t\t\t<Button variant=\"secondary\" asChild>\n\t\t\t\t\t<Link to=\"..\">Cancel</Link>\n\t\t\t\t</Button>\n\t\t\t\t<StatusButton\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tstatus={isPending ? 'pending' : form.status ?? 'idle'}\n\t\t\t\t>\n\t\t\t\t\tCreate Password\n\t\t\t\t</StatusButton>\n\t\t\t</div>\n\t\t</Form>\n\t)\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { invariantResponse } from '@epic-web/invariant'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\tredirect,\n\tunstable_createMemoryUploadHandler,\n\tunstable_parseMultipartFormData,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n} from '@remix-run/node'\nimport {\n\tForm,\n\tuseActionData,\n\tuseLoaderData,\n\tuseNavigation,\n} from '@remix-run/react'\nimport { useState } from 'react'\nimport { z } from 'zod'\nimport { ErrorList } from '#app/components/forms.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport {\n\tgetUserImgSrc,\n\tuseDoubleCheck,\n\tuseIsPending,\n} from '#app/utils/misc.tsx'\nimport { type BreadcrumbHandle } from './profile.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"avatar\">Photo</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nconst MAX_SIZE = 1024 * 1024 * 3 // 3MB\n\nconst DeleteImageSchema = z.object({\n\tintent: z.literal('delete'),\n})\n\nconst NewImageSchema = z.object({\n\tintent: z.literal('submit'),\n\tphotoFile: z\n\t\t.instanceof(File)\n\t\t.refine(file => file.size > 0, 'Image is required')\n\t\t.refine(file => file.size <= MAX_SIZE, 'Image size must be less than 3MB'),\n})\n\nconst PhotoFormSchema = z.discriminatedUnion('intent', [\n\tDeleteImageSchema,\n\tNewImageSchema,\n])\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst user = await prisma.user.findUnique({\n\t\twhere: { id: userId },\n\t\tselect: {\n\t\t\tid: true,\n\t\t\tname: true,\n\t\t\tusername: true,\n\t\t\timage: { select: { id: true } },\n\t\t},\n\t})\n\tinvariantResponse(user, 'User not found', { status: 404 })\n\treturn json({ user })\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await unstable_parseMultipartFormData(\n\t\trequest,\n\t\tunstable_createMemoryUploadHandler({ maxPartSize: MAX_SIZE }),\n\t)\n\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: PhotoFormSchema.transform(async data => {\n\t\t\tif (data.intent === 'delete') return { intent: 'delete' }\n\t\t\tif (data.photoFile.size <= 0) return z.NEVER\n\t\t\treturn {\n\t\t\t\tintent: data.intent,\n\t\t\t\timage: {\n\t\t\t\t\tcontentType: data.photoFile.type,\n\t\t\t\t\tblob: Buffer.from(await data.photoFile.arrayBuffer()),\n\t\t\t\t},\n\t\t\t}\n\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { image, intent } = submission.value\n\n\tif (intent === 'delete') {\n\t\tawait prisma.userImage.deleteMany({ where: { userId } })\n\t\treturn redirect('/settings/profile')\n\t}\n\n\tawait prisma.$transaction(async $prisma => {\n\t\tawait $prisma.userImage.deleteMany({ where: { userId } })\n\t\tawait $prisma.user.update({\n\t\t\twhere: { id: userId },\n\t\t\tdata: { image: { create: image } },\n\t\t})\n\t})\n\n\treturn redirect('/settings/profile')\n}\n\nexport default function PhotoRoute() {\n\tconst data = useLoaderData<typeof loader>()\n\n\tconst doubleCheckDeleteImage = useDoubleCheck()\n\n\tconst actionData = useActionData<typeof action>()\n\tconst navigation = useNavigation()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'profile-photo',\n\t\tconstraint: getZodConstraint(PhotoFormSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: PhotoFormSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\tconst isPending = useIsPending()\n\tconst pendingIntent = isPending ? navigation.formData?.get('intent') : null\n\tconst lastSubmissionIntent = fields.intent.value\n\n\tconst [newImageSrc, setNewImageSrc] = useState<string | null>(null)\n\n\treturn (\n\t\t<div>\n\t\t\t<Form\n\t\t\t\tmethod=\"POST\"\n\t\t\t\tencType=\"multipart/form-data\"\n\t\t\t\tclassName=\"flex flex-col items-center justify-center gap-10\"\n\t\t\t\tonReset={() => setNewImageSrc(null)}\n\t\t\t\t{...getFormProps(form)}\n\t\t\t>\n\t\t\t\t<img\n\t\t\t\t\tsrc={\n\t\t\t\t\t\tnewImageSrc ?? (data.user ? getUserImgSrc(data.user.image?.id) : '')\n\t\t\t\t\t}\n\t\t\t\t\tclassName=\"h-52 w-52 rounded-full object-cover\"\n\t\t\t\t\talt={data.user?.name ?? data.user?.username}\n\t\t\t\t/>\n\t\t\t\t<ErrorList errors={fields.photoFile.errors} id={fields.photoFile.id} />\n\t\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t\t{/*\n\t\t\t\t\t\tWe're doing some kinda odd things to make it so this works well\n\t\t\t\t\t\twithout JavaScript. Basically, we're using CSS to ensure the right\n\t\t\t\t\t\tbuttons show up based on the input's \"valid\" state (whether or not\n\t\t\t\t\t\tan image has been selected). Progressive enhancement FTW!\n\t\t\t\t\t*/}\n\t\t\t\t\t<input\n\t\t\t\t\t\t{...getInputProps(fields.photoFile, { type: 'file' })}\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\tclassName=\"peer sr-only\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\ttabIndex={newImageSrc ? -1 : 0}\n\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\tconst file = e.currentTarget.files?.[0]\n\t\t\t\t\t\t\tif (file) {\n\t\t\t\t\t\t\t\tconst reader = new FileReader()\n\t\t\t\t\t\t\t\treader.onload = event => {\n\t\t\t\t\t\t\t\t\tsetNewImageSrc(event.target?.result?.toString() ?? null)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treader.readAsDataURL(file)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tasChild\n\t\t\t\t\t\tclassName=\"cursor-pointer peer-valid:hidden peer-focus-within:ring-2 peer-focus-visible:ring-2\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<label htmlFor={fields.photoFile.id}>\n\t\t\t\t\t\t\t<Icon name=\"pencil-1\">Change</Icon>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<StatusButton\n\t\t\t\t\t\tname=\"intent\"\n\t\t\t\t\t\tvalue=\"submit\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tclassName=\"peer-invalid:hidden\"\n\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\tpendingIntent === 'submit'\n\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t: lastSubmissionIntent === 'submit'\n\t\t\t\t\t\t\t\t\t? form.status ?? 'idle'\n\t\t\t\t\t\t\t\t\t: 'idle'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave Photo\n\t\t\t\t\t</StatusButton>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"destructive\"\n\t\t\t\t\t\tclassName=\"peer-invalid:hidden\"\n\t\t\t\t\t\t{...form.reset.getButtonProps()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon name=\"trash\">Reset</Icon>\n\t\t\t\t\t</Button>\n\t\t\t\t\t{data.user.image?.id ? (\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\tclassName=\"peer-valid:hidden\"\n\t\t\t\t\t\t\tvariant=\"destructive\"\n\t\t\t\t\t\t\t{...doubleCheckDeleteImage.getButtonProps({\n\t\t\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t\t\t\tname: 'intent',\n\t\t\t\t\t\t\t\tvalue: 'delete',\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\t\tpendingIntent === 'delete'\n\t\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t\t: lastSubmissionIntent === 'delete'\n\t\t\t\t\t\t\t\t\t\t? form.status ?? 'idle'\n\t\t\t\t\t\t\t\t\t\t: 'idle'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon name=\"trash\">\n\t\t\t\t\t\t\t\t{doubleCheckDeleteImage.doubleCheck\n\t\t\t\t\t\t\t\t\t? 'Are you sure?'\n\t\t\t\t\t\t\t\t\t: 'Delete'}\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<ErrorList errors={form.errors} />\n\t\t\t</Form>\n\t\t</div>\n\t)\n}\n","import { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n} from '@remix-run/node'\nimport { useFetcher } from '@remix-run/react'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireRecentVerification } from '#app/routes/_auth+/verify.server.ts'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { useDoubleCheck } from '#app/utils/misc.tsx'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { type BreadcrumbHandle } from './profile.tsx'\nimport { twoFAVerificationType } from './profile.two-factor.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"lock-open-1\">Disable</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tawait requireRecentVerification(request)\n\treturn json({})\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tawait requireRecentVerification(request)\n\tconst userId = await requireUserId(request)\n\tawait prisma.verification.delete({\n\t\twhere: { target_type: { target: userId, type: twoFAVerificationType } },\n\t})\n\treturn redirectWithToast('/settings/profile/two-factor', {\n\t\ttitle: '2FA Disabled',\n\t\tdescription: 'Two factor authentication has been disabled.',\n\t})\n}\n\nexport default function TwoFactorDisableRoute() {\n\tconst disable2FAFetcher = useFetcher<typeof action>()\n\tconst dc = useDoubleCheck()\n\n\treturn (\n\t\t<div className=\"mx-auto max-w-sm\">\n\t\t\t<disable2FAFetcher.Form method=\"POST\">\n\t\t\t\t<p>\n\t\t\t\t\tDisabling two factor authentication is not recommended. However, if\n\t\t\t\t\tyou would like to do so, click here:\n\t\t\t\t</p>\n\t\t\t\t<StatusButton\n\t\t\t\t\tvariant=\"destructive\"\n\t\t\t\t\tstatus={disable2FAFetcher.state === 'loading' ? 'pending' : 'idle'}\n\t\t\t\t\t{...dc.getButtonProps({\n\t\t\t\t\t\tclassName: 'mx-auto',\n\t\t\t\t\t\tname: 'intent',\n\t\t\t\t\t\tvalue: 'disable',\n\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t{dc.doubleCheck ? 'Are you sure?' : 'Disable 2FA'}\n\t\t\t\t</StatusButton>\n\t\t\t</disable2FAFetcher.Form>\n\t\t</div>\n\t)\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\tredirect,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n} from '@remix-run/node'\nimport {\n\tForm,\n\tuseActionData,\n\tuseLoaderData,\n\tuseNavigation,\n} from '@remix-run/react'\nimport * as QRCode from 'qrcode'\nimport { z } from 'zod'\nimport { ErrorList, OTPField } from '#app/components/forms.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { isCodeValid } from '#app/routes/_auth+/verify.server.ts'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { getDomainUrl, useIsPending } from '#app/utils/misc.tsx'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { getTOTPAuthUri } from '#app/utils/totp.server.ts'\nimport { type BreadcrumbHandle } from './profile.tsx'\nimport { twoFAVerificationType } from './profile.two-factor.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"check\">Verify</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nconst CancelSchema = z.object({ intent: z.literal('cancel') })\nconst VerifySchema = z.object({\n\tintent: z.literal('verify'),\n\tcode: z.string().min(6).max(6),\n})\n\nconst ActionSchema = z.discriminatedUnion('intent', [\n\tCancelSchema,\n\tVerifySchema,\n])\n\nexport const twoFAVerifyVerificationType = '2fa-verify'\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst verification = await prisma.verification.findUnique({\n\t\twhere: {\n\t\t\ttarget_type: { type: twoFAVerifyVerificationType, target: userId },\n\t\t},\n\t\tselect: {\n\t\t\tid: true,\n\t\t\talgorithm: true,\n\t\t\tsecret: true,\n\t\t\tperiod: true,\n\t\t\tdigits: true,\n\t\t},\n\t})\n\tif (!verification) {\n\t\treturn redirect('/settings/profile/two-factor')\n\t}\n\tconst user = await prisma.user.findUniqueOrThrow({\n\t\twhere: { id: userId },\n\t\tselect: { email: true },\n\t})\n\tconst issuer = new URL(getDomainUrl(request)).host\n\tconst otpUri = getTOTPAuthUri({\n\t\t...verification,\n\t\taccountName: user.email,\n\t\tissuer,\n\t})\n\tconst qrCode = await QRCode.toDataURL(otpUri)\n\treturn json({ otpUri, qrCode })\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await request.formData()\n\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: () =>\n\t\t\tActionSchema.superRefine(async (data, ctx) => {\n\t\t\t\tif (data.intent === 'cancel') return null\n\t\t\t\tconst codeIsValid = await isCodeValid({\n\t\t\t\t\tcode: data.code,\n\t\t\t\t\ttype: twoFAVerifyVerificationType,\n\t\t\t\t\ttarget: userId,\n\t\t\t\t})\n\t\t\t\tif (!codeIsValid) {\n\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\tpath: ['code'],\n\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\tmessage: `Invalid code`,\n\t\t\t\t\t})\n\t\t\t\t\treturn z.NEVER\n\t\t\t\t}\n\t\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tswitch (submission.value.intent) {\n\t\tcase 'cancel': {\n\t\t\tawait prisma.verification.deleteMany({\n\t\t\t\twhere: { type: twoFAVerifyVerificationType, target: userId },\n\t\t\t})\n\t\t\treturn redirect('/settings/profile/two-factor')\n\t\t}\n\t\tcase 'verify': {\n\t\t\tawait prisma.verification.update({\n\t\t\t\twhere: {\n\t\t\t\t\ttarget_type: { type: twoFAVerifyVerificationType, target: userId },\n\t\t\t\t},\n\t\t\t\tdata: { type: twoFAVerificationType },\n\t\t\t})\n\t\t\treturn redirectWithToast('/settings/profile/two-factor', {\n\t\t\t\ttype: 'success',\n\t\t\t\ttitle: 'Enabled',\n\t\t\t\tdescription: 'Two-factor authentication has been enabled.',\n\t\t\t})\n\t\t}\n\t}\n}\n\nexport default function TwoFactorRoute() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst actionData = useActionData<typeof action>()\n\tconst navigation = useNavigation()\n\n\tconst isPending = useIsPending()\n\tconst pendingIntent = isPending ? navigation.formData?.get('intent') : null\n\n\tconst [form, fields] = useForm({\n\t\tid: 'verify-form',\n\t\tconstraint: getZodConstraint(ActionSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ActionSchema })\n\t\t},\n\t})\n\tconst lastSubmissionIntent = fields.intent.value\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"flex flex-col items-center gap-4\">\n\t\t\t\t<img alt=\"qr code\" src={data.qrCode} className=\"h-56 w-56\" />\n\t\t\t\t<p>Scan this QR code with your authenticator app.</p>\n\t\t\t\t<p className=\"text-sm\">\n\t\t\t\t\tIf you cannot scan the QR code, you can manually add this account to\n\t\t\t\t\tyour authenticator app using this code:\n\t\t\t\t</p>\n\t\t\t\t<div className=\"p-3\">\n\t\t\t\t\t<pre\n\t\t\t\t\t\tclassName=\"whitespace-pre-wrap break-all text-sm\"\n\t\t\t\t\t\taria-label=\"One-time Password URI\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{data.otpUri}\n\t\t\t\t\t</pre>\n\t\t\t\t</div>\n\t\t\t\t<p className=\"text-sm\">\n\t\t\t\t\tOnce you've added the account, enter the code from your authenticator\n\t\t\t\t\tapp below. Once you enable 2FA, you will need to enter a code from\n\t\t\t\t\tyour authenticator app every time you log in or perform important\n\t\t\t\t\tactions. Do not lose access to your authenticator app, or you will\n\t\t\t\t\tlose access to your account.\n\t\t\t\t</p>\n\t\t\t\t<div className=\"flex w-full max-w-xs flex-col justify-center gap-4\">\n\t\t\t\t\t<Form method=\"POST\" {...getFormProps(form)} className=\"flex-1\">\n\t\t\t\t\t\t<div className=\"flex items-center justify-center\">\n\t\t\t\t\t\t\t<OTPField\n\t\t\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\t\t\thtmlFor: fields.code.id,\n\t\t\t\t\t\t\t\t\tchildren: 'Code',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t...getInputProps(fields.code, { type: 'text' }),\n\t\t\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t\t\t\tautoComplete: 'one-time-code',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terrors={fields.code.errors}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"min-h-[32px] px-4 pb-3 pt-1\">\n\t\t\t\t\t\t\t<ErrorList id={form.errorId} errors={form.errors} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"flex justify-between gap-4\">\n\t\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\t\t\tpendingIntent === 'verify'\n\t\t\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t\t\t: lastSubmissionIntent === 'verify'\n\t\t\t\t\t\t\t\t\t\t\t? form.status ?? 'idle'\n\t\t\t\t\t\t\t\t\t\t\t: 'idle'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tname=\"intent\"\n\t\t\t\t\t\t\t\tvalue=\"verify\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\t\t\tpendingIntent === 'cancel'\n\t\t\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t\t\t: lastSubmissionIntent === 'cancel'\n\t\t\t\t\t\t\t\t\t\t\t? form.status ?? 'idle'\n\t\t\t\t\t\t\t\t\t\t\t: 'idle'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tname=\"intent\"\n\t\t\t\t\t\t\t\tvalue=\"cancel\"\n\t\t\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\tredirect,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n} from '@remix-run/node'\nimport { Link, useFetcher, useLoaderData } from '@remix-run/react'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { generateTOTP } from '#app/utils/totp.server.ts'\nimport { twoFAVerificationType } from './profile.two-factor.tsx'\nimport { twoFAVerifyVerificationType } from './profile.two-factor.verify.tsx'\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst verification = await prisma.verification.findUnique({\n\t\twhere: { target_type: { type: twoFAVerificationType, target: userId } },\n\t\tselect: { id: true },\n\t})\n\treturn json({ is2FAEnabled: Boolean(verification) })\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst { otp: _otp, ...config } = generateTOTP()\n\tconst verificationData = {\n\t\t...config,\n\t\ttype: twoFAVerifyVerificationType,\n\t\ttarget: userId,\n\t}\n\tawait prisma.verification.upsert({\n\t\twhere: {\n\t\t\ttarget_type: { target: userId, type: twoFAVerifyVerificationType },\n\t\t},\n\t\tcreate: verificationData,\n\t\tupdate: verificationData,\n\t})\n\treturn redirect('/settings/profile/two-factor/verify')\n}\n\nexport default function TwoFactorRoute() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst enable2FAFetcher = useFetcher<typeof action>()\n\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t{data.is2FAEnabled ? (\n\t\t\t\t<>\n\t\t\t\t\t<p className=\"text-lg\">\n\t\t\t\t\t\t<Icon name=\"check\">\n\t\t\t\t\t\t\tYou have enabled two-factor authentication.\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</p>\n\t\t\t\t\t<Link to=\"disable\">\n\t\t\t\t\t\t<Icon name=\"lock-open-1\">Disable 2FA</Icon>\n\t\t\t\t\t</Link>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<Icon name=\"lock-open-1\">\n\t\t\t\t\t\t\tYou have not enabled two-factor authentication yet.\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className=\"text-sm\">\n\t\t\t\t\t\tTwo factor authentication adds an extra layer of security to your\n\t\t\t\t\t\taccount. You will need to enter a code from an authenticator app\n\t\t\t\t\t\tlike{' '}\n\t\t\t\t\t\t<a className=\"underline\" href=\"https://1password.com/\">\n\t\t\t\t\t\t\t1Password\n\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\tto log in.\n\t\t\t\t\t</p>\n\t\t\t\t\t<enable2FAFetcher.Form method=\"POST\">\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tname=\"intent\"\n\t\t\t\t\t\t\tvalue=\"enable\"\n\t\t\t\t\t\t\tstatus={enable2FAFetcher.state === 'loading' ? 'pending' : 'idle'}\n\t\t\t\t\t\t\tclassName=\"mx-auto\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tEnable 2FA\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</enable2FAFetcher.Form>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","import { invariantResponse } from '@epic-web/invariant'\nimport { json, type LoaderFunctionArgs } from '@remix-run/node'\nimport { Form, Link, useLoaderData, type MetaFunction } from '@remix-run/react'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { getUserImgSrc } from '#app/utils/misc.tsx'\nimport { useOptionalUser } from '#app/utils/user.ts'\n\nexport async function loader({ params }: LoaderFunctionArgs) {\n\tconst user = await prisma.user.findFirst({\n\t\tselect: {\n\t\t\tid: true,\n\t\t\tname: true,\n\t\t\tusername: true,\n\t\t\tcreatedAt: true,\n\t\t\timage: { select: { id: true } },\n\t\t},\n\t\twhere: {\n\t\t\tusername: params.username,\n\t\t},\n\t})\n\n\tinvariantResponse(user, 'User not found', { status: 404 })\n\n\treturn json({ user, userJoinedDisplay: user.createdAt.toLocaleDateString() })\n}\n\nexport default function ProfileRoute() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst user = data.user\n\tconst userDisplayName = user.name ?? user.username\n\tconst loggedInUser = useOptionalUser()\n\tconst isLoggedInUser = data.user.id === loggedInUser?.id\n\n\treturn (\n\t\t<div className=\"container mb-48 mt-36 flex flex-col items-center justify-center\">\n\t\t\t<Spacer size=\"4xs\" />\n\n\t\t\t<div className=\"container flex flex-col items-center rounded-3xl bg-muted p-12\">\n\t\t\t\t<div className=\"relative w-52\">\n\t\t\t\t\t<div className=\"absolute -top-40\">\n\t\t\t\t\t\t<div className=\"relative\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={getUserImgSrc(data.user.image?.id)}\n\t\t\t\t\t\t\t\talt={userDisplayName}\n\t\t\t\t\t\t\t\tclassName=\"h-52 w-52 rounded-full object-cover\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Spacer size=\"sm\" />\n\n\t\t\t\t<div className=\"flex flex-col items-center\">\n\t\t\t\t\t<div className=\"flex flex-wrap items-center justify-center gap-4\">\n\t\t\t\t\t\t<h1 className=\"text-center text-h2\">{userDisplayName}</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className=\"mt-2 text-center text-muted-foreground\">\n\t\t\t\t\t\tJoined {data.userJoinedDisplay}\n\t\t\t\t\t</p>\n\t\t\t\t\t{isLoggedInUser ? (\n\t\t\t\t\t\t<Form action=\"/logout\" method=\"POST\" className=\"mt-3\">\n\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"link\" size=\"pill\">\n\t\t\t\t\t\t\t\t<Icon name=\"exit\" className=\"scale-125 max-md:scale-150\">\n\t\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<div className=\"mt-10 flex gap-4\">\n\t\t\t\t\t\t{isLoggedInUser ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Button asChild>\n\t\t\t\t\t\t\t\t\t<Link to=\"notes\" prefetch=\"intent\">\n\t\t\t\t\t\t\t\t\t\tMy notes\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button asChild>\n\t\t\t\t\t\t\t\t\t<Link to=\"/settings/profile\" prefetch=\"intent\">\n\t\t\t\t\t\t\t\t\t\tEdit profile\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Button asChild>\n\t\t\t\t\t\t\t\t<Link to=\"notes\" prefetch=\"intent\">\n\t\t\t\t\t\t\t\t\t{userDisplayName}'s notes\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport const meta: MetaFunction<typeof loader> = ({ data, params }) => {\n\tconst displayName = data?.user.name ?? params.username\n\treturn [\n\t\t{ title: `${displayName} | Epic Notes` },\n\t\t{\n\t\t\tname: 'description',\n\t\t\tcontent: `Profile of ${displayName} on Epic Notes`,\n\t\t},\n\t]\n}\n\nexport function ErrorBoundary() {\n\treturn (\n\t\t<GeneralErrorBoundary\n\t\t\tstatusHandlers={{\n\t\t\t\t404: ({ params }) => (\n\t\t\t\t\t<p>No user with the username \"{params.username}\" exists</p>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import { invariantResponse } from '@epic-web/invariant'\nimport { json, type LoaderFunctionArgs } from '@remix-run/node'\nimport { Link, NavLink, Outlet, useLoaderData } from '@remix-run/react'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { cn, getUserImgSrc } from '#app/utils/misc.tsx'\nimport { useOptionalUser } from '#app/utils/user.ts'\n\nexport async function loader({ params }: LoaderFunctionArgs) {\n\tconst owner = await prisma.user.findFirst({\n\t\tselect: {\n\t\t\tid: true,\n\t\t\tname: true,\n\t\t\tusername: true,\n\t\t\timage: { select: { id: true } },\n\t\t\tnotes: { select: { id: true, title: true } },\n\t\t},\n\t\twhere: { username: params.username },\n\t})\n\n\tinvariantResponse(owner, 'Owner not found', { status: 404 })\n\n\treturn json({ owner })\n}\n\nexport default function NotesRoute() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst user = useOptionalUser()\n\tconst isOwner = user?.id === data.owner.id\n\tconst ownerDisplayName = data.owner.name ?? data.owner.username\n\tconst navLinkDefaultClassName =\n\t\t'line-clamp-2 block rounded-l-full py-2 pl-8 pr-6 text-base lg:text-xl'\n\treturn (\n\t\t<main className=\"container flex h-full min-h-[400px] px-0 pb-12 md:px-8\">\n\t\t\t<div className=\"grid w-full grid-cols-4 bg-muted pl-2 md:container md:rounded-3xl md:pr-0\">\n\t\t\t\t<div className=\"relative col-span-1\">\n\t\t\t\t\t<div className=\"absolute inset-0 flex flex-col\">\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto={`/users/${data.owner.username}`}\n\t\t\t\t\t\t\tclassName=\"flex flex-col items-center justify-center gap-2 bg-muted pb-4 pl-8 pr-4 pt-12 lg:flex-row lg:justify-start lg:gap-4\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={getUserImgSrc(data.owner.image?.id)}\n\t\t\t\t\t\t\t\talt={ownerDisplayName}\n\t\t\t\t\t\t\t\tclassName=\"h-16 w-16 rounded-full object-cover lg:h-24 lg:w-24\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<h1 className=\"text-center text-base font-bold md:text-lg lg:text-left lg:text-2xl\">\n\t\t\t\t\t\t\t\t{ownerDisplayName}'s Notes\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<ul className=\"overflow-y-auto overflow-x-hidden pb-12\">\n\t\t\t\t\t\t\t{isOwner ? (\n\t\t\t\t\t\t\t\t<li className=\"p-1 pr-0\">\n\t\t\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\t\t\tto=\"new\"\n\t\t\t\t\t\t\t\t\t\tclassName={({ isActive }) =>\n\t\t\t\t\t\t\t\t\t\t\tcn(navLinkDefaultClassName, isActive && 'bg-accent')\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Icon name=\"plus\">New Note</Icon>\n\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t{data.owner.notes.map(note => (\n\t\t\t\t\t\t\t\t<li key={note.id} className=\"p-1 pr-0\">\n\t\t\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\t\t\tto={note.id}\n\t\t\t\t\t\t\t\t\t\tpreventScrollReset\n\t\t\t\t\t\t\t\t\t\tprefetch=\"intent\"\n\t\t\t\t\t\t\t\t\t\tclassName={({ isActive }) =>\n\t\t\t\t\t\t\t\t\t\t\tcn(navLinkDefaultClassName, isActive && 'bg-accent')\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{note.title}\n\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"relative col-span-3 bg-accent md:rounded-r-3xl\">\n\t\t\t\t\t<Outlet />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</main>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn (\n\t\t<GeneralErrorBoundary\n\t\t\tstatusHandlers={{\n\t\t\t\t404: ({ params }) => (\n\t\t\t\t\t<p>No user with the username \"{params.username}\" exists</p>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t)\n}\n","export const floatingToolbarClassName =\n\t'absolute bottom-3 left-3 right-3 flex items-center gap-2 rounded-lg bg-muted/80 p-4 pl-5 shadow-xl shadow-accent backdrop-blur-sm md:gap-4 md:pl-7 justify-end'\n","import { getFormProps, useForm } from '@conform-to/react'\nimport { parseWithZod } from '@conform-to/zod'\nimport { invariantResponse } from '@epic-web/invariant'\nimport {\n\tjson,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n} from '@remix-run/node'\nimport {\n\tForm,\n\tLink,\n\tuseActionData,\n\tuseLoaderData,\n\ttype MetaFunction,\n} from '@remix-run/react'\nimport { formatDistanceToNow } from 'date-fns'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { floatingToolbarClassName } from '#app/components/floating-toolbar.tsx'\nimport { ErrorList } from '#app/components/forms.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { getNoteImgSrc, useIsPending } from '#app/utils/misc.tsx'\nimport { requireUserWithPermission } from '#app/utils/permissions.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { userHasPermission, useOptionalUser } from '#app/utils/user.ts'\nimport { type loader as notesLoader } from './notes.tsx'\n\nexport async function loader({ params }: LoaderFunctionArgs) {\n\tconst note = await prisma.note.findUnique({\n\t\twhere: { id: params.noteId },\n\t\tselect: {\n\t\t\tid: true,\n\t\t\ttitle: true,\n\t\t\tcontent: true,\n\t\t\townerId: true,\n\t\t\tupdatedAt: true,\n\t\t\timages: {\n\t\t\t\tselect: {\n\t\t\t\t\tid: true,\n\t\t\t\t\taltText: true,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n\n\tinvariantResponse(note, 'Not found', { status: 404 })\n\n\tconst date = new Date(note.updatedAt)\n\tconst timeAgo = formatDistanceToNow(date)\n\n\treturn json({\n\t\tnote,\n\t\ttimeAgo,\n\t})\n}\n\nconst DeleteFormSchema = z.object({\n\tintent: z.literal('delete-note'),\n\tnoteId: z.string(),\n})\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await request.formData()\n\tconst submission = parseWithZod(formData, {\n\t\tschema: DeleteFormSchema,\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { noteId } = submission.value\n\n\tconst note = await prisma.note.findFirst({\n\t\tselect: { id: true, ownerId: true, owner: { select: { username: true } } },\n\t\twhere: { id: noteId },\n\t})\n\tinvariantResponse(note, 'Not found', { status: 404 })\n\n\tconst isOwner = note.ownerId === userId\n\tawait requireUserWithPermission(\n\t\trequest,\n\t\tisOwner ? `delete:note:own` : `delete:note:any`,\n\t)\n\n\tawait prisma.note.delete({ where: { id: note.id } })\n\n\treturn redirectWithToast(`/users/${note.owner.username}/notes`, {\n\t\ttype: 'success',\n\t\ttitle: 'Success',\n\t\tdescription: 'Your note has been deleted.',\n\t})\n}\n\nexport default function NoteRoute() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst user = useOptionalUser()\n\tconst isOwner = user?.id === data.note.ownerId\n\tconst canDelete = userHasPermission(\n\t\tuser,\n\t\tisOwner ? `delete:note:own` : `delete:note:any`,\n\t)\n\tconst displayBar = canDelete || isOwner\n\n\treturn (\n\t\t<div className=\"absolute inset-0 flex flex-col px-10\">\n\t\t\t<h2 className=\"mb-2 pt-12 text-h2 lg:mb-6\">{data.note.title}</h2>\n\t\t\t<div className={`${displayBar ? 'pb-24' : 'pb-12'} overflow-y-auto`}>\n\t\t\t\t<ul className=\"flex flex-wrap gap-5 py-5\">\n\t\t\t\t\t{data.note.images.map(image => (\n\t\t\t\t\t\t<li key={image.id}>\n\t\t\t\t\t\t\t<a href={getNoteImgSrc(image.id)}>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={getNoteImgSrc(image.id)}\n\t\t\t\t\t\t\t\t\talt={image.altText ?? ''}\n\t\t\t\t\t\t\t\t\tclassName=\"h-32 w-32 rounded-lg object-cover\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t\t<p className=\"whitespace-break-spaces text-sm md:text-lg\">\n\t\t\t\t\t{data.note.content}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t{displayBar ? (\n\t\t\t\t<div className={floatingToolbarClassName}>\n\t\t\t\t\t<span className=\"text-sm text-foreground/90 max-[524px]:hidden\">\n\t\t\t\t\t\t<Icon name=\"clock\" className=\"scale-125\">\n\t\t\t\t\t\t\t{data.timeAgo} ago\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</span>\n\t\t\t\t\t<div className=\"grid flex-1 grid-cols-2 justify-end gap-2 min-[525px]:flex md:gap-4\">\n\t\t\t\t\t\t{canDelete ? <DeleteNote id={data.note.id} /> : null}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tasChild\n\t\t\t\t\t\t\tclassName=\"min-[525px]:max-md:aspect-square min-[525px]:max-md:px-0\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Link to=\"edit\">\n\t\t\t\t\t\t\t\t<Icon name=\"pencil-1\" className=\"scale-125 max-md:scale-150\">\n\t\t\t\t\t\t\t\t\t<span className=\"max-md:hidden\">Edit</span>\n\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t)\n}\n\nexport function DeleteNote({ id }: { id: string }) {\n\tconst actionData = useActionData<typeof action>()\n\tconst isPending = useIsPending()\n\tconst [form] = useForm({\n\t\tid: 'delete-note',\n\t\tlastResult: actionData?.result,\n\t})\n\n\treturn (\n\t\t<Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t<input type=\"hidden\" name=\"noteId\" value={id} />\n\t\t\t<StatusButton\n\t\t\t\ttype=\"submit\"\n\t\t\t\tname=\"intent\"\n\t\t\t\tvalue=\"delete-note\"\n\t\t\t\tvariant=\"destructive\"\n\t\t\t\tstatus={isPending ? 'pending' : form.status ?? 'idle'}\n\t\t\t\tdisabled={isPending}\n\t\t\t\tclassName=\"w-full max-md:aspect-square max-md:px-0\"\n\t\t\t>\n\t\t\t\t<Icon name=\"trash\" className=\"scale-125 max-md:scale-150\">\n\t\t\t\t\t<span className=\"max-md:hidden\">Delete</span>\n\t\t\t\t</Icon>\n\t\t\t</StatusButton>\n\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\t\t</Form>\n\t)\n}\n\nexport const meta: MetaFunction<\n\ttypeof loader,\n\t{ 'routes/users+/$username_+/notes': typeof notesLoader }\n> = ({ data, params, matches }) => {\n\tconst notesMatch = matches.find(\n\t\tm => m.id === 'routes/users+/$username_+/notes',\n\t)\n\tconst displayName = notesMatch?.data?.owner.name ?? params.username\n\tconst noteTitle = data?.note.title ?? 'Note'\n\tconst noteContentsSummary =\n\t\tdata && data.note.content.length > 100\n\t\t\t? data?.note.content.slice(0, 97) + '...'\n\t\t\t: 'No content'\n\treturn [\n\t\t{ title: `${noteTitle} | ${displayName}'s Notes | Epic Notes` },\n\t\t{\n\t\t\tname: 'description',\n\t\t\tcontent: noteContentsSummary,\n\t\t},\n\t]\n}\n\nexport function ErrorBoundary() {\n\treturn (\n\t\t<GeneralErrorBoundary\n\t\t\tstatusHandlers={{\n\t\t\t\t403: () => <p>You are not allowed to do that</p>,\n\t\t\t\t404: ({ params }) => (\n\t\t\t\t\t<p>No note with the id \"{params.noteId}\" exists</p>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import {\n\tFormProvider,\n\tgetFieldsetProps,\n\tgetFormProps,\n\tgetInputProps,\n\tgetTextareaProps,\n\tuseForm,\n\ttype FieldMetadata,\n} from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type Note, type NoteImage } from '@prisma/client'\nimport { type SerializeFrom } from '@remix-run/node'\nimport { Form, useActionData } from '@remix-run/react'\nimport { useState } from 'react'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { floatingToolbarClassName } from '#app/components/floating-toolbar.tsx'\nimport { ErrorList, Field, TextareaField } from '#app/components/forms.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { Label } from '#app/components/ui/label.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { Textarea } from '#app/components/ui/textarea.tsx'\nimport { cn, getNoteImgSrc, useIsPending } from '#app/utils/misc.tsx'\nimport { type action } from './__note-editor.server'\n\nconst titleMinLength = 1\nconst titleMaxLength = 100\nconst contentMinLength = 1\nconst contentMaxLength = 10000\n\nexport const MAX_UPLOAD_SIZE = 1024 * 1024 * 3 // 3MB\n\nconst ImageFieldsetSchema = z.object({\n\tid: z.string().optional(),\n\tfile: z\n\t\t.instanceof(File)\n\t\t.optional()\n\t\t.refine(file => {\n\t\t\treturn !file || file.size <= MAX_UPLOAD_SIZE\n\t\t}, 'File size must be less than 3MB'),\n\taltText: z.string().optional(),\n})\n\nexport type ImageFieldset = z.infer<typeof ImageFieldsetSchema>\n\nexport const NoteEditorSchema = z.object({\n\tid: z.string().optional(),\n\ttitle: z.string().min(titleMinLength).max(titleMaxLength),\n\tcontent: z.string().min(contentMinLength).max(contentMaxLength),\n\timages: z.array(ImageFieldsetSchema).max(5).optional(),\n})\n\nexport function NoteEditor({\n\tnote,\n}: {\n\tnote?: SerializeFrom<\n\t\tPick<Note, 'id' | 'title' | 'content'> & {\n\t\t\timages: Array<Pick<NoteImage, 'id' | 'altText'>>\n\t\t}\n\t>\n}) {\n\tconst actionData = useActionData<typeof action>()\n\tconst isPending = useIsPending()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'note-editor',\n\t\tconstraint: getZodConstraint(NoteEditorSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: NoteEditorSchema })\n\t\t},\n\t\tdefaultValue: {\n\t\t\t...note,\n\t\t\timages: note?.images ?? [{}],\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\tconst imageList = fields.images.getFieldList()\n\n\treturn (\n\t\t<div className=\"absolute inset-0\">\n\t\t\t<FormProvider context={form.context}>\n\t\t\t\t<Form\n\t\t\t\t\tmethod=\"POST\"\n\t\t\t\t\tclassName=\"flex h-full flex-col gap-y-4 overflow-y-auto overflow-x-hidden px-10 pb-28 pt-12\"\n\t\t\t\t\t{...getFormProps(form)}\n\t\t\t\t\tencType=\"multipart/form-data\"\n\t\t\t\t>\n\t\t\t\t\t{/*\n\t\t\t\t\tThis hidden submit button is here to ensure that when the user hits\n\t\t\t\t\t\"enter\" on an input field, the primary form function is submitted\n\t\t\t\t\trather than the first button in the form (which is delete/add image).\n\t\t\t\t*/}\n\t\t\t\t\t<button type=\"submit\" className=\"hidden\" />\n\t\t\t\t\t{note ? <input type=\"hidden\" name=\"id\" value={note.id} /> : null}\n\t\t\t\t\t<div className=\"flex flex-col gap-1\">\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tlabelProps={{ children: 'Title' }}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t\t\t...getInputProps(fields.title, { type: 'text' }),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\terrors={fields.title.errors}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextareaField\n\t\t\t\t\t\t\tlabelProps={{ children: 'Content' }}\n\t\t\t\t\t\t\ttextareaProps={{\n\t\t\t\t\t\t\t\t...getTextareaProps(fields.content),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\terrors={fields.content.errors}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Label>Images</Label>\n\t\t\t\t\t\t\t<ul className=\"flex flex-col gap-4\">\n\t\t\t\t\t\t\t\t{imageList.map((image, index) => {\n\t\t\t\t\t\t\t\t\tconsole.log('image.key', image.key)\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\tkey={image.key}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"relative border-b-2 border-muted-foreground\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"absolute right-0 top-0 text-foreground-destructive\"\n\t\t\t\t\t\t\t\t\t\t\t\t{...form.remove.getButtonProps({\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: fields.images.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span aria-hidden>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon name=\"cross-1\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"sr-only\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tRemove image {index + 1}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t<ImageChooser meta={image} />\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"mt-3\"\n\t\t\t\t\t\t\t{...form.insert.getButtonProps({ name: fields.images.name })}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span aria-hidden>\n\t\t\t\t\t\t\t\t<Icon name=\"plus\">Image</Icon>\n\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\t<span className=\"sr-only\">Add image</span>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ErrorList id={form.errorId} errors={form.errors} />\n\t\t\t\t</Form>\n\t\t\t\t<div className={floatingToolbarClassName}>\n\t\t\t\t\t<Button variant=\"destructive\" {...form.reset.getButtonProps()}>\n\t\t\t\t\t\tReset\n\t\t\t\t\t</Button>\n\t\t\t\t\t<StatusButton\n\t\t\t\t\t\tform={form.id}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\tstatus={isPending ? 'pending' : 'idle'}\n\t\t\t\t\t>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</StatusButton>\n\t\t\t\t</div>\n\t\t\t</FormProvider>\n\t\t</div>\n\t)\n}\n\nfunction ImageChooser({ meta }: { meta: FieldMetadata<ImageFieldset> }) {\n\tconst fields = meta.getFieldset()\n\tconst existingImage = Boolean(fields.id.initialValue)\n\tconst [previewImage, setPreviewImage] = useState<string | null>(\n\t\tfields.id.initialValue ? getNoteImgSrc(fields.id.initialValue) : null,\n\t)\n\tconst [altText, setAltText] = useState(fields.altText.initialValue ?? '')\n\n\treturn (\n\t\t<fieldset {...getFieldsetProps(meta)}>\n\t\t\t<div className=\"flex gap-3\">\n\t\t\t\t<div className=\"w-32\">\n\t\t\t\t\t<div className=\"relative h-32 w-32\">\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor={fields.file.id}\n\t\t\t\t\t\t\tclassName={cn('group absolute h-32 w-32 rounded-lg', {\n\t\t\t\t\t\t\t\t'bg-accent opacity-40 focus-within:opacity-100 hover:opacity-100':\n\t\t\t\t\t\t\t\t\t!previewImage,\n\t\t\t\t\t\t\t\t'cursor-pointer focus-within:ring-2': !existingImage,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{previewImage ? (\n\t\t\t\t\t\t\t\t<div className=\"relative\">\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tsrc={previewImage}\n\t\t\t\t\t\t\t\t\t\talt={altText ?? ''}\n\t\t\t\t\t\t\t\t\t\tclassName=\"h-32 w-32 rounded-lg object-cover\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{existingImage ? null : (\n\t\t\t\t\t\t\t\t\t\t<div className=\"pointer-events-none absolute -right-0.5 -top-0.5 rotate-12 rounded-sm bg-secondary px-2 py-1 text-xs text-secondary-foreground shadow-md\">\n\t\t\t\t\t\t\t\t\t\t\tnew\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div className=\"flex h-32 w-32 items-center justify-center rounded-lg border border-muted-foreground text-4xl text-muted-foreground\">\n\t\t\t\t\t\t\t\t\t<Icon name=\"plus\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{existingImage ? (\n\t\t\t\t\t\t\t\t<input {...getInputProps(fields.id, { type: 'hidden' })} />\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\taria-label=\"Image\"\n\t\t\t\t\t\t\t\tclassName=\"absolute left-0 top-0 z-0 h-32 w-32 cursor-pointer opacity-0\"\n\t\t\t\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\t\t\t\tconst file = event.target.files?.[0]\n\n\t\t\t\t\t\t\t\t\tif (file) {\n\t\t\t\t\t\t\t\t\t\tconst reader = new FileReader()\n\t\t\t\t\t\t\t\t\t\treader.onloadend = () => {\n\t\t\t\t\t\t\t\t\t\t\tsetPreviewImage(reader.result as string)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treader.readAsDataURL(file)\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tsetPreviewImage(null)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\t\t\t{...getInputProps(fields.file, { type: 'file' })}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"min-h-[32px] px-4 pb-3 pt-1\">\n\t\t\t\t\t\t<ErrorList id={fields.file.errorId} errors={fields.file.errors} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-1\">\n\t\t\t\t\t<Label htmlFor={fields.altText.id}>Alt Text</Label>\n\t\t\t\t\t<Textarea\n\t\t\t\t\t\tonChange={e => setAltText(e.currentTarget.value)}\n\t\t\t\t\t\t{...getTextareaProps(fields.altText)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"min-h-[32px] px-4 pb-3 pt-1\">\n\t\t\t\t\t\t<ErrorList\n\t\t\t\t\t\t\tid={fields.altText.errorId}\n\t\t\t\t\t\t\terrors={fields.altText.errors}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"min-h-[32px] px-4 pb-3 pt-1\">\n\t\t\t\t<ErrorList id={meta.errorId} errors={meta.errors} />\n\t\t\t</div>\n\t\t</fieldset>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn (\n\t\t<GeneralErrorBoundary\n\t\t\tstatusHandlers={{\n\t\t\t\t404: ({ params }) => (\n\t\t\t\t\t<p>No note with the id \"{params.noteId}\" exists</p>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import { parseWithZod } from '@conform-to/zod'\nimport { createId as cuid } from '@paralleldrive/cuid2'\nimport {\n\tunstable_createMemoryUploadHandler as createMemoryUploadHandler,\n\tjson,\n\tunstable_parseMultipartFormData as parseMultipartFormData,\n\tredirect,\n\ttype ActionFunctionArgs,\n} from '@remix-run/node'\nimport { z } from 'zod'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport {\n\tMAX_UPLOAD_SIZE,\n\tNoteEditorSchema,\n\ttype ImageFieldset,\n} from './__note-editor'\n\nfunction imageHasFile(\n\timage: ImageFieldset,\n): image is ImageFieldset & { file: NonNullable<ImageFieldset['file']> } {\n\treturn Boolean(image.file?.size && image.file?.size > 0)\n}\n\nfunction imageHasId(\n\timage: ImageFieldset,\n): image is ImageFieldset & { id: NonNullable<ImageFieldset['id']> } {\n\treturn image.id != null\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\n\tconst formData = await parseMultipartFormData(\n\t\trequest,\n\t\tcreateMemoryUploadHandler({ maxPartSize: MAX_UPLOAD_SIZE }),\n\t)\n\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: NoteEditorSchema.superRefine(async (data, ctx) => {\n\t\t\tif (!data.id) return\n\n\t\t\tconst note = await prisma.note.findUnique({\n\t\t\t\tselect: { id: true },\n\t\t\t\twhere: { id: data.id, ownerId: userId },\n\t\t\t})\n\t\t\tif (!note) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: 'Note not found',\n\t\t\t\t})\n\t\t\t}\n\t\t}).transform(async ({ images = [], ...data }) => {\n\t\t\treturn {\n\t\t\t\t...data,\n\t\t\t\timageUpdates: await Promise.all(\n\t\t\t\t\timages.filter(imageHasId).map(async i => {\n\t\t\t\t\t\tif (imageHasFile(i)) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tid: i.id,\n\t\t\t\t\t\t\t\taltText: i.altText,\n\t\t\t\t\t\t\t\tcontentType: i.file.type,\n\t\t\t\t\t\t\t\tblob: Buffer.from(await i.file.arrayBuffer()),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tid: i.id,\n\t\t\t\t\t\t\t\taltText: i.altText,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t\tnewImages: await Promise.all(\n\t\t\t\t\timages\n\t\t\t\t\t\t.filter(imageHasFile)\n\t\t\t\t\t\t.filter(i => !i.id)\n\t\t\t\t\t\t.map(async image => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\taltText: image.altText,\n\t\t\t\t\t\t\t\tcontentType: image.file.type,\n\t\t\t\t\t\t\t\tblob: Buffer.from(await image.file.arrayBuffer()),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t}\n\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst {\n\t\tid: noteId,\n\t\ttitle,\n\t\tcontent,\n\t\timageUpdates = [],\n\t\tnewImages = [],\n\t} = submission.value\n\n\tconst updatedNote = await prisma.note.upsert({\n\t\tselect: { id: true, owner: { select: { username: true } } },\n\t\twhere: { id: noteId ?? '__new_note__' },\n\t\tcreate: {\n\t\t\townerId: userId,\n\t\t\ttitle,\n\t\t\tcontent,\n\t\t\timages: { create: newImages },\n\t\t},\n\t\tupdate: {\n\t\t\ttitle,\n\t\t\tcontent,\n\t\t\timages: {\n\t\t\t\tdeleteMany: { id: { notIn: imageUpdates.map(i => i.id) } },\n\t\t\t\tupdateMany: imageUpdates.map(updates => ({\n\t\t\t\t\twhere: { id: updates.id },\n\t\t\t\t\tdata: { ...updates, id: updates.blob ? cuid() : updates.id },\n\t\t\t\t})),\n\t\t\t\tcreate: newImages,\n\t\t\t},\n\t\t},\n\t})\n\n\treturn redirect(\n\t\t`/users/${updatedNote.owner.username}/notes/${updatedNote.id}`,\n\t)\n}\n","import { invariantResponse } from '@epic-web/invariant'\nimport { json, type LoaderFunctionArgs } from '@remix-run/node'\nimport { useLoaderData } from '@remix-run/react'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { NoteEditor } from './__note-editor.tsx'\n\nexport { action } from './__note-editor.server.tsx'\n\nexport async function loader({ params, request }: LoaderFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst note = await prisma.note.findFirst({\n\t\tselect: {\n\t\t\tid: true,\n\t\t\ttitle: true,\n\t\t\tcontent: true,\n\t\t\timages: {\n\t\t\t\tselect: {\n\t\t\t\t\tid: true,\n\t\t\t\t\taltText: true,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\twhere: {\n\t\t\tid: params.noteId,\n\t\t\townerId: userId,\n\t\t},\n\t})\n\tinvariantResponse(note, 'Not found', { status: 404 })\n\treturn json({ note: note })\n}\n\nexport default function NoteEdit() {\n\tconst data = useLoaderData<typeof loader>()\n\n\treturn <NoteEditor note={data.note} />\n}\n\nexport function ErrorBoundary() {\n\treturn (\n\t\t<GeneralErrorBoundary\n\t\t\tstatusHandlers={{\n\t\t\t\t404: ({ params }) => (\n\t\t\t\t\t<p>No note with the id \"{params.noteId}\" exists</p>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import { type MetaFunction } from '@remix-run/react'\nimport { type loader as notesLoader } from './notes.tsx'\n\nexport default function NotesIndexRoute() {\n\treturn (\n\t\t<div className=\"container pt-12\">\n\t\t\t<p className=\"text-body-md\">Select a note</p>\n\t\t</div>\n\t)\n}\n\nexport const meta: MetaFunction<\n\tnull,\n\t{ 'routes/users+/$username_+/notes': typeof notesLoader }\n> = ({ params, matches }) => {\n\tconst notesMatch = matches.find(\n\t\tm => m.id === 'routes/users+/$username_+/notes',\n\t)\n\tconst displayName = notesMatch?.data?.owner.name ?? params.username\n\tconst noteCount = notesMatch?.data?.owner.notes.length ?? 0\n\tconst notesText = noteCount === 1 ? 'note' : 'notes'\n\treturn [\n\t\t{ title: `${displayName}'s Notes | Epic Notes` },\n\t\t{\n\t\t\tname: 'description',\n\t\t\tcontent: `Checkout ${displayName}'s ${noteCount} ${notesText} on Epic Notes`,\n\t\t},\n\t]\n}\n","import { json, type LoaderFunctionArgs } from '@remix-run/node'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { NoteEditor } from './__note-editor.tsx'\n\nexport { action } from './__note-editor.server.tsx'\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tawait requireUserId(request)\n\treturn json({})\n}\n\nexport default NoteEditor\n","import { json, redirect, type LoaderFunctionArgs } from '@remix-run/node'\nimport { Link, useLoaderData } from '@remix-run/react'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { ErrorList } from '#app/components/forms.tsx'\nimport { SearchBar } from '#app/components/search-bar.tsx'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { cn, getUserImgSrc, useDelayedIsPending } from '#app/utils/misc.tsx'\n\nconst UserSearchResultSchema = z.object({\n\tid: z.string(),\n\tusername: z.string(),\n\tname: z.string().nullable(),\n\timageId: z.string().nullable(),\n})\n\nconst UserSearchResultsSchema = z.array(UserSearchResultSchema)\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst searchTerm = new URL(request.url).searchParams.get('search')\n\tif (searchTerm === '') {\n\t\treturn redirect('/users')\n\t}\n\n\tconst like = `%${searchTerm ?? ''}%`\n\tconst rawUsers = await prisma.$queryRaw`\n\t\tSELECT User.id, User.username, User.name, UserImage.id AS imageId\n\t\tFROM User\n\t\tLEFT JOIN UserImage ON User.id = UserImage.userId\n\t\tWHERE User.username LIKE ${like}\n\t\tOR User.name LIKE ${like}\n\t\tORDER BY (\n\t\t\tSELECT Note.updatedAt\n\t\t\tFROM Note\n\t\t\tWHERE Note.ownerId = User.id\n\t\t\tORDER BY Note.updatedAt DESC\n\t\t\tLIMIT 1\n\t\t) DESC\n\t\tLIMIT 50\n\t`\n\n\tconst result = UserSearchResultsSchema.safeParse(rawUsers)\n\tif (!result.success) {\n\t\treturn json({ status: 'error', error: result.error.message } as const, {\n\t\t\tstatus: 400,\n\t\t})\n\t}\n\treturn json({ status: 'idle', users: result.data } as const)\n}\n\nexport default function UsersRoute() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst isPending = useDelayedIsPending({\n\t\tformMethod: 'GET',\n\t\tformAction: '/users',\n\t})\n\n\tif (data.status === 'error') {\n\t\tconsole.error(data.error)\n\t}\n\n\treturn (\n\t\t<div className=\"container mb-48 mt-36 flex flex-col items-center justify-center gap-6\">\n\t\t\t<h1 className=\"text-h1\">Epic Notes Users</h1>\n\t\t\t<div className=\"w-full max-w-[700px]\">\n\t\t\t\t<SearchBar status={data.status} autoFocus autoSubmit />\n\t\t\t</div>\n\t\t\t<main>\n\t\t\t\t{data.status === 'idle' ? (\n\t\t\t\t\tdata.users.length ? (\n\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t'flex w-full flex-wrap items-center justify-center gap-4 delay-200',\n\t\t\t\t\t\t\t\t{ 'opacity-50': isPending },\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{data.users.map(user => (\n\t\t\t\t\t\t\t\t<li key={user.id}>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tto={user.username}\n\t\t\t\t\t\t\t\t\t\tclassName=\"flex h-36 w-44 flex-col items-center justify-center rounded-lg bg-muted px-5 py-3\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\talt={user.name ?? user.username}\n\t\t\t\t\t\t\t\t\t\t\tsrc={getUserImgSrc(user.imageId)}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"h-16 w-16 rounded-full\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{user.name ? (\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"w-full overflow-hidden text-ellipsis whitespace-nowrap text-center text-body-md\">\n\t\t\t\t\t\t\t\t\t\t\t\t{user.name}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t<span className=\"w-full overflow-hidden text-ellipsis text-center text-body-sm text-muted-foreground\">\n\t\t\t\t\t\t\t\t\t\t\t{user.username}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>No users found</p>\n\t\t\t\t\t)\n\t\t\t\t) : data.status === 'error' ? (\n\t\t\t\t\t<ErrorList errors={['There was an error parsing the results']} />\n\t\t\t\t) : null}\n\t\t\t</main>\n\t\t</div>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n"],"names":["key","time","init","headers","href","toast","showToast","Sonner","colorSchemeHint","timeZoneHint","action","_a","mode","entry","baseCachified","result","cuid","redirect","prisma","cookie","permission","meta","loader","ErrorBoundary","handle","TwoFactorRoute","handleVerification","SignupFormSchema","session","remember","VerifySchema","handleResetPasswordVerification","handleOnboardingVerification","handleChangeEmailVerification","handleLoginTwoFactorVerification","user","EditUserProfile","newPassword","_b","parseMultipartFormData","createMemoryUploadHandler"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAM,SAAS,EAAE,OAAO;AAAA,EACvB,UAAU,EAAE,KAAK,CAAC,cAAc,eAAe,MAAM,CAAU;AAAA,EAC/D,eAAe,EAAE,OAAO;AAAA,EACxB,cAAc,EAAE,OAAO;AAAA,EACvB,gBAAgB,EAAE,OAAO;AAAA,EACzB,wBAAwB,EAAE,OAAO;AAAA,EACjC,iBAAiB,EAAE,OAAO;AAAA,EAC1B,qBAAqB,EAAE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM9B,kBAAkB,EAAE,SAAS,QAAQ,uBAAuB;AAAA,EAC5D,sBAAsB,EAAE,SAAS,QAAQ,2BAA2B;AAAA,EACpE,cAAc,EAAE,SAAS,QAAQ,mBAAmB;AAAA,EACpD,gBAAgB,EAAE,KAAK,CAAC,QAAQ,OAAO,CAAC,EAAE,SAAS;AACpD,CAAC;AAQM,SAAS,OAAO;AACtB,QAAM,SAAS,OAAO,UAAU,QAAQ,GAAG;AAEvC,MAAA,OAAO,YAAY,OAAO;AACrB,YAAA;AAAA,MACP;AAAA,MACA,OAAO,MAAM,QAAA,EAAU;AAAA,IAAA;AAGlB,UAAA,IAAI,MAAM,+BAA+B;AAAA,EAChD;AACD;AAWO,SAAS,SAAS;AACjB,SAAA;AAAA,IACN,MAAM,QAAQ,IAAI;AAAA,IAClB,YAAY,QAAQ,IAAI;AAAA,IACxB,gBAAgB,QAAQ,IAAI;AAAA,EAAA;AAE9B;ACrDa,MAAA,eAAe,MAAM,cAAsB,EAAE;AACnD,MAAM,gBAAgB,aAAa;AACnC,MAAM,WAAW,MAAM,MAAM,WAAW,YAAY;ACQ3C,SAAA,YAAY,MAAc,MAAe;AACxD,QAAM,UAAmB;AAAA,IACxB,CAAC,IAAI,GAAG,CAAC,EAAE,MAAM,OAAO,YAAY,IAAI,GAAG;AAAA,EAAA;AAErC,SAAA,eAAe,SAAS,YAAY;AAAA,IAC1C,OAAO,WAAY;AAClB,aAAO,oBAAoB,OAAO;AAAA,IACnC;AAAA,IACA,YAAY;AAAA,EAAA,CACZ;AACM,SAAA;AACR;AAEA,SAAS,YAAY,MAAc,MAAe;AAC3C,QAAA,QAAQ,YAAY;AACnB,SAAA;AAAA,IACN,IAAI,SAAkB;AACjB,UAAA,aAAa,QAAQ,IAAI;AAE7B,UAAI,CAAC,YAAY;AACH,qBAAA,QAAQ,IAAI,IAAI;MAC9B;AACW,iBAAA,KAAK,EAAE,MAAM,MAAM,YAAY,IAAI,IAAI,OAAO;AAAA,IAC1D;AAAA,EAAA;AAEF;AAEA,eAAsB,KACrB,IACA;AAAA,EACC;AAAA,EACA;AAAA,EACA;AACD,GAKsB;AAChB,QAAA,QAAQ,YAAY,MAAM,IAAI;AACpC,QAAM,UAAU,OAAO,OAAO,aAAa,OAAO;AAClD,MAAI,CAAC;AAAgB,WAAA;AAErB,QAAM,SAAS,MAAM;AAErB,QAAM,IAAI,OAAO;AACV,SAAA;AACR;AAEO,SAAS,oBAAoB,SAAmB;AACtD,MAAI,CAAC;AAAgB,WAAA;AACd,SAAA,OAAO,QAAQ,OAAO,EAC3B,IAAI,CAAC,CAACA,MAAK,WAAW,MAAM;AAC5B,UAAM,MAAM,YACV,OAAO,CAAC,KAAK,eAAe;AAC5B,YAAMC,QAAO,WAAW,QAAQ,YAAY,QAAQ,WAAW;AAC/D,aAAO,MAAMA;AAAAA,IACX,GAAA,CAAC,EACH,QAAQ,CAAC;AACL,UAAA,OAAO,YACX,IAAI,CAAK,MAAA,EAAE,IAAI,EACf,OAAO,OAAO,EACd,KAAK,KAAK;AACL,WAAA;AAAA,MACND,KAAI,WAAW,wBAAwB,GAAG;AAAA,MAC1C,OAAO,QAAQ,KAAK,UAAU,IAAI,CAAC,KAAK;AAAA,MACxC,OAAO,GAAG;AAAA,IAET,EAAA,OAAO,OAAO,EACd,KAAK,GAAG;AAAA,EAAA,CACV,EACA,KAAK,GAAG;AACX;AAQO,SAAS,wBACf,SACoC;AACpC,MAAI,CAAC;AAAS;AAEP,SAAA,CAAC,EAAE,KAAAA,WAAU;AACnB,UAAM,sBAAsB;AAAA,MAC3B,SAASA,IAAG;AAAA,MACZ,GAAGA,IAAG;AAAA,IAAA;AAEH,QAAA;AACJ,WAAO,CAAS,UAAA;AACf,cAAQ,MAAM,MAAM;AAAA,QACnB,KAAK;AACiB,+BAAA;AAAA,YACpB,iBAAiBA,IAAG;AAAA,YACpB,sCAAsCA,IAAG;AAAA,UAAA;AAE1C;AAAA,QACD,KAAK;AACJ,mEAAoB,IAAI;AACxB;AAAA,QACD,KAAK;AACJ,8BAAoB,IAAI,OAAO;AAC/B;AAAA,MACF;AAAA,IAAA;AAAA,EACD;AAEF;ACvGA,MAAM,cAAc;AAEpB;AACA,OAAO,MAAM;AAEb,IAAI,IAAI,SAAS,gBAAgB,IAAI,YAAY;AACzC,SAAA,wCAA8B,EAAE,KAAK,CAAC,EAAE,MAAAE,MAAWA,MAAAA,MAAAA,CAAM;AACjE;AAIA,eAA8B,iBAAiB,MAAsB;AAC9D,QAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACG,IAAA;AACJ,QAAM,EAAE,iBAAiB,oBAAoB,MAAM,gBAAgB;AACnE,kBAAgB,IAAI,cAAc,QAAQ,IAAI,cAAc,SAAS;AACrE,kBAAgB,IAAI,WAAW,QAAQ,IAAI,gBAAgB,SAAS;AACpD,kBAAA,IAAI,wBAAwB,eAAe;AAC3C,kBAAA,IAAI,gBAAgB,eAAe;AAE7C,QAAA,eAAe,MAAM,QAAQ,QAAQ,IAAI,YAAY,CAAC,IACzD,eACA;AAEH,QAAM,QAAQ,OAAO,YAAY,QAAQ,KAAK;AAC9C,SAAO,IAAI,QAAQ,OAAO,SAAS,WAAW;AAC7C,QAAI,WAAW;AAGT,UAAA,UAAU,YAAY,UAAU,wBAAwB;AAExD,UAAA,EAAE,MAAM,MAAA,IAAU;AAAA,MACvB,oBAAC,eAAc,EAAA,OAAO,OACrB,UAAA,oBAAC,aAAY,EAAA,SAAS,cAAc,KAAK,QAAQ,IAAA,CAAK,EACvD,CAAA;AAAA,MACA;AAAA,QACC,CAAC,YAAY,GAAG,MAAM;AACf,gBAAA,OAAO,IAAI;AACD,0BAAA,IAAI,gBAAgB,WAAW;AAC/C,0BAAgB,OAAO,iBAAiB,QAAQ,SAAU,CAAA;AAC1D;AAAA,YACC,IAAI,SAAS,iCAAiC,IAAI,GAAG;AAAA,cACpD,SAAS;AAAA,cACT,QAAQ,WAAW,MAAM;AAAA,YAAA,CACzB;AAAA,UAAA;AAEF,eAAK,IAAI;AAAA,QACV;AAAA,QACA,cAAc,CAAC,QAAiB;AAC/B,iBAAO,GAAG;AAAA,QACX;AAAA,QACA,SAAS,MAAM;AACH,qBAAA;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,IAAA;AAGD,eAAW,OAAO,WAAW;AAAA,EAAA,CAC7B;AACF;AAEA,eAAsB,kBAAkB,UAAoB;AAC3D,QAAM,EAAE,iBAAiB,oBAAoB,MAAM,gBAAgB;AACnE,WAAS,QAAQ,IAAI,cAAc,QAAQ,IAAI,cAAc,SAAS;AACtE,WAAS,QAAQ,IAAI,WAAW,QAAQ,IAAI,gBAAgB,SAAS;AAC5D,WAAA,QAAQ,IAAI,wBAAwB,eAAe;AACnD,WAAA,QAAQ,IAAI,gBAAgB,eAAe;AAE7C,SAAA;AACR;AAEO,SAAS,YACf,OACA,EAAE,WACK;AAGH,MAAA,QAAQ,OAAO,SAAS;AAC3B;AAAA,EACD;AACA,MAAI,iBAAiB,OAAO;AAC3B,YAAQ,MAAM,MAAM,IAAI,MAAM,KAAK,CAAC;AAC7B,WAAA,4BAA4B,OAAO,gBAAgB,OAAO;AAAA,EAAA,OAC3D;AACN,YAAQ,MAAM,MAAM,IAAI,KAAK,CAAC;AAC9B,WAAO,iBAAiB,KAAK;AAAA,EAC9B;AACD;;;;;;;AC5GO,MAAM,gBAAgB;AAAA,EAC5B,QAAQ;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,MACN,SAAS;AAAA,MACT,SAAS;AAAA,IACV;AAAA,IACA,MAAM;AAAA,MACL,SAAS;AAAA,MACT,SAAS;AAAA,IACV;AAAA,IACA,YAAY;AAAA,IACZ,YAAY;AAAA,MACX,SAAS;AAAA,MACT,aAAa;AAAA,IACd;AAAA,IACA,SAAS;AAAA,MACR,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAAA,IACA,WAAW;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAAA,IACA,aAAa;AAAA,MACZ,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAAA,IACA,OAAO;AAAA,MACN,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAAA,IACA,QAAQ;AAAA,MACP,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAAA,IACA,SAAS;AAAA,MACR,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAAA,IACA,MAAM;AAAA,MACL,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAAA,EACD;AAAA,EACA,aAAa;AAAA,IACZ,SAAS;AAAA,EACV;AAAA,EACA,cAAc;AAAA,IACb,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,EACL;AAAA,EACA,UAAU;AAAA;AAAA;AAAA,IAGT,MAAM,CAAC,QAAQ,EAAE,YAAY,WAAW,YAAY,OAAO;AAAA;AAAA,IAE3D,IAAI,CAAC,UAAU,EAAE,YAAY,YAAY,YAAY,OAAO;AAAA;AAAA,IAE5D,IAAI,CAAC,UAAU,EAAE,YAAY,QAAQ,YAAY,OAAO;AAAA;AAAA,IAExD,IAAI,CAAC,QAAQ,EAAE,YAAY,WAAW,YAAY,OAAO;AAAA;AAAA,IAEzD,IAAI,CAAC,WAAW,EAAE,YAAY,WAAW,YAAY,OAAO;AAAA;AAAA,IAE5D,IAAI,CAAC,UAAU,EAAE,YAAY,QAAQ,YAAY,OAAO;AAAA;AAAA,IAExD,IAAI,CAAC,QAAQ,EAAE,YAAY,WAAW,YAAY,OAAO;AAAA;AAAA,IAGzD,YAAY,CAAC,QAAQ,EAAE,YAAY,WAAW;AAAA;AAAA,IAE9C,WAAW,CAAC,WAAW,EAAE,YAAY,WAAW;AAAA;AAAA,IAEhD,WAAW,CAAC,UAAU,EAAE,YAAY,QAAQ;AAAA;AAAA,IAE5C,WAAW,CAAC,WAAW,EAAE,YAAY,WAAW;AAAA;AAAA,IAEhD,WAAW,CAAC,QAAQ,EAAE,YAAY,WAAW;AAAA;AAAA,IAE7C,WAAW,CAAC,YAAY,EAAE,YAAY,YAAY;AAAA;AAAA,IAElD,YAAY,CAAC,WAAW,EAAE,YAAY,QAAQ;AAAA;AAAA,IAG9C,SAAS,CAAC,YAAY,EAAE,YAAY,UAAU,YAAY,OAAO;AAAA;AAAA,IAEjE,QAAQ,CAAC,WAAW,EAAE,YAAY,QAAQ,YAAY,OAAO;AAAA,EAC9D;AAAA,EACA,WAAW;AAAA,IACV,eAAe;AAAA,MACd,eAAe,EAAE,SAAS,IAAI;AAAA,MAC9B,WAAW,EAAE,SAAS,IAAI;AAAA,IAC3B;AAAA,EACD;AAAA,EACA,WAAW;AAAA,IACV,eAAe;AAAA,EAChB;AACD;AC9FO,SAAS,cAAc,SAAyB;AAC/C,SAAA,UAAU,0BAA0B,OAAO,KAAK;AACxD;AAEO,SAAS,cAAc,SAAiB;AAC9C,SAAO,0BAA0B,OAAO;AACzC;AAEO,SAAS,gBAAgB,OAAgB;AAC/C,MAAI,OAAO,UAAU;AAAiB,WAAA;AAErC,MAAA,SACA,OAAO,UAAU,YACjB,aAAa,SACb,OAAO,MAAM,YAAY,UACxB;AACD,WAAO,MAAM;AAAA,EACd;AACQ,UAAA,MAAM,yCAAyC,KAAK;AACrD,SAAA;AACR;AAEA,SAAS,eAAe;AACvB,QAAM,SAAS,CAAA;AACJ,aAAA,CAACF,MAAK,KAAK,KAAK,OAAO,QAAQ,cAAc,MAAM,GAAG;AAC5D,QAAA,OAAO,UAAU,UAAU;AAC9B,aAAO,KAAKA,IAAG;AAAA,IAAA,OACT;AACN,YAAM,aAAa,OAAO,KAAK,KAAK,EAAE;AAAA,QAAI,CAAA,WACzC,WAAW,YAAY,KAAK;AAAA,MAAA;AAE7B,aAAO,KAAK,EAAE,CAACA,IAAG,GAAG,WAAY,CAAA;AAAA,IAClC;AAAA,EACD;AACO,SAAA;AACR;AAEA,MAAM,gBAAgB,oBAAoC;AAAA,EACzD,QAAQ;AAAA,IACP,OAAO;AAAA,MACN,QAAQ,aAAa;AAAA,MACrB,cAAc,OAAO,KAAK,cAAc,YAAY;AAAA,IACrD;AAAA,IACA,aAAa;AAAA,MACZ,aAAa;AAAA,QACZ;AAAA,UACC,MAAM,OAAO,KAAK,cAAc,QAAQ;AAAA,QACzC;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD,CAAC;AAEM,SAAS,MAAM,QAAsB;AACpC,SAAA,cAAc,KAAK,MAAM,CAAC;AAClC;AAEO,SAAS,aAAa,SAAkB;AAC9C,QAAM,OACL,QAAQ,QAAQ,IAAI,kBAAkB,KACtC,QAAQ,QAAQ,IAAI,MAAM,KAC1B,IAAI,IAAI,QAAQ,GAAG,EAAE;AACtB,QAAM,WAAW,QAAQ,QAAQ,IAAI,mBAAmB,KAAK;AACtD,SAAA,GAAG,QAAQ,MAAM,IAAI;AAC7B;AAEO,SAAS,iBAAiB,SAAkB;AAG5C,QAAA,WACL,QAAQ,QAAQ,IAAI,SAAS,KAC7B,QAAQ,QAAQ,IAAI,UAAU,KAC9B,QAAQ;AACH,QAAA,SAAS,aAAa,OAAO;AAC/B,MAAA,qCAAU,WAAW,SAAS;AAC1B,WAAA,SAAS,MAAM,OAAO,MAAM;AAAA,EAAA,OAC7B;AACC,WAAA;AAAA,EACR;AACD;AAqBO,SAAS,kBACZG,UACF;AACK,QAAA,WAAW,IAAI;AACrB,aAAW,UAAUA,UAAS;AAC7B,QAAI,CAAC;AAAQ;AACF,eAAA,CAACH,MAAK,KAAK,KAAK,IAAI,QAAQ,MAAM,EAAE,WAAW;AAChD,eAAA,OAAOA,MAAK,KAAK;AAAA,IAC3B;AAAA,EACD;AACO,SAAA;AACR;AAKO,SAAS,wBACZ,eACF;AACD,MAAI,WAAyB,CAAA;AAC7B,aAAW,gBAAgB,eAAe;AAC9B,eAAA;AAAA,MACV,GAAG;AAAA,MACH,SAAS,eAAe,SAAS,SAAS,6CAAc,OAAO;AAAA,IAAA;AAAA,EAEjE;AACO,SAAA;AACR;AAYO,SAAS,aAAa;AAAA,EAC5B;AAAA,EACA,aAAa;AAAA,EACb,QAAQ;AACT,IAII,IAAI;AACP,QAAM,uBAAuB;AAC7B,QAAM,aAAa;AACnB,QAAM,iBACL,UAAU,aACP,WAAW,UAAU,SACrB,WAAW,UAAU;AACzB,SACC,kBACA,WAAW,gBAAgB,cAAc,yBACzC,WAAW,eAAe;AAE5B;AAUO,SAAS,oBAAoB;AAAA,EACnC;AAAA,EACA;AAAA,EACA,QAAQ;AAAA,EACR,cAAc;AACf,IACsC,IAAI;AACzC,QAAM,YAAY,aAAa,EAAE,YAAY,WAAY,CAAA;AACnD,QAAA,mBAAmB,aAAa,WAAW;AAAA,IAChD;AAAA,IACA;AAAA,EAAA,CACA;AACM,SAAA;AACR;AAEA,SAAS,WACL,KACF;AACM,SAAA,IAAI,SAAe,IAAI,QAAQ,QAAM,yBAAK,GAAG,KAAK;AAC1D;AAQO,SAAS,iBAAiB;AAChC,QAAM,CAAC,aAAa,cAAc,IAAI,SAAS,KAAK;AAEpD,WAAS,eACR,OACC;AACK,UAAA,SACL,MAAM,eAAe,KAAK;AAErB,UAAA,UACL,cACG,SACA,CAAK,MAAA;AACL,QAAE,eAAe;AACjB,qBAAe,IAAI;AAAA,IAAA;AAGvB,UAAM,UACL,CAAK,MAAA;AACA,UAAA,EAAE,QAAQ,UAAU;AACvB,uBAAe,KAAK;AAAA,MACrB;AAAA,IAAA;AAGK,WAAA;AAAA,MACN,GAAG;AAAA,MACH,QAAQ,QAAQ,QAAQ,+BAAO,MAAM;AAAA,MACrC,SAAS,QAAQ,SAAS,+BAAO,OAAO;AAAA,MACxC,SAAS,QAAQ,SAAS,+BAAO,OAAO;AAAA,IAAA;AAAA,EAE1C;AAEO,SAAA,EAAE,aAAa;AACvB;AAKA,SAAS,SACR,IACA,OACC;AACD,MAAI,QAA8C;AAClD,SAAO,IAAI,SAA+B;AACrC,QAAA;AAAO,mBAAa,KAAK;AAC7B,YAAQ,WAAW,MAAM;AACxB,SAAG,GAAG,IAAI;AAAA,OACR,KAAK;AAAA,EAAA;AAEV;AAKgB,SAAA,YAEd,UAAoB,OAAe;AAC9B,QAAA,cAAc,OAAO,QAAQ;AACnC,YAAU,MAAM;AACf,gBAAY,UAAU;AAAA,EAAA,CACtB;AACM,SAAA;AAAA,IACN,MACC;AAAA,MACC,IAAI,SAA+B,YAAY,QAAQ,GAAG,IAAI;AAAA,MAC9D;AAAA,IACD;AAAA,IACD,CAAC,KAAK;AAAA,EAAA;AAER;AAEsB,eAAA,aAAa,KAAa,UAAkB,GAAG;AACpE,QAAM,cAAc;AAChB,MAAA;AACG,UAAA,WAAW,MAAM,MAAM,GAAG;AAC5B,QAAA,CAAC,SAAS,IAAI;AACjB,YAAM,IAAI,MAAM,qCAAqC,SAAS,MAAM,EAAE;AAAA,IACvE;AACA,UAAM,cAAc,SAAS,QAAQ,IAAI,cAAc,KAAK;AAC5D,UAAM,OAAO,OAAO,KAAK,MAAM,SAAS,aAAa;AAC9C,WAAA,EAAE,aAAa;WACd,GAAG;AACX,QAAI,UAAU;AAAmB,YAAA;AAC1B,WAAA,aAAa,KAAK,UAAU,CAAC;AAAA,EACrC;AACD;AClRO,SAAS,qBAAqB;AAAA,EACpC,uBAAuB,CAAC,EAAE,MAAM,2BAC9B,KACC,EAAA,UAAA;AAAA,IAAM,MAAA;AAAA,IAAO;AAAA,IAAE,MAAM;AAAA,EAAA,GACvB;AAAA,EAED;AAAA,EACA,yBAAyB,CAAS,UAAA,oBAAC,KAAG,EAAA,UAAA,gBAAgB,KAAK,GAAE;AAC9D,GAIG;AACF,QAAM,QAAQ;AACd,iCAA+B,KAAK;AACpC,QAAM,SAAS;AAEX,MAAA,OAAO,aAAa,aAAa;AACpC,YAAQ,MAAM,KAAK;AAAA,EACpB;AAGC,SAAA,oBAAC,OAAI,EAAA,WAAU,2DACb,UAAA,qBAAqB,KAAK,MACvB,iDAAiB,MAAM,YAAW,sBAAsB;AAAA,IACzD;AAAA,IACA;AAAA,EACA,CAAA,IACA,uBAAuB,KAAK,EAChC,CAAA;AAEF;AC7CA,MAAe,YAAA;ACQf,MAAM,gBAAgB;AAAA,EACrB,MAAM;AAAA,EACN,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AACL;AAIA,MAAM,wBAAwB;AAAA,EAC7B,MAAM;AAAA,EACN,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AACL;AAaO,SAAS,KAAK;AAAA,EACpB;AAAA,EACA,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACJ,GAIG;AACF,MAAI,UAAU;AAEZ,WAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,WAAW,4BAA4B,sBAAsB,IAAI,CAAC;AAAA,QAElE,UAAA;AAAA,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACC,GAAG;AAAA,YAAA;AAAA,UACL;AAAA,UACC;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAGJ;AAEC,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,GAAG;AAAA,MACJ,WAAW,GAAG,cAAc,IAAI,GAAG,sBAAsB,SAAS;AAAA,MAEjE,UAAA;AAAA,QAAQ,QAAA,oBAAC,SAAO,EAAA,UAAA,MAAM,CAAA,IAAW;AAAA,4BACjC,OAAI,EAAA,MAAM,GAAGI,SAAI,IAAI,IAAI,IAAI;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAGjC;ACtEA,SAAS,eAAe;AACvB,QAAM,aAAa;AACb,QAAA,OAAO,WAAW,UAAU;AAC5B,QAAA,iBAAiB,aAAa,MAAM;AAAA,IACzC,OAAO;AAAA,IACP,aAAa;AAAA,EAAA,CACb;AACK,QAAA,MAAM,OAAuB,IAAI;AACvC,QAAM,CAAC,mBAAmB,oBAAoB,IAAI,SAAS,IAAI;AAE/D,YAAU,MAAM;AACf,QAAI,CAAC,IAAI;AAAS;AACd,QAAA;AAAgB,2BAAqB,KAAK;AAExC,UAAA,oBAAoB,IAAI,QAC5B,cAAc,EACd,IAAI,CAAC,EAAE,eAAe,QAAQ;AAEhC,YAAQ,WAAW,iBAAiB,EAAE,KAAK,MAAM;AAChD,UAAI,CAAC;AAAgB,6BAAqB,IAAI;AAAA,IAAA,CAC9C;AAAA,EAAA,GACC,CAAC,cAAc,CAAC;AAGlB,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACA,MAAK;AAAA,MACL,eAAa,iBAAiB,SAAY;AAAA,MAC1C,kBAAgB,iBAAiB,YAAY;AAAA,MAC7C,WAAU;AAAA,MAEV,UAAA;AAAA,QAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA;AAAA,YACA,WAAW;AAAA,cACV;AAAA,cACA,WAAW,UAAU,WACnB,oBACE,oBACA;AAAA,cACJ,kBAAkB,WAAW,UAAU,gBAAgB;AAAA,cACvD,kBAAkB,WAAW,UAAU,aAAa;AAAA,YACrD;AAAA,UAAA;AAAA,QACD;AAAA,QACC,kBACA,oBAAC,OAAI,EAAA,WAAU,6CACd,UAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,MAAK;AAAA,YACL,MAAK;AAAA,YACL,WAAU;AAAA,YACV,eAAW;AAAA,UAAA;AAAA,QAAA,GAEb;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAIJ;ACrDA,MAAM,QAAQ,MAAM;AAAA,EACnB,CAAC,EAAE,WAAW,MAAM,GAAG,MAAA,GAAS,QAAQ;AAEtC,WAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACA;AAAA,QACA,WAAW;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,QACC,GAAG;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACD;AACA,MAAM,cAAc;AChBpB,MAAM,gBAAgB;AAAA,EACrB;AACD;AAEA,MAAM,QAAQ,MAAM,WAIlB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC3B;AAAA,EAAC,eAAe;AAAA,EAAf;AAAA,IACA;AAAA,IACA,WAAW,GAAG,cAAc,GAAG,SAAS;AAAA,IACvC,GAAG;AAAA,EAAA;AACL,CACA;AACD,MAAM,cAAc,eAAe,KAAK;ACfxC,MAAM,iBAAiB;AAAA,EACtB;AAAA,EACA;AAAA,IACC,UAAU;AAAA,MACT,SAAS;AAAA,QACR,SAAS;AAAA,QACT,aACC;AAAA,QACD,SACC;AAAA,QACD,WACC;AAAA,QACD,OAAO;AAAA,QACP,MAAM;AAAA,MACP;AAAA,MACA,MAAM;AAAA,QACL,SAAS;AAAA,QACT,MAAM;AAAA,QACN,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,MACP;AAAA,IACD;AAAA,IACA,iBAAiB;AAAA,MAChB,SAAS;AAAA,MACT,MAAM;AAAA,IACP;AAAA,EACD;AACD;AAQA,MAAM,SAAS,MAAM;AAAA,EACpB,CAAC,EAAE,WAAW,SAAS,MAAM,UAAU,OAAO,GAAG,MAAM,GAAG,QAAQ;AAC3D,UAAA,OAAO,UAAU,OAAO;AAE7B,WAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,WAAW,GAAG,eAAe,EAAE,SAAS,MAAM,UAAA,CAAW,CAAC;AAAA,QAC1D;AAAA,QACC,GAAG;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACD;AACA,OAAO,cAAc;AClDrB,MAAM,kBAAkB,iBAAiB;AAEzC,MAAM,UAAU,iBAAiB;AAEjC,MAAM,iBAAiB,iBAAiB;AAExC,MAAM,iBAAiB,MAAM,WAG3B,CAAC,EAAE,WAAW,aAAa,GAAG,GAAG,SAAS,QAC3C;AAAA,EAAC,iBAAiB;AAAA,EAAjB;AAAA,IACA;AAAA,IACA;AAAA,IACA,WAAW;AAAA,MACV;AAAA,MACA;AAAA,IACD;AAAA,IACC,GAAG;AAAA,EAAA;AACL,CACA;AACD,eAAe,cAAc,iBAAiB,QAAQ;ACb/C,MAAM,eAAe,MAAM,WAOhC,CAAC,EAAE,SAAS,QAAQ,WAAW,UAAU,WAAW,GAAG,MAAA,GAAS,QAAQ;AACnE,QAAA,iBAAiB,aAAa,WAAW,WAAW;AAAA,IACzD,OAAO;AAAA,IACP,aAAa;AAAA,IACb,GAAG;AAAA,EAAA,CACH;AACD,QAAM,YAAY;AAAA,IACjB,SAAS,iBACR;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,MAAK;AAAA,QACL,WAAU;AAAA,QAEV,8BAAC,MAAK,EAAA,MAAK,UAAS,WAAU,gBAAe,OAAM,WAAU;AAAA,MAAA;AAAA,IAAA,IAE3D;AAAA,IACJ,SACC;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,MAAK;AAAA,QACL,WAAU;AAAA,QAEV,UAAC,oBAAA,MAAA,EAAK,MAAK,SAAQ,OAAM,WAAU;AAAA,MAAA;AAAA,IACpC;AAAA,IAED,OACC;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,MAAK;AAAA,QACL,WAAU;AAAA,QAEV,UAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,MAAK;AAAA,YACL,WAAU;AAAA,YACV,OAAM;AAAA,UAAA;AAAA,QACP;AAAA,MAAA;AAAA,IACD;AAAA,IAED,MAAM;AAAA,IACL,MAAM;AAGP,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACA;AAAA,MACA,WAAW,GAAG,6BAA6B,SAAS;AAAA,MACnD,GAAG;AAAA,MAEJ,UAAA;AAAA,QAAA,oBAAC,SAAK,UAAS;AAAA,QACd,UACA,oBAAC,iBACA,EAAA,UAAA,qBAAC,SACA,EAAA,UAAA;AAAA,UAAA,oBAAC,kBAAgB,UAAU,UAAA,CAAA;AAAA,UAC3B,oBAAC,kBAAgB,UAAQ,QAAA,CAAA;AAAA,QAAA,EAC1B,CAAA,EACD,CAAA,IAEA;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAIJ,CAAC;AACD,aAAa,cAAc;ACrEpB,SAAS,UAAU;AAAA,EACzB;AAAA,EACA,YAAY;AAAA,EACZ,aAAa;AACd,GAIG;AACF,QAAM,KAAK;AACL,QAAA,CAAC,YAAY,IAAI;AACvB,QAAM,SAAS;AACf,QAAM,eAAe,aAAa;AAAA,IACjC,YAAY;AAAA,IACZ,YAAY;AAAA,EAAA,CACZ;AAEK,QAAA,mBAAmB,YAAY,CAAC,SAA0B;AAC/D,WAAO,IAAI;AAAA,KACT,GAAG;AAGL,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACA,QAAO;AAAA,MACP,QAAO;AAAA,MACP,WAAU;AAAA,MACV,UAAU,CAAA,MAAK,cAAc,iBAAiB,EAAE,aAAa;AAAA,MAE7D,UAAA;AAAA,QAAC,qBAAA,OAAA,EAAI,WAAU,UACd,UAAA;AAAA,UAAA,oBAAC,OAAM,EAAA,SAAS,IAAI,WAAU,WAAU,UAExC,UAAA;AAAA,UACA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,MAAK;AAAA,cACL,MAAK;AAAA,cACL;AAAA,cACA,cAAc,aAAa,IAAI,QAAQ,KAAK;AAAA,cAC5C,aAAY;AAAA,cACZ,WAAU;AAAA,cACV;AAAA,YAAA;AAAA,UACD;AAAA,QAAA,GACD;AAAA,4BACC,OACA,EAAA,UAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,MAAK;AAAA,YACL,QAAQ,eAAe,YAAY;AAAA,YACnC,WAAU;AAAA,YAEV,UAAA;AAAA,cAAA,oBAAC,MAAK,EAAA,MAAK,oBAAmB,MAAK,MAAK;AAAA,cACvC,oBAAA,QAAA,EAAK,WAAU,WAAU,UAAM,UAAA;AAAA,YAAA;AAAA,UAAA;AAAA,QAAA,GAElC;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAGH;AC1DO,SAAS,SAASC,SAAsB;AAC9C,YAAU,MAAM;AACf,QAAIA,SAAO;AACV,iBAAW,MAAM;AAChBC,cAAUD,QAAM,IAAI,EAAEA,QAAM,OAAO;AAAA,UAClC,IAAIA,QAAM;AAAA,UACV,aAAaA,QAAM;AAAA,QAAA,CACnB;AAAA,SACC,CAAC;AAAA,IACL;AAAA,EAAA,GACE,CAACA,OAAK,CAAC;AACX;ACVA,MAAM,eAAe,sBAAsB;AAE3C,MAAM,sBAAsB,sBAAsB;AAIlD,MAAM,qBAAqB,sBAAsB;AAMjD,MAAM,yBAAyB,MAAM,WAKnC,CAAC,EAAE,WAAW,OAAO,UAAU,GAAG,SAAS,QAC5C;AAAA,EAAC,sBAAsB;AAAA,EAAtB;AAAA,IACA;AAAA,IACA,WAAW;AAAA,MACV;AAAA,MACA,SAAS;AAAA,MACT;AAAA,IACD;AAAA,IACC,GAAG;AAAA,IAEH,UAAA;AAAA,MAAA;AAAA,MACA,oBAAA,QAAA,EAAK,WAAU,mBAAkB,UAAE,MAAA;AAAA,IAAA;AAAA,EAAA;AACrC,CACA;AACD,uBAAuB,cACtB,sBAAsB,WAAW;AAElC,MAAM,yBAAyB,MAAM,WAGnC,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC3B;AAAA,EAAC,sBAAsB;AAAA,EAAtB;AAAA,IACA;AAAA,IACA,WAAW;AAAA,MACV;AAAA,MACA;AAAA,IACD;AAAA,IACC,GAAG;AAAA,EAAA;AACL,CACA;AACD,uBAAuB,cACtB,sBAAsB,WAAW;AAElC,MAAM,sBAAsB,MAAM,WAGhC,CAAC,EAAE,WAAW,aAAa,GAAG,GAAG,MAAS,GAAA,QAC1C,oBAAA,sBAAsB,QAAtB,EACA,UAAA;AAAA,EAAC,sBAAsB;AAAA,EAAtB;AAAA,IACA;AAAA,IACA;AAAA,IACA,WAAW;AAAA,MACV;AAAA,MACA;AAAA,IACD;AAAA,IACC,GAAG;AAAA,EAAA;AACL,EAAA,CACD,CACA;AACD,oBAAoB,cAAc,sBAAsB,QAAQ;AAEhE,MAAM,mBAAmB,MAAM,WAK7B,CAAC,EAAE,WAAW,OAAO,GAAG,SAAS,QAClC;AAAA,EAAC,sBAAsB;AAAA,EAAtB;AAAA,IACA;AAAA,IACA,WAAW;AAAA,MACV;AAAA,MACA,SAAS;AAAA,MACT;AAAA,IACD;AAAA,IACC,GAAG;AAAA,EAAA;AACL,CACA;AACD,iBAAiB,cAAc,sBAAsB,KAAK;AAE1D,MAAM,2BAA2B,MAAM,WAGrC,CAAC,EAAE,WAAW,UAAU,SAAS,GAAG,SAAS,QAC9C;AAAA,EAAC,sBAAsB;AAAA,EAAtB;AAAA,IACA;AAAA,IACA,WAAW;AAAA,MACV;AAAA,MACA;AAAA,IACD;AAAA,IACA;AAAA,IACC,GAAG;AAAA,IAEJ,UAAA;AAAA,MAAA,oBAAC,QAAK,EAAA,WAAU,gEACf,UAAA,oBAAC,sBAAsB,eAAtB,EACA,UAAC,oBAAA,QAAA,EAAK,WAAU,WACf,UAAC,oBAAA,OAAA,EAAI,SAAQ,WACZ,UAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,GAAE;AAAA,UACF,QAAO;AAAA,UACP,aAAY;AAAA,UACZ,MAAK;AAAA,QAAA;AAAA,MAAA,GAEP,EACD,CAAA,EACD,CAAA,GACD;AAAA,MACC;AAAA,IAAA;AAAA,EAAA;AACF,CACA;AACD,yBAAyB,cACxB,sBAAsB,aAAa;AAEpC,MAAM,wBAAwB,MAAM,WAGlC,CAAC,EAAE,WAAW,UAAU,GAAG,SAAS,QACrC;AAAA,EAAC,sBAAsB;AAAA,EAAtB;AAAA,IACA;AAAA,IACA,WAAW;AAAA,MACV;AAAA,MACA;AAAA,IACD;AAAA,IACC,GAAG;AAAA,IAEJ,UAAA;AAAA,MAAA,oBAAC,QAAK,EAAA,WAAU,gEACf,UAAA,oBAAC,sBAAsB,eAAtB,EACA,UAAA,oBAAC,QAAK,EAAA,WAAU,WAAU,UAAA,IAAA,CAAC,EAC5B,CAAA,GACD;AAAA,MACC;AAAA,IAAA;AAAA,EAAA;AACF,CACA;AACD,sBAAsB,cAAc,sBAAsB,UAAU;AAEpE,MAAM,oBAAoB,MAAM,WAK9B,CAAC,EAAE,WAAW,OAAO,GAAG,SAAS,QAClC;AAAA,EAAC,sBAAsB;AAAA,EAAtB;AAAA,IACA;AAAA,IACA,WAAW;AAAA,MACV;AAAA,MACA,SAAS;AAAA,MACT;AAAA,IACD;AAAA,IACC,GAAG;AAAA,EAAA;AACL,CACA;AACD,kBAAkB,cAAc,sBAAsB,MAAM;AAE5D,MAAM,wBAAwB,MAAM,WAGlC,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC3B;AAAA,EAAC,sBAAsB;AAAA,EAAtB;AAAA,IACA;AAAA,IACA,WAAW,GAAG,4BAA4B,SAAS;AAAA,IAClD,GAAG;AAAA,EAAA;AACL,CACA;AACD,sBAAsB,cAAc,sBAAsB,UAAU;AC1KpE,MAAM,cAAc,CAAC,EAAE,OAAO,GAAG,YAA0B;AAEzD,SAAA;AAAA,IAACE;AAAAA,IAAA;AAAA,MACA;AAAA,MACA,WAAU;AAAA,MACV,cAAc;AAAA,QACb,YAAY;AAAA,UACX,OACC;AAAA,UACD,aAAa;AAAA,UACb,cACC;AAAA,UACD,cACC;AAAA,QACF;AAAA,MACD;AAAA,MACC,GAAG;AAAA,IAAA;AAAA,EAAA;AAGP;AChBO,SAAS,iBAAiB;AAC1B,QAAA,OAAO,mBAAsC,MAAM;AAC/C,YAAA,6BAAM,aAAa,qCAAqC;AAElE,SAAO,KAAK;AACb;ACEA,MAAM,aAAa,aAAa;AAAA,EAC/B,OAAOC;AAAAA,EACP,UAAUC;AAAAA;AAEX,CAAC;AAEY,MAAA,EAAE,SAAa,IAAA;AAKrB,SAAS,WAAW;AAC1B,QAAM,cAAc;AACpB,SAAO,YAAY;AACpB;AAOgB,SAAA,gBAAgB,EAAE,SAA4B;AACvD,QAAA,EAAE,eAAe;AACjB,QAAA;AAAA,IACL,MAAM,wBAAwB,MAAM,YAAY;AAAA,IAChD,CAAC,UAAU;AAAA,EAAA;AAIX,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACA;AAAA,MACA,yBAAyB;AAAA,QACxB,QAAQ,WAAW,yBAAyB;AAAA,MAC7C;AAAA,IAAA;AAAA,EAAA;AAGH;AChDA,MAAM,aAAa;AAGZ,SAAS,SAAS,SAAgC;AACxD,QAAM,eAAe,QAAQ,QAAQ,IAAI,QAAQ;AACjD,QAAM,SAAS,eAAe,OAAO,MAAM,YAAY,EAAE,UAAU,IAAI;AACnE,MAAA,WAAW,WAAW,WAAW;AAAe,WAAA;AAC7C,SAAA;AACR;AAEO,SAAS,SAAS,OAAyB;AACjD,MAAI,UAAU,UAAU;AAChB,WAAA,OAAO,UAAU,YAAY,IAAI,EAAE,MAAM,KAAK,QAAQ,GAAA,CAAI;AAAA,EAAA,OAC3D;AACC,WAAA,OAAO,UAAU,YAAY,OAAO,EAAE,MAAM,KAAK,QAAQ,QAAA,CAAU;AAAA,EAC3E;AACD;ACNA,MAAM,kBAAkB,EAAE,OAAO;AAAA,EAChC,OAAO,EAAE,KAAK,CAAC,UAAU,SAAS,MAAM,CAAC;AAAA;AAAA,EAEzC,YAAY,EAAE,OAAO,EAAE,SAAS;AACjC,CAAC;AAEqB,eAAAC,SAAO,EAAE,WAA+B;AACvD,QAAA,WAAW,MAAM,QAAQ;AACzB,QAAA,aAAa,aAAa,UAAU;AAAA,IACzC,QAAQ;AAAA,EAAA,CACR;AAEiB,oBAAA,WAAW,WAAW,WAAW,wBAAwB;AAE3E,QAAM,EAAE,OAAO,eAAe,WAAW;AAEzC,QAAM,eAAe;AAAA,IACpB,SAAS,EAAE,cAAc,SAAS,KAAK,EAAE;AAAA,EAAA;AAE1C,MAAI,YAAY;AACR,WAAA,SAAS,YAAY,YAAY;AAAA,EAAA,OAClC;AACN,WAAO,KAAK,EAAE,QAAQ,WAAW,MAAM,EAAA,GAAK,YAAY;AAAA,EACzD;AACD;AAEO,SAAS,YAAY;AAAA,EAC3B;AACD,GAEG;;AACF,QAAM,UAAU;AAChB,QAAM,cAAc;AAEd,QAAA,CAAC,IAAI,IAAI,QAAQ;AAAA,IACtB,IAAI;AAAA,IACJ,aAAYC,MAAA,QAAQ,SAAR,gBAAAA,IAAc;AAAA,EAAA,CAC1B;AAED,QAAM,iBAAiB;AACjB,QAAAC,QAAO,kBAAkB,kBAAkB;AACjD,QAAM,WACLA,UAAS,WAAW,UAAUA,UAAS,UAAU,SAAS;AAC3D,QAAM,YAAY;AAAA,IACjB,OACE,oBAAA,MAAA,EAAK,MAAK,OACV,8BAAC,QAAK,EAAA,WAAU,WAAU,UAAA,QAAA,CAAK,EAChC,CAAA;AAAA,IAED,MACE,oBAAA,MAAA,EAAK,MAAK,QACV,8BAAC,QAAK,EAAA,WAAU,WAAU,UAAA,OAAA,CAAI,EAC/B,CAAA;AAAA,IAED,QACE,oBAAA,MAAA,EAAK,MAAK,UACV,8BAAC,QAAK,EAAA,WAAU,WAAU,UAAA,SAAA,CAAM,EACjC,CAAA;AAAA,EAAA;AAKD,SAAA;AAAA,IAAC,QAAQ;AAAA,IAAR;AAAA,MACA,QAAO;AAAA,MACN,GAAG,aAAa,IAAI;AAAA,MACrB,QAAO;AAAA,MAEP,UAAA;AAAA,QAAC,oBAAA,YAAA,EACC,UACA,MAAA,oBAAC,SAAM,EAAA,MAAK,UAAS,MAAK,cAAa,OAAO,YAAY,KAAM,CAAA,GAElE;AAAA,4BACC,SAAM,EAAA,MAAK,UAAS,MAAK,SAAQ,OAAO,UAAU;AAAA,QACnD,oBAAC,OAAI,EAAA,WAAU,cACd,UAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,MAAK;AAAA,YACL,WAAU;AAAA,YAET,oBAAUA,KAAI;AAAA,UAAA;AAAA,QAAA,GAEjB;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAGH;AAMO,SAAS,yBAAyB;AACxC,QAAM,WAAW;AACjB,QAAM,eAAe,SAAS;AAAA,IAC7B,CAAA,MAAK,EAAE,eAAe;AAAA,EAAA;AAGnB,MAAA,gBAAgB,aAAa,UAAU;AACpC,UAAA,aAAa,aAAa,aAAa,UAAU;AAAA,MACtD,QAAQ;AAAA,IAAA,CACR;AAEG,QAAA,WAAW,WAAW,WAAW;AACpC,aAAO,WAAW,MAAM;AAAA,IACzB;AAAA,EACD;AACD;AAMO,SAAS,WAAW;AAC1B,QAAM,QAAQ;AACd,QAAM,cAAc;AACpB,QAAM,iBAAiB;AACvB,MAAI,gBAAgB;AACZ,WAAA,mBAAmB,WAAW,MAAM,QAAQ;AAAA,EACpD;AACO,SAAA,YAAY,UAAU,SAAS,MAAM;AAC7C;;;;;;;;AClI4F,MAAe,wBAAA;ACK3G,eAAsB,wBAAwB;AAAA,EAC7C,KAAAZ;AAAA,EACA;AACD,GAGG;AACF,QAAM,EAAE,kBAAkB,oBAAoB,MAAM,gBAAgB;AACpE,MAAI,kBAAkB;AACrB,UAAM,IAAI;AAAA,MACT,yEAAyE,eAAe;AAAA,IAAA;AAAA,EAE1F;AACM,QAAA,SAAS,0BAA0B,eAAe;AAClD,QAAA,QAAQ,QAAQ,IAAI;AACnB,SAAA,MAAM,GAAG,MAAM,uBAAuB;AAAA,IAC5C,QAAQ;AAAA,IACR,SAAS;AAAA,MACR,eAAe,UAAU,KAAK;AAAA,MAC9B,gBAAgB;AAAA,IACjB;AAAA,IACA,MAAM,KAAK,UAAU,EAAE,KAAAA,MAAK,YAAY;AAAA,EAAA,CACxC;AACF;ACRA,MAAM,sBAAsB,QAAQ,IAAI;AAExC,MAAM,UAAU,SAAS,WAAW,cAAc;AAElD,SAAS,eAAe,WAAW,MAAyB;AACrD,QAAA,KAAK,IAAI,SAAS,mBAAmB;AACrC,QAAA,EAAE,qBAAqB;AAC7B,MAAI,CAAC;AAAyB,WAAA;AAE1B,MAAA;AAEH,OAAG,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMP;AAAA,WACO,OAAgB;AACxB,OAAG,WAAW,mBAAmB;AACjC,QAAI,UAAU;AACL,cAAA;AAAA,QACP,wDAAwD,mBAAmB;AAAA,MAAA;AAE5E,aAAO,eAAe,KAAK;AAAA,IAC5B;AACM,UAAA;AAAA,EACP;AACO,SAAA;AACR;AAEA,MAAM,MAAM;AAAA,EACX;AAAA,EACA,MAAM,IAAI,SAAsC,EAAE,KAAK,KAAM;AAC9D;AAEO,MAAM,WAAW;AAAA,EACvB,MAAM;AAAA,EACN,KAAK,CAACA,MAAK,UAAU;;AACd,UAAA,MAAM,SAAS,+BAAO,QAAQ;AAChC,QAAA,IAAIA,MAAK,OAAO;AAAA,MACnB,KAAK,QAAQ,WAAW,SAAY;AAAA,MACpC,QAAOW,MAAA,+BAAO,aAAP,gBAAAA,IAAiB;AAAA,IAAA,CACxB;AACM,WAAA;AAAA,EACR;AAAA,EACA,KAAK,CAAAX,SAAO,IAAI,IAAIA,IAAG;AAAA,EACvB,QAAQ,CAAAA,SAAO,IAAI,OAAOA,IAAG;AAC9B;AAEA,MAAM,mBAAmB,EAAE,OAAO;AAAA,EACjC,UAAU,EAAE,OAAO;AAAA,IAClB,aAAa,EAAE,OAAO;AAAA,IACtB,KAAK,EAAE,OAAS,EAAA,SAAA,EAAW,SAAS;AAAA,IACpC,KAAK,EAAE,OAAS,EAAA,SAAA,EAAW,SAAS;AAAA,EAAA,CACpC;AAAA,EACD,OAAO,EAAE,QAAQ;AAClB,CAAC;AACD,MAAM,yBAAyB,EAAE,OAAO;AAAA,EACvC,UAAU,EAAE,OAAO;AAAA,EACnB,OAAO,EAAE,OAAO;AACjB,CAAC;AAEM,MAAM,QAAwB;AAAA,EACpC,MAAM;AAAA,EACN,IAAIA,MAAK;AACR,UAAM,SAAS,QACb,QAAQ,iDAAiD,EACzD,IAAIA,IAAG;AACH,UAAA,cAAc,uBAAuB,UAAU,MAAM;AAC3D,QAAI,CAAC,YAAY;AAAgB,aAAA;AAE3B,UAAA,cAAc,iBAAiB,UAAU;AAAA,MAC9C,UAAU,KAAK,MAAM,YAAY,KAAK,QAAQ;AAAA,MAC9C,OAAO,KAAK,MAAM,YAAY,KAAK,KAAK;AAAA,IAAA,CACxC;AACD,QAAI,CAAC,YAAY;AAAgB,aAAA;AACjC,UAAM,EAAE,UAAU,UAAU,YAAY;AACxC,QAAI,CAAC;AAAc,aAAA;AACZ,WAAA,EAAE,UAAU;EACpB;AAAA,EACA,MAAM,IAAIA,MAAKa,QAAO;AACrB,UAAM,EAAE,kBAAkB,oBAAoB,MAAM,gBAAgB;AACpE,QAAI,kBAAkB;AAEnB,cAAA;AAAA,QACA;AAAA,QAEA,IAAI;AAAA,QACJ,KAAAb;AAAA,QACA,OAAO,KAAK,UAAUa,OAAM,KAAK;AAAA,QACjC,UAAU,KAAK,UAAUA,OAAM,QAAQ;AAAA,MAAA,CACvC;AAAA,IAAA,OACI;AAEN,WAAK,wBAAwB;AAAA,QAC5B,KAAAb;AAAA,QACA,YAAYa;AAAA,MAAA,CACZ,EAAE,KAAK,CAAY,aAAA;AACf,YAAA,CAAC,SAAS,IAAI;AACT,kBAAA;AAAA,YACP,uCAAuCb,IAAG,0BAA0B,eAAe,MAAM,SAAS,MAAM,IAAI,SAAS,UAAU;AAAA,YAC/H,EAAE,OAAAa,OAAM;AAAA,UAAA;AAAA,QAEV;AAAA,MAAA,CACA;AAAA,IACF;AAAA,EACD;AAAA,EACA,MAAM,OAAOb,MAAK;AACjB,UAAM,EAAE,kBAAkB,oBAAoB,MAAM,gBAAgB;AACpE,QAAI,kBAAkB;AACrB,cAAQ,QAAQ,iCAAiC,EAAE,IAAIA,IAAG;AAAA,IAAA,OACpD;AAEN,WAAK,wBAAwB;AAAA,QAC5B,KAAAA;AAAA,QACA,YAAY;AAAA,MAAA,CACZ,EAAE,KAAK,CAAY,aAAA;AACf,YAAA,CAAC,SAAS,IAAI;AACT,kBAAA;AAAA,YACP,uCAAuCA,IAAG,0BAA0B,eAAe,MAAM,SAAS,MAAM,IAAI,SAAS,UAAU;AAAA,UAAA;AAAA,QAEjI;AAAA,MAAA,CACA;AAAA,IACF;AAAA,EACD;AACD;AAEA,eAAsB,gBAAgB,OAAe;AAC7C,SAAA;AAAA,IACN,QAAQ,QACN,QAAQ,+BAA+B,EACvC,IAAI,KAAK,EACT,IAAI,CAAQ,QAAA,IAAwB,GAAG;AAAA,IACzC,KAAK,CAAC,GAAG,IAAI,MAAM;AAAA,EAAA;AAErB;AAEsB,eAAA,gBAAgB,QAAgB,OAAe;AAC7D,SAAA;AAAA,IACN,QAAQ,QACN,QAAQ,gDAAgD,EACxD,IAAI,IAAI,MAAM,KAAK,KAAK,EACxB,IAAI,CAAA,QAAQ,IAAwB,GAAG;AAAA,IACzC,KAAK,CAAC,GAAG,IAAI,MAAM,EAAE,OAAO,CAAOA,SAAAA,KAAI,SAAS,MAAM,CAAC;AAAA,EAAA;AAEzD;AAEA,eAAsB,UACrB;AAAA,EACC;AAAA,EACA,GAAG;AACJ,GAGA,WAAkC,mBACjB;AACV,SAAAc;AAAAA,IACN;AAAA,IACA,eAAe,wBAAwB,OAAO,GAAG,QAAQ;AAAA,EAAA;AAE3D;ACrLO,MAAM,mBAAmB;AAEzB,MAAM,0BAA0B;ACQvC,MAAM,mBAAmB,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU;AACvD,MAAM,wBAAwB,EAC5B,OAAO;AAAA,EACP,SAAS,EAAE,QAAQ,IAAI;AAAA,EACvB,MAAM;AACP,CAAC,EACA;AAAA,EACA,EAAE,OAAO;AAAA,IACR,SAAS,EAAE,QAAQ,KAAK;AAAA,EAAA,CACxB;AACF;AAED,MAAM,eACL,aAAQ,IAAI,qBAAZ,mBAA8B,WAAW,aACzC,QAAQ,IAAI,aAAa;AAEnB,MAAM,eAAuC;AAAA,EACnD,kBAAkB;AACjB,WAAO,IAAI;AAAA,MACV;AAAA,QACC,UAAU,QAAQ,IAAI;AAAA,QACtB,cAAc,QAAQ,IAAI;AAAA,QAC1B,aAAa;AAAA,MACd;AAAA,MACA,OAAO,EAAE,QAAA,MAAc;;AAChB,cAAA,SAAQH,MAAA,QAAQ,OAAO,CAAC,MAAhB,gBAAAA,IAAmB,MAAM,OAAO;AAC9C,YAAI,CAAC,OAAO;AACL,gBAAA,IAAI,MAAM,iBAAiB;AAAA,QAClC;AACA,cAAM,WAAW,QAAQ;AACzB,cAAM,WAAW,QAAQ,OAAO,CAAC,EAAE;AAC5B,eAAA;AAAA,UACN;AAAA,UACA,IAAI,QAAQ;AAAA,UACZ;AAAA,UACA,MAAM,QAAQ,KAAK;AAAA,UACnB;AAAA,QAAA;AAAA,MAEF;AAAA,IAAA;AAAA,EAEF;AAAA,EAEA,MAAM,sBACL,YACA,EAAE,QAAQ,IAA2B,CAAA,GACpC;AACK,UAAA,SAAS,MAAM,UAAU;AAAA,MAC9B,KAAK,0BAA0B,UAAU;AAAA,MACzC;AAAA,MACA;AAAA,MACA,KAAK,MAAO;AAAA,MACZ,KAAK,MAAO,KAAK,KAAK,KAAK;AAAA,MAC3B,MAAM,cAAc,SAAS;AAC5B,cAAM,WAAW,MAAM;AAAA,UACtB,+BAA+B,UAAU;AAAA,UACzC,EAAE,SAAS,EAAE,eAAe,SAAS,QAAQ,IAAI,YAAY,KAAK;AAAA,QAAA;AAE7D,cAAA,UAAU,MAAM,SAAS;AACzBI,cAAAA,UAAS,iBAAiB,UAAU,OAAO;AAC7C,YAAA,CAACA,QAAO,SAAS;AAGpB,kBAAQ,SAAS,MAAM;AAAA,QACxB;AACOA,eAAAA;AAAAA,MACR;AAAA,MACA,YAAY;AAAA,IAAA,CACZ;AACM,WAAA;AAAA,MACN,aAAa,OAAO,UAAU,OAAO,KAAK,QAAQ;AAAA,MAClD,MAAM,OAAO,UAAU,sBAAsB,OAAO,KAAK,KAAK,KAAK;AAAA,IAAA;AAAA,EAErE;AAAA,EAEA,MAAM,iBAAiB,SAAkB;AACxC,QAAI,CAAC;AAAY;AAEX,UAAA,oBAAoB,MAAM,yBAAyB;AAAA,MACxD,QAAQ,QAAQ,IAAI,QAAQ;AAAA,IAAA;AAE7B,UAAM,QAAQC;AACI,sBAAA,IAAI,gBAAgB,KAAK;AAI3C,UAAM,OACL,QAAQ,QAAQ,IAAI,uBAAuB,KAAK;AACjD,UAAM,eAAe,IAAI,gBAAgB,EAAE,MAAM,MAAO,CAAA;AAClD,UAAAC,WAAS,yBAAyB,YAAY,IAAI;AAAA,MACvD,SAAS;AAAA,QACR,cACC,MAAM,yBAAyB,cAAc,iBAAiB;AAAA,MAChE;AAAA,IAAA,CACA;AAAA,EACF;AACD;ACnGO,MAAM,2BAA2B,2BAA2B;AAAA,EAClE,QAAQ;AAAA,IACP,MAAM;AAAA,IACN,UAAU;AAAA;AAAA,IACV,MAAM;AAAA,IACN,UAAU;AAAA,IACV,QAAQ,KAAK;AAAA;AAAA,IACb,SAAS,QAAQ,IAAI,eAAe,MAAM,GAAG;AAAA,IAC7C,QAAQ,QAAQ,IAAI,aAAa;AAAA,EAClC;AACD,CAAC;AAEM,MAAM,YAAgD;AAAA,EAC5D,QAAQ,IAAI,eAAe;AAC5B;AAEgB,SAAA,iBAAiB,cAA4B,SAAkB;AAC9E,SAAO,UAAU,YAAY,EAAE,iBAAiB,OAAO;AACxD;AAEgB,SAAA,sBACf,cACA,YACA,SACC;AACD,SAAO,UAAU,YAAY,EAAE,sBAAsB,YAAY,OAAO;AACzE;AC5Ba,MAAAC,WAAS,SAAS,UAAU,MAAM;AAK9C,QAAM,eAAe;AAEf,QAAA,SAAS,IAAI,aAAa;AAAA,IAC/B,KAAK;AAAA,MACJ,EAAE,OAAO,SAAS,MAAM,QAAQ;AAAA,MAChC,EAAE,OAAO,SAAS,MAAM,SAAS;AAAA,MACjC,EAAE,OAAO,QAAQ,MAAM,SAAS;AAAA,IACjC;AAAA,EAAA,CACA;AACM,SAAA,IAAI,SAAS,OAAM,MAAK;AAC9B,QAAI,EAAE,WAAW;AAAc;AACzB,UAAA,QACL,EAAE,WAAW,eAAe,MACzB,UACA,EAAE,WAAW,eAAe,MAC3B,SACA,EAAE,WAAW,eAAe,MAC3B,WACA,EAAE,WAAW,eAAe,MAC3B,cACA;AACP,UAAM,MAAM,MAAM,KAAK,EAAE,GAAG,EAAE,QAAQ,IAAI;AAC1C,YAAQ,KAAK,kBAAkB,GAAG,MAAM,EAAE,KAAK,EAAE;AAAA,EAAA,CACjD;AACD,SAAO,SAAS;AACT,SAAA;AACR,CAAC;ACjCM,MAAM,qBAAqB,2BAA2B;AAAA,EAC5D,QAAQ;AAAA,IACP,MAAM;AAAA,IACN,UAAU;AAAA;AAAA,IACV,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS,QAAQ,IAAI,eAAe,MAAM,GAAG;AAAA,IAC7C,QAAQ,QAAQ,IAAI,aAAa;AAAA,EAClC;AACD,CAAC;AAID,MAAM,wBAAwB,mBAAmB;AAEjD,OAAO,eAAe,oBAAoB,iBAAiB;AAAA,EAC1D,OAAO,eAAe,iBAClB,MACF;AACK,UAAA,CAAC,SAAS,OAAO,IAAI;AAC3B,QAAI,mCAAS,SAAS;AACb,cAAA,IAAI,WAAW,QAAQ,OAAO;AAAA,IACvC;AACA,QAAI,mCAAS,QAAQ;AACZ,cAAA,IAAI,WAAW,IAAI,KAAK,KAAK,QAAQ,QAAQ,SAAS,GAAI,CAAC;AAAA,IACpE;AACM,UAAA,UAAU,QAAQ,IAAI,SAAS,IAClC,IAAI,KAAK,QAAQ,IAAI,SAAS,CAAC,IAC/B;AACG,UAAA,kBAAkB,MAAM,sBAAsB,SAAS;AAAA,MAC5D,GAAG;AAAA,MACH;AAAA,IAAA,CACA;AACM,WAAA;AAAA,EACR;AACD,CAAC;AC1BM,MAAM,0BAA0B,MAAO,KAAK,KAAK,KAAK;AACtD,MAAM,2BAA2B,MACvC,IAAI,KAAK,KAAK,IAAA,IAAQ,uBAAuB;AAEvC,MAAM,aAAa;AAEnB,MAAM,gBAAgB,IAAI;AAAA,EAChC;AACD;AAEA,WAAW,CAAC,cAAc,QAAQ,KAAK,OAAO,QAAQ,SAAS,GAAG;AACjE,gBAAc,IAAI,SAAS,gBAAgB,GAAG,YAAY;AAC3D;AAEA,eAAsB,UAAU,SAAkB;AAC3C,QAAA,cAAc,MAAM,mBAAmB;AAAA,IAC5C,QAAQ,QAAQ,IAAI,QAAQ;AAAA,EAAA;AAEvB,QAAA,YAAY,YAAY,IAAI,UAAU;AAC5C,MAAI,CAAC;AAAkB,WAAA;AACvB,QAAM,UAAU,MAAMA,SAAO,QAAQ,WAAW;AAAA,IAC/C,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,KAAK,IAAI;AAAA,IACzC,OAAO,EAAE,IAAI,WAAW,gBAAgB,EAAE,IAAI,oBAAI,KAAK,IAAI;AAAA,EAAA,CAC3D;AACG,MAAA,EAAC,mCAAS,OAAM;AACnB,UAAMD,WAAS,KAAK;AAAA,MACnB,SAAS;AAAA,QACR,cAAc,MAAM,mBAAmB,eAAe,WAAW;AAAA,MAClE;AAAA,IAAA,CACA;AAAA,EACF;AACA,SAAO,QAAQ,KAAK;AACrB;AAEA,eAAsB,cACrB,SACA,EAAE,WAAW,IAAoC,CAAA,GAChD;AACK,QAAA,SAAS,MAAM,UAAU,OAAO;AACtC,MAAI,CAAC,QAAQ;AACZ,UAAM,aAAa,IAAI,IAAI,QAAQ,GAAG;AAErC,iBAAA,eAAe,OACZ,OACA,cAAc,GAAG,WAAW,QAAQ,GAAG,WAAW,MAAM;AAC5D,UAAM,cAAc,aAAa,IAAI,gBAAgB,EAAE,WAAA,CAAY,IAAI;AACjE,UAAA,gBAAgB,CAAC,UAAU,2CAAa,UAAU,EACtD,OAAO,OAAO,EACd,KAAK,GAAG;AACV,UAAMA,WAAS,aAAa;AAAA,EAC7B;AACO,SAAA;AACR;AAEA,eAAsB,iBAAiB,SAAkB;AAClD,QAAA,SAAS,MAAM,UAAU,OAAO;AACtC,MAAI,QAAQ;AACX,UAAMA,WAAS,GAAG;AAAA,EACnB;AACD;AAEA,eAAsB,MAAM;AAAA,EAC3B;AAAA,EACA;AACD,GAGG;AACF,QAAM,OAAO,MAAM,mBAAmB,EAAE,YAAY,QAAQ;AAC5D,MAAI,CAAC;AAAa,WAAA;AAClB,QAAM,UAAU,MAAMC,SAAO,QAAQ,OAAO;AAAA,IAC3C,QAAQ,EAAE,IAAI,MAAM,gBAAgB,MAAM,QAAQ,KAAK;AAAA,IACvD,MAAM;AAAA,MACL,gBAAgB,yBAAyB;AAAA,MACzC,QAAQ,KAAK;AAAA,IACd;AAAA,EAAA,CACA;AACM,SAAA;AACR;AAEA,eAAsB,kBAAkB;AAAA,EACvC;AAAA,EACA;AACD,GAGG;AACI,QAAA,iBAAiB,MAAM,gBAAgB,QAAQ;AAC9C,SAAAA,SAAO,KAAK,OAAO;AAAA,IACzB,OAAO,EAAE,SAAS;AAAA,IAClB,MAAM;AAAA,MACL,UAAU;AAAA,QACT,QAAQ;AAAA,UACP,MAAM;AAAA,QACP;AAAA,MACD;AAAA,IACD;AAAA,EAAA,CACA;AACF;AAEA,eAAsB,OAAO;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAKG;AACI,QAAA,iBAAiB,MAAM,gBAAgB,QAAQ;AAErD,QAAM,UAAU,MAAMA,SAAO,QAAQ,OAAO;AAAA,IAC3C,MAAM;AAAA,MACL,gBAAgB,yBAAyB;AAAA,MACzC,MAAM;AAAA,QACL,QAAQ;AAAA,UACP,OAAO,MAAM,YAAY;AAAA,UACzB,UAAU,SAAS,YAAY;AAAA,UAC/B;AAAA,UACA,OAAO,EAAE,SAAS,EAAE,MAAM,SAAS;AAAA,UACnC,UAAU;AAAA,YACT,QAAQ;AAAA,cACP,MAAM;AAAA,YACP;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,IACA,QAAQ,EAAE,IAAI,MAAM,gBAAgB,KAAK;AAAA,EAAA,CACzC;AAEM,SAAA;AACR;AAEA,eAAsB,qBAAqB;AAAA,EAC1C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAOG;AACF,QAAM,UAAU,MAAMA,SAAO,QAAQ,OAAO;AAAA,IAC3C,MAAM;AAAA,MACL,gBAAgB,yBAAyB;AAAA,MACzC,MAAM;AAAA,QACL,QAAQ;AAAA,UACP,OAAO,MAAM,YAAY;AAAA,UACzB,UAAU,SAAS,YAAY;AAAA,UAC/B;AAAA,UACA,OAAO,EAAE,SAAS,EAAE,MAAM,SAAS;AAAA,UACnC,aAAa,EAAE,QAAQ,EAAE,YAAY,eAAe;AAAA,UACpD,OAAO,WACJ,EAAE,QAAQ,MAAM,aAAa,QAAQ,EACrC,IAAA;AAAA,QACJ;AAAA,MACD;AAAA,IACD;AAAA,IACA,QAAQ,EAAE,IAAI,MAAM,gBAAgB,KAAK;AAAA,EAAA,CACzC;AAEM,SAAA;AACR;AAEA,eAAsB,OACrB;AAAA,EACC;AAAA,EACA,aAAa;AACd,GAIA,cACC;AACK,QAAA,cAAc,MAAM,mBAAmB;AAAA,IAC5C,QAAQ,QAAQ,IAAI,QAAQ;AAAA,EAAA;AAEvB,QAAA,YAAY,YAAY,IAAI,UAAU;AAG5C,MAAI,WAAW;AAGd,SAAKA,SAAO,QAAQ,WAAW,EAAE,OAAO,EAAE,IAAI,UAAY,EAAA,CAAC,EAAE,MAAM,MAAM;AAAA,IAAA,CAAE;AAAA,EAC5E;AACM,QAAAD,WAAS,aAAa,UAAU,GAAG;AAAA,IACxC,GAAG;AAAA,IACH,SAAS;AAAA,MACR,EAAE,cAAc,MAAM,mBAAmB,eAAe,WAAW,EAAE;AAAA,MACrE,6CAAc;AAAA,IACf;AAAA,EAAA,CACA;AACF;AAEA,eAAsB,gBAAgB,UAAkB;AACvD,QAAM,OAAO,MAAM,OAAO,KAAK,UAAU,EAAE;AACpC,SAAA;AACR;AAEsB,eAAA,mBACrB,OACA,UACC;AACD,QAAM,mBAAmB,MAAMC,SAAO,KAAK,WAAW;AAAA,IACrD;AAAA,IACA,QAAQ,EAAE,IAAI,MAAM,UAAU,EAAE,QAAQ,EAAE,MAAM,KAAK,IAAI;AAAA,EAAA,CACzD;AAED,MAAI,CAAC,oBAAoB,CAAC,iBAAiB,UAAU;AAC7C,WAAA;AAAA,EACR;AAEA,QAAM,UAAU,MAAM,OAAO,QAAQ,UAAU,iBAAiB,SAAS,IAAI;AAE7E,MAAI,CAAC,SAAS;AACN,WAAA;AAAA,EACR;AAEO,SAAA,EAAE,IAAI,iBAAiB;AAC/B;AC7Oa,MAAA,WAAW,IAAI,SAAS;AAAA,EACpC,oBAAoB,QAAQ,IAAI,aAAa,SAAS,OAAO;AAAA,EAC7D,gBAAgB,QAAQ,IAAI;AAC7B,CAAC;AAEM,SAAS,cAAc,UAAoB;AAC7C,MAAA;AACH,aAAS,MAAM,QAAQ;AAAA,WACf,OAAO;AACf,QAAI,iBAAiB,WAAW;AAC/B,YAAM,IAAI,SAAS,+BAA+B,EAAE,QAAQ,IAAK,CAAA;AAAA,IAClE;AACM,UAAA;AAAA,EACP;AACD;ACXO,MAAM,WAAW;AAExB,MAAM,cAAc,EAAE,OAAO;AAAA,EAC5B,aAAa,EAAE,OAAO;AAAA,EACtB,IAAI,EAAE,OAAA,EAAS,QAAQ,MAAMF,UAAM;AAAA,EACnC,OAAO,EAAE,OAAO,EAAE,SAAS;AAAA,EAC3B,MAAM,EAAE,KAAK,CAAC,WAAW,WAAW,OAAO,CAAC,EAAE,QAAQ,SAAS;AAChE,CAAC;AAKM,MAAM,sBAAsB,2BAA2B;AAAA,EAC7D,QAAQ;AAAA,IACP,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS,QAAQ,IAAI,eAAe,MAAM,GAAG;AAAA,IAC7C,QAAQ,QAAQ,IAAI,aAAa;AAAA,EAClC;AACD,CAAC;AAEqB,eAAA,kBACrB,KACAX,QACAH,OACC;AACD,SAAOe,WAAS,KAAK;AAAA,IACpB,GAAGf;AAAA,IACH,SAAS,eAAeA,SAAA,gBAAAA,MAAM,SAAS,MAAM,mBAAmBG,MAAK,CAAC;AAAA,EAAA,CACtE;AACF;AAEA,eAAsB,mBAAmB,YAAwB;AAC1D,QAAA,UAAU,MAAM,oBAAoB;AACpC,QAAAA,SAAQ,YAAY,MAAM,UAAU;AAClC,UAAA,MAAM,UAAUA,MAAK;AAC7B,QAAMc,UAAS,MAAM,oBAAoB,cAAc,OAAO;AAC9D,SAAO,IAAI,QAAQ,EAAE,cAAcA,QAAQ,CAAA;AAC5C;AAEA,eAAsB,SAAS,SAAkB;AAC1C,QAAA,UAAU,MAAM,oBAAoB;AAAA,IACzC,QAAQ,QAAQ,IAAI,QAAQ;AAAA,EAAA;AAE7B,QAAM,SAAS,YAAY,UAAU,QAAQ,IAAI,QAAQ,CAAC;AAC1D,QAAMd,SAAQ,OAAO,UAAU,OAAO,OAAO;AACtC,SAAA;AAAA,IACN,OAAAA;AAAA,IACA,SAASA,SACN,IAAI,QAAQ;AAAA,MACZ,cAAc,MAAM,oBAAoB,eAAe,OAAO;AAAA,IAC9D,CAAA,IACA;AAAA,EAAA;AAEL;ACzDA,SAAS,OAAO,MAA6D;AAC5E,SAAO,QAAQ,OAAO,SAAS,YAAY,OAAO,KAAK,OAAO;AAC/D;AAEO,SAAS,kBAAkB;AAC3B,QAAA,OAAO,mBAAsC,MAAM;AACzD,MAAI,CAAC,QAAQ,CAAC,OAAO,KAAK,IAAI,GAAG;AACzB,WAAA;AAAA,EACR;AACA,SAAO,KAAK;AACb;AAEO,SAAS,UAAU;AACzB,QAAM,YAAY;AAClB,MAAI,CAAC,WAAW;AACf,UAAM,IAAI;AAAA,MACT;AAAA,IAAA;AAAA,EAEF;AACO,SAAA;AACR;AASO,SAAS,sBAAsB,kBAAoC;AACzE,QAAM,CAACK,SAAQ,QAAQ,MAAM,IAAI,iBAAiB,MAAM,GAAG;AAKpD,SAAA;AAAA,IACN,QAAAA;AAAA,IACA;AAAA,IACA,QAAQ,SAAU,OAAO,MAAM,GAAG,IAAsB;AAAA,EAAA;AAE1D;AAEgB,SAAA,kBACf,MACA,YACC;AACD,MAAI,CAAC;AAAa,WAAA;AAClB,QAAM,EAAE,QAAAA,SAAQ,QAAQ,OAAO,IAAI,sBAAsB,UAAU;AACnE,SAAO,KAAK,MAAM;AAAA,IAAK,CAAA,SACtB,KAAK,YAAY;AAAA,MAChB,CAAAU,gBACCA,YAAW,WAAW,UACtBA,YAAW,WAAWV,YACrB,CAAC,UAAU,OAAO,SAASU,YAAW,MAAM;AAAA,IAC/C;AAAA,EAAA;AAEF;ACVO,MAAM,QAAuB,MAAM;AAClC,SAAA;AAAA;AAAA,IAEN,EAAE,KAAK,WAAW,MAAM,WAAW,IAAI,QAAQ;AAAA;AAAA,IAE/C,EAAE,KAAK,aAAa,MAAM,0BAA0B;AAAA,IACpD;AAAA,MACC,KAAK;AAAA,MACL,MAAM;AAAA,MACN,MAAM;AAAA,IACP;AAAA,IACA,EAAE,KAAK,oBAAoB,MAAM,iCAAiC;AAAA,IAClE;AAAA,MACC,KAAK;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,IACd;AAAA;AAAA;AAAA,IAEA,EAAE,KAAK,QAAQ,MAAM,iBAAiB,MAAM,wBAAwB;AAAA,IACpE,EAAE,KAAK,cAAc,MAAM,sBAAsB;AAAA,EAAA,EAChD,OAAO,OAAO;AACjB;AAEO,MAAMC,SAAoC,CAAC,EAAE,WAAW;AACvD,SAAA;AAAA,IACN,EAAE,OAAO,OAAO,eAAe,qBAAqB;AAAA,IACpD,EAAE,MAAM,eAAe,SAAS,yBAAyB;AAAA,EAAA;AAE3D;AAEsB,eAAAC,SAAO,EAAE,WAA+B;AACvD,QAAA,UAAU,YAAY,aAAa;AACzC,QAAM,SAAS,MAAM,KAAK,MAAM,UAAU,OAAO,GAAG;AAAA,IACnD;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EAAA,CACN;AAEK,QAAA,OAAO,SACV,MAAM;AAAA,IACN,MACCJ,SAAO,KAAK,kBAAkB;AAAA,MAC7B,QAAQ;AAAA,QACP,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,UAAU;AAAA,QACV,OAAO,EAAE,QAAQ,EAAE,IAAI,OAAO;AAAA,QAC9B,OAAO;AAAA,UACN,QAAQ;AAAA,YACP,MAAM;AAAA,YACN,aAAa;AAAA,cACZ,QAAQ,EAAE,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK;AAAA,YACpD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,MACA,OAAO,EAAE,IAAI,OAAO;AAAA,IAAA,CACpB;AAAA,IACF,EAAE,SAAS,MAAM,aAAa,MAAM,oBAAoB;AAAA,EAExD,IAAA;AACC,MAAA,UAAU,CAAC,MAAM;AACpB,YAAQ,KAAK,0BAA0B;AAGvC,UAAM,OAAO,EAAE,SAAS,YAAY,IAAK,CAAA;AAAA,EAC1C;AACA,QAAM,EAAE,OAAAb,QAAO,SAAS,aAAiB,IAAA,MAAM,SAAS,OAAO;AACzD,QAAA,aAAa,SAAS;AAErB,SAAA;AAAA,IACN;AAAA,MACC;AAAA,MACA,aAAa;AAAA,QACZ,OAAO,SAAS,OAAO;AAAA,QACvB,QAAQ,aAAa,OAAO;AAAA,QAC5B,MAAM,IAAI,IAAI,QAAQ,GAAG,EAAE;AAAA,QAC3B,WAAW;AAAA,UACV,OAAO,SAAS,OAAO;AAAA,QACxB;AAAA,MACD;AAAA,MACA,KAAK,OAAO;AAAA,MACZ,OAAAA;AAAA,MACA;AAAA,IACD;AAAA,IACA;AAAA,MACC,SAAS;AAAA,QACR,EAAE,iBAAiB,QAAQ,WAAW;AAAA,QACtC;AAAA,MACD;AAAA,IACD;AAAA,EAAA;AAEF;AAEO,MAAMF,YAA2B,CAAC,EAAE,oBAAoB;AAC9D,QAAMA,WAAU;AAAA,IACf,iBAAiB,cAAc,IAAI,eAAe,KAAK;AAAA,EAAA;AAEjDA,SAAAA;AACR;AAEA,SAAS,SAAS;AAAA,EACjB;AAAA,EACA;AAAA,EACA,QAAQ;AAAA,EACR,MAAM,CAAC;AAAA,EACP,gBAAgB;AACjB,GAMG;AACF,8BACE,QAAK,EAAA,MAAK,MAAK,WAAW,GAAG,KAAK,6BAClC,UAAA;AAAA,IAAA,qBAAC,QACA,EAAA,UAAA;AAAA,MAAA,oBAAC,mBAAgB,OAAc;AAAA,0BAC9B,MAAK,EAAA;AAAA,MACN,oBAAC,QAAK,EAAA,SAAQ,QAAQ,CAAA;AAAA,MACrB,oBAAA,QAAA,EAAK,MAAK,YAAW,SAAQ,sCAAqC;AAAA,MAClE,gBAAgB,OAChB,oBAAC,UAAK,MAAK,UAAS,SAAQ,qBAAoB;AAAA,0BAEhD,OAAM,EAAA;AAAA,IAAA,GACR;AAAA,IACA,qBAAC,QAAK,EAAA,WAAU,iCACd,UAAA;AAAA,MAAA;AAAA,MACD;AAAA,QAAC;AAAA,QAAA;AAAA,UACA;AAAA,UACA,yBAAyB;AAAA,YACxB,QAAQ,gBAAgB,KAAK,UAAU,GAAG,CAAC;AAAA,UAC5C;AAAA,QAAA;AAAA,MACD;AAAA,MACA,oBAAC,qBAAkB,OAAc;AAAA,MACjC,oBAAC,WAAQ,OAAc;AAAA,IAAA,GACxB;AAAA,EACD,EAAA,CAAA;AAEF;AAEA,SAAS,MAAM;AACd,QAAM,OAAO;AACb,QAAM,QAAQ;AACd,QAAM,OAAO;AACb,QAAM,QAAQ;AACd,QAAM,UAAU;AAChB,QAAM,iBAAiB,QAAQ,KAAK,CAAK,MAAA,EAAE,OAAO,qBAAqB;AACvE,QAAM,YAAY,iBAAiB,OAAQ,oBAAA,WAAA,EAAU,QAAO,OAAO,CAAA;AAC7D,QAAA,gBAAgB,KAAK,IAAI,mBAAmB;AAClD,WAAS,KAAK,KAAK;AAGlB,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,KAAK,KAAK;AAAA,MAEV,UAAA;AAAA,QAAC,qBAAA,OAAA,EAAI,WAAU,0CACd,UAAA;AAAA,UAAA,oBAAC,YAAO,WAAU,kBACjB,UAAC,qBAAA,OAAA,EAAI,WAAU,6EACd,UAAA;AAAA,YAAA,oBAAC,MAAK,EAAA;AAAA,YACL,oBAAA,OAAA,EAAI,WAAU,2CACb,UACF,WAAA;AAAA,YACA,oBAAC,SAAI,WAAU,4BACb,iBACC,oBAAA,cAAA,CAAA,CAAa,IAEd,oBAAC,QAAO,EAAA,SAAO,MAAC,SAAQ,WAAU,MAAK,MACtC,UAAA,oBAAC,QAAK,IAAG,UAAS,UAAM,SAAA,CAAA,EAAA,CACzB,EAEF,CAAA;AAAA,YACC,oBAAA,OAAA,EAAI,WAAU,0BAA0B,UAAU,WAAA;AAAA,UAAA,EAAA,CACpD,EACD,CAAA;AAAA,8BAEC,OAAI,EAAA,WAAU,UACd,UAAA,oBAAC,SAAO,CAAA,GACT;AAAA,UAEA,qBAAC,OAAI,EAAA,WAAU,uCACd,UAAA;AAAA,YAAA,oBAAC,MAAK,EAAA;AAAA,gCACL,aAAY,EAAA,gBAAgB,KAAK,YAAY,UAAU,OAAO;AAAA,UAAA,GAChE;AAAA,QAAA,GACD;AAAA,4BACC,aAAY,EAAA,aAAW,MAAC,UAAS,cAAa,OAAc;AAAA,4BAC5D,cAAa,EAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAGjB;AAEA,SAAS,OAAO;AACf,SACE,qBAAA,MAAA,EAAK,IAAG,KAAI,WAAU,2BACtB,UAAA;AAAA,IAAC,oBAAA,QAAA,EAAK,WAAU,oDAAmD,UAEnE,QAAA;AAAA,IACC,oBAAA,QAAA,EAAK,WAAU,kDAAiD,UAEjE,SAAA;AAAA,EACD,EAAA,CAAA;AAEF;AAEA,SAAS,mBAAmB;AAC3B,QAAM,OAAO;AACb,6BACE,kBAAkB,EAAA,GAAG,KAAK,YAC1B,UAAA,oBAAC,MAAI,CAAA,EACN,CAAA;AAEF;AAEA,MAAA,OAAe,WAAW,gBAAgB;AAE1C,SAAS,eAAe;;AACvB,QAAM,OAAO;AACb,QAAM,SAAS;AACT,QAAA,UAAU,OAAwB,IAAI;AAC5C,8BACE,cACA,EAAA,UAAA;AAAA,IAAC,oBAAA,qBAAA,EAAoB,SAAO,MAC3B,UAAA,oBAAC,UAAO,SAAO,MAAC,SAAQ,aACvB,UAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,IAAI,UAAU,KAAK,QAAQ;AAAA,QAE3B,SAAS,CAAK,MAAA,EAAE,eAAe;AAAA,QAC/B,WAAU;AAAA,QAEV,UAAA;AAAA,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,WAAU;AAAA,cACV,KAAK,KAAK,QAAQ,KAAK;AAAA,cACvB,KAAK,eAAcQ,MAAA,KAAK,UAAL,gBAAAA,IAAY,EAAE;AAAA,YAAA;AAAA,UAClC;AAAA,8BACC,QAAK,EAAA,WAAU,0BACd,UAAK,KAAA,QAAQ,KAAK,UACpB;AAAA,QAAA;AAAA,MAAA;AAAA,OAEF,EACD,CAAA;AAAA,wBACC,oBACA,EAAA,UAAA,qBAAC,uBAAoB,YAAY,GAAG,OAAM,SACzC,UAAA;AAAA,MAAC,oBAAA,kBAAA,EAAiB,SAAO,MACxB,UAAA,oBAAC,QAAK,UAAS,UAAS,IAAI,UAAU,KAAK,QAAQ,IAClD,UAAA,oBAAC,QAAK,WAAU,gBAAe,MAAK,UAAS,UAAA,UAAA,CAE7C,GACD,EACD,CAAA;AAAA,MACA,oBAAC,oBAAiB,SAAO,MACxB,8BAAC,MAAK,EAAA,UAAS,UAAS,IAAI,UAAU,KAAK,QAAQ,UAClD,8BAAC,MAAK,EAAA,WAAU,gBAAe,MAAK,YAAW,UAE/C,QAAA,CAAA,EAAA,CACD,EACD,CAAA;AAAA,MACA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,SAAO;AAAA,UAEP,UAAU,CAAS,UAAA;AAClB,kBAAM,eAAe;AACrB,mBAAO,QAAQ,OAAO;AAAA,UACvB;AAAA,UAEA,UAAA,oBAAC,QAAK,QAAO,WAAU,QAAO,QAAO,KAAK,SACzC,UAAC,oBAAA,MAAA,EAAK,WAAU,gBAAe,MAAK,QACnC,UAAC,oBAAA,UAAA,EAAO,MAAK,UAAS,UAAA,SAAA,CAAM,GAC7B,EACD,CAAA;AAAA,QAAA;AAAA,MACD;AAAA,IAAA,EAAA,CACD,EACD,CAAA;AAAA,EACD,EAAA,CAAA;AAEF;AAEO,SAASY,kBAAgB;AAE/B,QAAM,QAAQ;AAUd,SACE,oBAAA,UAAA,EAAS,OACT,UAAA,oBAAC,wBAAqB,EACvB,CAAA;AAEF;;;;;;;;;;AC/UA,eAAsBD,WAAS;AAC9B,QAAM,IAAI,SAAS,aAAa,EAAE,QAAQ,IAAK,CAAA;AAChD;AAEA,SAAwB,WAAW;AAGlC,6BAAQC,iBAAc,CAAA,CAAA;AACvB;AAEO,SAASA,kBAAgB;AAC/B,QAAM,WAAW;AAEhB,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACA,gBAAgB;AAAA,QACf,KAAK,MACH,qBAAA,OAAA,EAAI,WAAU,uBACd,UAAA;AAAA,UAAC,qBAAA,OAAA,EAAI,WAAU,uBACd,UAAA;AAAA,YAAA,oBAAC,QAAG,UAAwB,2BAAA,CAAA;AAAA,YAC3B,oBAAA,OAAA,EAAI,WAAU,8CACb,mBAAS,UACX;AAAA,UAAA,GACD;AAAA,UACA,oBAAC,MAAK,EAAA,IAAG,KAAI,WAAU,0BACtB,UAAA,oBAAC,MAAK,EAAA,MAAK,cAAa,UAAA,eAAY,CAAA,GACrC;AAAA,QAAA,GACD;AAAA,MAEF;AAAA,IAAA;AAAA,EAAA;AAGH;;;;;;;ACpCO,MAAM,uBAAuB;AAGvB,MAAA,gBAAgB,CAAC,oBAAoB;AACrC,MAAA,qBAAqB,EAAE,KAAK,aAAa;AAG/C,MAAM,iBAA+C;AAAA,EAC3D,CAAC,oBAAoB,GAAG;AACzB;AAEO,MAAM,gBAAuD;AAAA,EACnE,CAAC,oBAAoB,GAAI,oBAAA,MAAA,EAAK,MAAK,cAAc,CAAA;AAClD;AAEO,SAAS,uBAAuB;AAAA,EACtC;AAAA,EACA;AAAA,EACA;AACD,GAIG;AACI,QAAA,QAAQ,eAAe,YAAY;AACnC,QAAA,aAAa,SAAS,YAAY;AACxC,QAAM,YAAY,aAAa,EAAE,WAAY,CAAA;AAE5C,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACA,WAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAO;AAAA,MAEN,UAAA;AAAA,QACA,aAAA,oBAAC,WAAM,MAAK,UAAS,MAAK,cAAa,OAAO,YAAY,IACvD;AAAA,QACJ;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,MAAK;AAAA,YACL,WAAU;AAAA,YACV,QAAQ,YAAY,YAAY;AAAA,YAEhC,UAAA,qBAAC,QAAK,EAAA,WAAU,oCACd,UAAA;AAAA,cAAA,cAAc,YAAY;AAAA,mCAC1B,QACC,EAAA,UAAA;AAAA,gBAAA;AAAA,gBAAK;AAAA,gBAAO;AAAA,cAAA,GACd;AAAA,YAAA,GACD;AAAA,UAAA;AAAA,QACD;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAGH;ACtDA,MAAM,MAAM;AACC,MAAA,0BAA0B,OAAO,UAAU,KAAK,IAAI,EAAE,QAAQ,IAAI;AAExE,SAAS,wBAAwB,YAAqB;AAC5D,SAAO,cAAc,eAAe,MACjC,OAAO,UAAU,KAAK,YAAY,EAAE,QAAQ,KAAK,GAAI,CAAA,IACrD;AACJ;AAEO,SAAS,uBAAuB,SAAkB;AACxD,QAAM,YAAY,QAAQ,QAAQ,IAAI,QAAQ;AAC9C,QAAM,gBAAgB,YAAY,OAAO,MAAM,SAAS,IAAI;AACtD,QAAA,aAAa,cAAc,GAAG;AACpC,SAAO,cAAc;AACtB;ACTA,eAAsBD,WAAS;AAC9B,SAAOL,WAAS,QAAQ;AACzB;AAEA,eAAsBP,SAAO,EAAE,SAAS,UAA8B;AACrE,QAAM,eAAe,mBAAmB,MAAM,OAAO,QAAQ;AAEzD,MAAA;AACG,UAAA,iBAAiB,cAAc,OAAO;AAC5C,WAAO,MAAM,cAAc,aAAa,cAAc,OAAO;AAAA,WACrD,OAAgB;AACxB,QAAI,iBAAiB,UAAU;AACxB,YAAA,WAAW,MAAM,QAAQ;AACzB,YAAA,gBAAgB,SAAS,IAAI,YAAY;AAC/C,YAAM,aACL,OAAO,kBAAkB,WACtB,gBACA,iBAAiB,OAAO;AACtB,YAAA,mBAAmB,wBAAwB,UAAU;AAC3D,UAAI,kBAAkB;AACf,cAAA,QAAQ,OAAO,cAAc,gBAAgB;AAAA,MACpD;AAAA,IACD;AACM,UAAA;AAAA,EACP;AACD;;;;;;ACRO,MAAM,iBAAiB,CAAC,MAAc,EAAE,YAAY;AAE9C,MAAA,oBAAoB,CAAC,MACjC,EAAE,QAAQ,kBAAkB,GAAG,EAAE,YAAY;ACzBvC,MAAM,uBAAuB,2BAA2B;AAAA,EAC9D,QAAQ;AAAA,IACP,MAAM;AAAA,IACN,UAAU;AAAA;AAAA,IACV,MAAM;AAAA,IACN,UAAU;AAAA,IACV,QAAQ,KAAK;AAAA;AAAA,IACb,SAAS,QAAQ,IAAI,eAAe,MAAM,GAAG;AAAA,IAC7C,QAAQ,QAAQ,IAAI,aAAa;AAAA,EAClC;AACD,CAAC;ACNM,MAAMc,WAAuC;AAAA,EACnD,YAAY,oBAAC,MAAK,EAAA,MAAK,eAAc,UAAG,OAAA;AAAA,EACxC,mBAAmB,MAAM;AAC1B;AAEO,MAAM,wBAAwB;AAErC,SAAwBC,mBAAiB;AACxC,6BAAQ,QAAO,CAAA,CAAA;AAChB;;;;;;;ACXA,MAAM,oBAAoB,EAAE,MAAM;AAAA,EACjC,EAAE,OAAO;AAAA,IACR,MAAM,EAAE,OAAO;AAAA,IACf,SAAS,EAAE,OAAO;AAAA,IAClB,YAAY,EAAE,OAAO;AAAA,EAAA,CACrB;AAAA,EACD,EAAE,OAAO;AAAA,IACR,MAAM,EAAE,QAAQ,cAAc;AAAA,IAC9B,SAAS,EAAE,QAAQ,eAAe;AAAA,IAClC,YAAY,EAAE,QAAQ,GAAG;AAAA,IACzB,OAAO,EAAE,IAAI;AAAA,EAAA,CACb;AACF,CAAC;AAGD,MAAM,sBAAsB,EAAE,OAAO;AAAA,EACpC,IAAI,EAAE,OAAO;AACd,CAAC;AAED,eAAsB,UAAU;AAAA,EAC/B;AAAA,EACA,GAAG;AACJ,GAMG;AACF,QAAM,OAAO;AAEb,QAAM,QAAQ;AAAA,IACb;AAAA,IACA,GAAG;AAAA,IACH,GAAI,QAAQ,MAAM,iBAAiB,KAAK,IAAI;AAAA,EAAA;AAI7C,MAAI,CAAC,QAAQ,IAAI,kBAAkB,CAAC,QAAQ,IAAI,OAAO;AACtD,YAAQ,MAAM,qDAAqD;AAC3D,YAAA;AAAA,MACP;AAAA,IAAA;AAED,YAAQ,MAAM,wCAAwC,KAAK,UAAU,KAAK,CAAC;AACpE,WAAA;AAAA,MACN,QAAQ;AAAA,MACR,MAAM,EAAE,IAAI,SAAS;AAAA,IAAA;AAAA,EAEvB;AAEM,QAAA,WAAW,MAAM,MAAM,iCAAiC;AAAA,IAC7D,QAAQ;AAAA,IACR,MAAM,KAAK,UAAU,KAAK;AAAA,IAC1B,SAAS;AAAA,MACR,eAAe,UAAU,QAAQ,IAAI,cAAc;AAAA,MACnD,gBAAgB;AAAA,IACjB;AAAA,EAAA,CACA;AACK,QAAA,OAAO,MAAM,SAAS;AACtB,QAAA,aAAa,oBAAoB,UAAU,IAAI;AAEjD,MAAA,SAAS,MAAM,WAAW,SAAS;AAC/B,WAAA;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,IAAA;AAAA,EACP,OACM;AACA,UAAA,cAAc,kBAAkB,UAAU,IAAI;AACpD,QAAI,YAAY,SAAS;AACjB,aAAA;AAAA,QACN,QAAQ;AAAA,QACR,OAAO,YAAY;AAAA,MAAA;AAAA,IACpB,OACM;AACC,aAAA;AAAA,QACN,QAAQ;AAAA,QACR,OAAO;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,OAAO;AAAA,QACR;AAAA,MAAA;AAAA,IAEF;AAAA,EACD;AACD;AAEA,eAAe,iBAAiB,OAAqB;AACpD,QAAM,CAAC,MAAM,IAAI,IAAI,MAAM,QAAQ,IAAI;AAAA,IACtC,YAAY,KAAK;AAAA,IACjB,YAAY,OAAO,EAAE,WAAW,MAAM;AAAA,EAAA,CACtC;AACM,SAAA,EAAE,MAAM;AAChB;ACrFA,MAAM,WAAW,MAAM,WAGrB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC3B;AAAA,EAAC,kBAAkB;AAAA,EAAlB;AAAA,IACA;AAAA,IACA,WAAW;AAAA,MACV;AAAA,MACA;AAAA,IACD;AAAA,IACC,GAAG;AAAA,IAEJ,UAAA;AAAA,MAAC,kBAAkB;AAAA,MAAlB;AAAA,QACA,WAAW,GAAG,+CAA+C;AAAA,QAE7D,UAAA,oBAAC,OAAI,EAAA,SAAQ,WACZ,UAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,GAAE;AAAA,YACF,QAAO;AAAA,YACP,aAAY;AAAA,YACZ,MAAK;AAAA,UAAA;AAAA,QAAA,GAEP;AAAA,MAAA;AAAA,IACD;AAAA,EAAA;AACD,CACA;AACD,SAAS,cAAc,kBAAkB,KAAK;ACjC9C,MAAM,WAAW,MAAM,WAGrB,CAAC,EAAE,WAAW,oBAAoB,GAAG,SAAS,QAC/C;AAAA,EAAC;AAAA,EAAA;AAAA,IACA;AAAA,IACA,oBAAoB;AAAA,MACnB;AAAA,MACA;AAAA,IACD;AAAA,IACA,WAAW,GAAG,+BAA+B,SAAS;AAAA,IACrD,GAAG;AAAA,EAAA;AACL,CACA;AACD,SAAS,cAAc;AAEvB,MAAM,gBAAgB,MAAM,WAG1B,CAAC,EAAE,WAAW,GAAG,SAAS,4BAC1B,OAAI,EAAA,KAAU,WAAW,GAAG,qBAAqB,SAAS,GAAI,GAAG,MAAO,CAAA,CACzE;AACD,cAAc,cAAc;AAE5B,MAAM,eAAe,MAAM,WAGzB,CAAC,EAAE,OAAO,WAAW,GAAG,MAAM,GAAG,QAAQ;AACpC,QAAA,kBAAkB,MAAM,WAAW,eAAe;AAClD,QAAA,OAAO,gBAAgB,MAAM,KAAK;AACxC,MAAI,CAAC;AAAY,UAAA,IAAI,MAAM,oBAAoB;AAC/C,QAAM,EAAE,MAAM,cAAc,SAAA,IAAa;AAGxC,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACA;AAAA,MACA,WAAW;AAAA,QACV;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,MACD;AAAA,MACC,GAAG;AAAA,MAEH,UAAA;AAAA,QAAA;AAAA,QACA,oCACC,OAAI,EAAA,WAAU,yEACd,UAAC,oBAAA,OAAA,EAAI,WAAU,2DAAA,CAA2D,EAC3E,CAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAIJ,CAAC;AACD,aAAa,cAAc;AAE3B,MAAM,oBAAoB,MAAM,WAG9B,CAAC,EAAE,GAAG,MAAM,GAAG,QAChB,oBAAC,SAAI,KAAU,MAAK,aAAa,GAAG,OAAO,cAE3C,CAAA,CACA;AACD,kBAAkB,cAAc;AC5DhC,MAAM,WAAW,MAAM;AAAA,EACtB,CAAC,EAAE,WAAW,GAAG,MAAA,GAAS,QAAQ;AAEhC,WAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,WAAW;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,QACC,GAAG;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACD;AACA,SAAS,cAAc;ACLhB,SAAS,UAAU;AAAA,EACzB;AAAA,EACA;AACD,GAGG;AACI,QAAA,iBAAiB,iCAAQ,OAAO;AACtC,MAAI,EAAC,iDAAgB;AAAe,WAAA;AACpC,SACE,oBAAA,MAAA,EAAG,IAAQ,WAAU,uBACpB,UAAe,eAAA,IAAI,CACnB,MAAA,oBAAC,QAAW,WAAU,2CACpB,UADO,KAAA,CAET,CACA,EACF,CAAA;AAEF;AAEO,SAAS,MAAM;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAKG;AACF,QAAM,aAAa;AACb,QAAA,KAAK,WAAW,MAAM;AAC5B,QAAM,WAAU,iCAAQ,UAAS,GAAG,EAAE,WAAW;AAEhD,SAAA,qBAAC,SAAI,WACJ,UAAA;AAAA,IAAA,oBAAC,OAAM,EAAA,SAAS,IAAK,GAAG,WAAY,CAAA;AAAA,IACpC;AAAA,MAAC;AAAA,MAAA;AAAA,QACA;AAAA,QACA,gBAAc,UAAU,OAAO;AAAA,QAC/B,oBAAkB;AAAA,QACjB,GAAG;AAAA,MAAA;AAAA,IACL;AAAA,IACA,oBAAC,OAAI,EAAA,WAAU,+BACb,UAAA,UAAW,oBAAA,WAAA,EAAU,IAAI,SAAS,OAAgB,CAAA,IAAK,KACzD,CAAA;AAAA,EACD,EAAA,CAAA;AAEF;AAEO,SAAS,SAAS;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAKG;AACF,QAAM,aAAa;AACb,QAAA,KAAK,WAAW,MAAM;AAC5B,QAAM,WAAU,iCAAQ,UAAS,GAAG,EAAE,WAAW;AAEhD,SAAA,qBAAC,SAAI,WACJ,UAAA;AAAA,IAAA,oBAAC,OAAM,EAAA,SAAS,IAAK,GAAG,WAAY,CAAA;AAAA,IACpC;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,SAAS;AAAA,QACT,WAAW;AAAA,QACX;AAAA,QACA,gBAAc,UAAU,OAAO;AAAA,QAC/B,oBAAkB;AAAA,QACjB,GAAG;AAAA,QAEJ,UAAA;AAAA,UAAA,qBAAC,eACA,EAAA,UAAA;AAAA,YAAC,oBAAA,cAAA,EAAa,OAAO,EAAG,CAAA;AAAA,YACxB,oBAAC,cAAa,EAAA,OAAO,EAAG,CAAA;AAAA,YACxB,oBAAC,cAAa,EAAA,OAAO,EAAG,CAAA;AAAA,UAAA,GACzB;AAAA,8BACC,mBAAkB,EAAA;AAAA,+BAClB,eACA,EAAA,UAAA;AAAA,YAAC,oBAAA,cAAA,EAAa,OAAO,EAAG,CAAA;AAAA,YACxB,oBAAC,cAAa,EAAA,OAAO,EAAG,CAAA;AAAA,YACxB,oBAAC,cAAa,EAAA,OAAO,EAAG,CAAA;AAAA,UAAA,GACzB;AAAA,QAAA;AAAA,MAAA;AAAA,IACD;AAAA,IACA,oBAAC,OAAI,EAAA,WAAU,+BACb,UAAA,UAAW,oBAAA,WAAA,EAAU,IAAI,SAAS,OAAgB,CAAA,IAAK,KACzD,CAAA;AAAA,EACD,EAAA,CAAA;AAEF;AAEO,SAAS,cAAc;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAKG;AACF,QAAM,aAAa;AACnB,QAAM,KAAK,cAAc,MAAM,cAAc,QAAQ;AACrD,QAAM,WAAU,iCAAQ,UAAS,GAAG,EAAE,WAAW;AAEhD,SAAA,qBAAC,SAAI,WACJ,UAAA;AAAA,IAAA,oBAAC,OAAM,EAAA,SAAS,IAAK,GAAG,WAAY,CAAA;AAAA,IACpC;AAAA,MAAC;AAAA,MAAA;AAAA,QACA;AAAA,QACA,gBAAc,UAAU,OAAO;AAAA,QAC/B,oBAAkB;AAAA,QACjB,GAAG;AAAA,MAAA;AAAA,IACL;AAAA,IACA,oBAAC,OAAI,EAAA,WAAU,+BACb,UAAA,UAAW,oBAAA,WAAA,EAAU,IAAI,SAAS,OAAgB,CAAA,IAAK,KACzD,CAAA;AAAA,EACD,EAAA,CAAA;AAEF;AAEO,SAAS,cAAc;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GASG;AACF,QAAM,EAAE,KAAAzB,MAAK,gBAAgB,GAAG,kBAAkB;AAClD,QAAM,aAAa;AACb,QAAA,eAAe,YAAY,SAAS;AAC1C,QAAM,QAAQ,gBAAgB;AAAA,IAC7B,KAAAA;AAAA,IACA,MAAM,YAAY;AAAA,IAClB,QAAQ,YAAY;AAAA,IACpB,cAAc,iBAAiB,eAAe;AAAA,EAAA,CAC9C;AACK,QAAA,KAAK,YAAY,MAAM;AAC7B,QAAM,WAAU,iCAAQ,UAAS,GAAG,EAAE,WAAW;AAGhD,SAAA,qBAAC,SAAI,WACJ,UAAA;AAAA,IAAC,qBAAA,OAAA,EAAI,WAAU,cACd,UAAA;AAAA,MAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,GAAG;AAAA,UACJ;AAAA,UACA,gBAAc,UAAU,OAAO;AAAA,UAC/B,oBAAkB;AAAA,UAClB,SAAS,MAAM,UAAU;AAAA,UACzB,iBAAiB,CAAS,UAAA;;AACzB,kBAAM,OAAO,MAAM,QAAQ,IAAI,eAAe,EAAE;AAChD,aAAAW,MAAA,YAAY,oBAAZ,gBAAAA,IAAA,kBAA8B;AAAA,UAC/B;AAAA,UACA,SAAS,CAAS,UAAA;;AACjB,kBAAM,MAAM;AACZ,aAAAA,MAAA,YAAY,YAAZ,gBAAAA,IAAA,kBAAsB;AAAA,UACvB;AAAA,UACA,QAAQ,CAAS,UAAA;;AAChB,kBAAM,KAAK;AACX,aAAAA,MAAA,YAAY,WAAZ,gBAAAA,IAAA,kBAAqB;AAAA,UACtB;AAAA,UACA,MAAK;AAAA,QAAA;AAAA,MACN;AAAA,MACA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,SAAS;AAAA,UACR,GAAG;AAAA,UACJ,WAAU;AAAA,QAAA;AAAA,MACX;AAAA,IAAA,GACD;AAAA,IACA,oBAAC,OAAI,EAAA,WAAU,kBACb,UAAA,UAAW,oBAAA,WAAA,EAAU,IAAI,SAAS,OAAgB,CAAA,IAAK,KACzD,CAAA;AAAA,EACD,EAAA,CAAA;AAEF;ACvMO,MAAM,sBAAsB;AAC5B,MAAM,sBAAsB;AAEtB,MAAA,iBAAiB,EAC5B,OAAO,EAAE,gBAAgB,wBAAwB,EACjD,IAAI,qBAAqB,EAAE,SAAS,yBAAyB,EAC7D,IAAI,qBAAqB,EAAE,SAAS,uBAAwB,CAAA,EAC5D,MAAM,mBAAmB;AAAA,EACzB,SAAS;AACV,CAAC,EAEA,UAAU,CAAS,UAAA,MAAM,YAAa,CAAA;AAE3B,MAAA,iBAAiB,EAC5B,OAAO,EAAE,gBAAgB,uBAAwB,CAAA,EACjD,IAAI,GAAG,EAAE,SAAS,wBAAyB,CAAA,EAC3C,IAAI,KAAK,EAAE,SAAS,wBAAwB;AACjC,MAAA,aAAa,EACxB,OAAO,EAAE,gBAAgB,mBAAoB,CAAA,EAC7C,IAAI,GAAG,EAAE,SAAS,oBAAqB,CAAA,EACvC,IAAI,IAAI,EAAE,SAAS,oBAAoB;AAClC,MAAM,cAAc,EACzB,OAAO,EAAE,gBAAgB,oBAAqB,CAAA,EAC9C,MAAM,EAAE,SAAS,mBAAoB,CAAA,EACrC,IAAI,GAAG,EAAE,SAAS,qBAAsB,CAAA,EACxC,IAAI,KAAK,EAAE,SAAS,qBAAqB,EAEzC,UAAU,CAAS,UAAA,MAAM,YAAa,CAAA;AAEjC,MAAM,mCAAmC,EAC9C,OAAO,EAAE,UAAU,gBAAgB,iBAAiB,eAAA,CAAgB,EACpE,YAAY,CAAC,EAAE,iBAAiB,SAAA,GAAY,QAAQ;AACpD,MAAI,oBAAoB,UAAU;AACjC,QAAI,SAAS;AAAA,MACZ,MAAM,CAAC,iBAAiB;AAAA,MACxB,MAAM;AAAA,MACN,SAAS;AAAA,IAAA,CACT;AAAA,EACF;AACD,CAAC;ACdK,MAAMa,WAAuC;AAAA,EACnD,YAAY,oBAAC,MAAK,EAAA,MAAK,mBAAkB,UAAY,gBAAA;AAAA,EACrD,mBAAmB,MAAM;AAC1B;AAEO,MAAM,4BAA4B;AAEzC,MAAM,oBAAoB,EAAE,OAAO;AAAA,EAClC,OAAO;AACR,CAAC;AAEqB,eAAAF,SAAO,EAAE,WAA+B;AAC7D,QAAM,0BAA0B,OAAO;AACjC,QAAA,SAAS,MAAM,cAAc,OAAO;AAC1C,QAAM,OAAO,MAAMJ,SAAO,KAAK,WAAW;AAAA,IACzC,OAAO,EAAE,IAAI,OAAO;AAAA,IACpB,QAAQ,EAAE,OAAO,KAAK;AAAA,EAAA,CACtB;AACD,MAAI,CAAC,MAAM;AACV,UAAM,SAAS,IAAI,gBAAgB,EAAE,YAAY,QAAQ,KAAK;AACxD,UAAAD,WAAS,UAAU,MAAM,EAAE;AAAA,EAClC;AACO,SAAA,KAAK,EAAE,KAAA,CAAM;AACrB;AAEsB,eAAAP,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AACpC,QAAA,WAAW,MAAM,QAAQ;AACzB,QAAA,aAAa,MAAM,aAAa,UAAU;AAAA,IAC/C,QAAQ,kBAAkB,YAAY,OAAO,MAAM,QAAQ;AAC1D,YAAM,eAAe,MAAMQ,SAAO,KAAK,WAAW;AAAA,QACjD,OAAO,EAAE,OAAO,KAAK,MAAM;AAAA,MAAA,CAC3B;AACD,UAAI,cAAc;AACjB,YAAI,SAAS;AAAA,UACZ,MAAM,CAAC,OAAO;AAAA,UACd,MAAM,EAAE,aAAa;AAAA,UACrB,SAAS;AAAA,QAAA,CACT;AAAA,MACF;AAAA,IAAA,CACA;AAAA,IACD,OAAO;AAAA,EAAA,CACP;AAEG,MAAA,WAAW,WAAW,WAAW;AAC7B,WAAA;AAAA,MACN,EAAE,QAAQ,WAAW,QAAQ;AAAA,MAC7B,EAAE,QAAQ,WAAW,WAAW,UAAU,MAAM,IAAI;AAAA,IAAA;AAAA,EAEtD;AACA,QAAM,EAAE,KAAK,YAAY,UAAU,IAAI,MAAM,oBAAoB;AAAA,IAChE,QAAQ,KAAK;AAAA,IACb;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,EAAA,CACN;AAEK,QAAA,WAAW,MAAM,UAAU;AAAA,IAChC,IAAI,WAAW,MAAM;AAAA,IACrB,SAAS;AAAA,IACT,OAAQ,oBAAA,kBAAA,EAAiB,WAAW,UAAU,SAAA,GAAY,KAAU;AAAA,EAAA,CACpE;AAEG,MAAA,SAAS,WAAW,WAAW;AAC5B,UAAA,gBAAgB,MAAM,qBAAqB;AACjD,kBAAc,IAAI,2BAA2B,WAAW,MAAM,KAAK;AAC5D,WAAAD,WAAS,WAAW,YAAY;AAAA,MACtC,SAAS;AAAA,QACR,cAAc,MAAM,qBAAqB,cAAc,aAAa;AAAA,MACrE;AAAA,IAAA,CACA;AAAA,EAAA,OACK;AACC,WAAA;AAAA,MACN,EAAE,QAAQ,WAAW,MAAM,EAAE,YAAY,CAAC,SAAS,MAAM,OAAO,EAAE,CAAC,EAAE;AAAA,MACrE,EAAE,QAAQ,IAAI;AAAA,IAAA;AAAA,EAEhB;AACD;AAEA,SAAwB,mBAAmB;AAC1C,QAAM,OAAO;AACb,QAAM,aAAa;AAEnB,QAAM,CAAC,MAAM,MAAM,IAAI,QAAQ;AAAA,IAC9B,IAAI;AAAA,IACJ,YAAY,iBAAiB,iBAAiB;AAAA,IAC9C,YAAY,yCAAY;AAAA,IACxB,WAAW,EAAE,YAAY;AACxB,aAAO,aAAa,UAAU,EAAE,QAAQ,kBAAmB,CAAA;AAAA,IAC5D;AAAA,EAAA,CACA;AAED,QAAM,YAAY;AAClB,8BACE,OACA,EAAA,UAAA;AAAA,IAAC,oBAAA,MAAA,EAAG,WAAU,WAAU,UAAY,gBAAA;AAAA,IACpC,oBAAC,OAAE,UAA8D,iEAAA,CAAA;AAAA,yBAChE,KAAE,EAAA,UAAA;AAAA,MAAA;AAAA,MACqD,KAAK,KAAK;AAAA,MAAM;AAAA,IAAA,GACxE;AAAA,IACA,oBAAC,OAAI,EAAA,WAAU,yBACd,UAAA,qBAAC,MAAK,EAAA,QAAO,QAAQ,GAAG,aAAa,IAAI,GACxC,UAAA;AAAA,MAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,YAAY,EAAE,UAAU,YAAY;AAAA,UACpC,YAAY;AAAA,YACX,GAAG,cAAc,OAAO,OAAO,EAAE,MAAM,SAAS;AAAA,YAChD,cAAc;AAAA,UACf;AAAA,UACA,QAAQ,OAAO,MAAM;AAAA,QAAA;AAAA,MACtB;AAAA,0BACC,WAAU,EAAA,IAAI,KAAK,SAAS,QAAQ,KAAK,QAAQ;AAAA,0BACjD,OACA,EAAA,UAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,QAAQ,YAAY,YAAY,KAAK,UAAU;AAAA,UAC/C,UAAA;AAAA,QAAA;AAAA,MAAA,GAGF;AAAA,IAAA,EAAA,CACD,EACD,CAAA;AAAA,EACD,EAAA,CAAA;AAEF;;;;;;;;;ACxIA,eAAsBS,qBAAmB;AAAA,EACxC;AAAA,EACA;AACD,GAAuB;AACtB,QAAM,0BAA0B,OAAO;AACvC;AAAA,IACC,WAAW,WAAW;AAAA,IACtB;AAAA,EAAA;AAGK,QAAA,gBAAgB,MAAM,qBAAqB;AAAA,IAChD,QAAQ,QAAQ,IAAI,QAAQ;AAAA,EAAA;AAEvB,QAAA,WAAW,cAAc,IAAI,yBAAyB;AAC5D,MAAI,CAAC,UAAU;AACP,WAAA;AAAA,MACN;AAAA,QACC,QAAQ,WAAW,MAAM;AAAA,UACxB,YAAY;AAAA,YACX;AAAA,UACD;AAAA,QAAA,CACA;AAAA,MACF;AAAA,MACA,EAAE,QAAQ,IAAI;AAAA,IAAA;AAAA,EAEhB;AACA,QAAM,gBAAgB,MAAMR,SAAO,KAAK,iBAAiB;AAAA,IACxD,QAAQ,EAAE,OAAO,KAAK;AAAA,IACtB,OAAO,EAAE,IAAI,WAAW,MAAM,OAAO;AAAA,EAAA,CACrC;AACD,QAAM,OAAO,MAAMA,SAAO,KAAK,OAAO;AAAA,IACrC,OAAO,EAAE,IAAI,WAAW,MAAM,OAAO;AAAA,IACrC,QAAQ,EAAE,IAAI,MAAM,OAAO,MAAM,UAAU,KAAK;AAAA,IAChD,MAAM,EAAE,OAAO,SAAS;AAAA,EAAA,CACxB;AAED,OAAK,UAAU;AAAA,IACd,IAAI,cAAc;AAAA,IAClB,SAAS;AAAA,IACT,OAAO,oBAAC,wBAAuB,EAAA,QAAQ,KAAK,IAAI;AAAA,EAAA,CAChD;AAEM,SAAA;AAAA,IACN;AAAA,IACA;AAAA,MACC,OAAO;AAAA,MACP,MAAM;AAAA,MACN,aAAa,kCAAkC,KAAK,KAAK;AAAA,IAC1D;AAAA,IACA;AAAA,MACC,SAAS;AAAA,QACR,cAAc,MAAM,qBAAqB,eAAe,aAAa;AAAA,MACtE;AAAA,IACD;AAAA,EAAA;AAEF;AAEO,SAAS,iBAAiB;AAAA,EAChC;AAAA,EACA;AACD,GAGG;AAED,SAAA,oBAAC,EAAE,MAAF,EAAO,MAAK,MAAK,KAAI,OACrB,UAAA,qBAAC,EAAE,WAAF,EACA,UAAA;AAAA,IAAA,oBAAC,QACA,UAAC,oBAAA,EAAE,MAAF,EAAO,oCAAuB,CAAA,GAChC;AAAA,IACC,oBAAA,KAAA,EACA,UAAC,qBAAA,EAAE,MAAF,EAAO,UAAA;AAAA,MAAA;AAAA,MACwB,oBAAC,YAAQ,UAAI,IAAA,CAAA;AAAA,IAAA,EAAA,CAC7C,EACD,CAAA;AAAA,wBACC,KACA,EAAA,UAAA,oBAAC,EAAE,MAAF,EAAO,+BAAkB,CAAA,GAC3B;AAAA,wBACC,EAAE,MAAF,EAAO,MAAM,WAAY,UAAU,WAAA;AAAA,EAAA,EACrC,CAAA,EACD,CAAA;AAEF;AAEA,SAAS,uBAAuB,EAAE,UAA8B;AAE9D,SAAA,oBAAC,EAAE,MAAF,EAAO,MAAK,MAAK,KAAI,OACrB,UAAA,qBAAC,EAAE,WAAF,EACA,UAAA;AAAA,IAAA,oBAAC,QACA,UAAC,oBAAA,EAAE,MAAF,EAAO,mDAAsC,CAAA,GAC/C;AAAA,wBACC,KACA,EAAA,UAAA,oBAAC,EAAE,MAAF,EAAO,uFAGR,CAAA,GACD;AAAA,wBACC,KACA,EAAA,UAAA,oBAAC,EAAE,MAAF,EAAO,uKAIR,CAAA,GACD;AAAA,IACC,oBAAA,KAAA,EACA,UAAC,qBAAA,EAAE,MAAF,EAAO,UAAA;AAAA,MAAA;AAAA,MAAkB;AAAA,IAAA,EAAA,CAAO,EAClC,CAAA;AAAA,EAAA,EACD,CAAA,EACD,CAAA;AAEF;AC3HO,SAAS,OAAO;AAAA,EACtB;AACD,GAsCG;AACF,QAAM,UAAuC;AAAA,IAC5C,OAAO;AAAA,IACP,OAAO;AAAA,IACP,OAAO;AAAA,IACP,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,OAAO;AAAA,IACP,OAAO;AAAA,EAAA;AAEF,QAAA,YAAY,QAAQ,IAAI;AACvB,SAAA,oBAAC,SAAI,UAAsB,CAAA;AACnC;ACtBO,MAAM,4BAA4B;AAEzC,MAAMS,qBAAmB,EACvB,OAAO;AAAA,EACP,UAAU;AAAA,EACV,MAAM;AAAA,EACN,uCAAuC,EAAE,QAAQ;AAAA,IAChD,gBACC;AAAA,EAAA,CACD;AAAA,EACD,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC/B,YAAY,EAAE,OAAO,EAAE,SAAS;AACjC,CAAC,EACA,IAAI,gCAAgC;AAEtC,eAAe,uBAAuB,SAAkB;AACvD,QAAM,iBAAiB,OAAO;AACxB,QAAA,gBAAgB,MAAM,qBAAqB;AAAA,IAChD,QAAQ,QAAQ,IAAI,QAAQ;AAAA,EAAA;AAEvB,QAAA,QAAQ,cAAc,IAAI,yBAAyB;AACzD,MAAI,OAAO,UAAU,YAAY,CAAC,OAAO;AACxC,UAAMV,WAAS,SAAS;AAAA,EACzB;AACO,SAAA;AACR;AAEsB,eAAAK,SAAO,EAAE,WAA+B;AACvD,QAAA,QAAQ,MAAM,uBAAuB,OAAO;AAC3C,SAAA,KAAK,EAAE,MAAA,CAAO;AACtB;AAEsB,eAAAZ,SAAO,EAAE,WAA+B;AACvD,QAAA,QAAQ,MAAM,uBAAuB,OAAO;AAC5C,QAAA,WAAW,MAAM,QAAQ;AAC/B,gBAAc,QAAQ;AAChB,QAAA,aAAa,MAAM,aAAa,UAAU;AAAA,IAC/C,QAAQ,CACP,WAAAiB,mBAAiB,YAAY,OAAO,MAAM,QAAQ;AACjD,YAAM,eAAe,MAAMT,SAAO,KAAK,WAAW;AAAA,QACjD,OAAO,EAAE,UAAU,KAAK,SAAS;AAAA,QACjC,QAAQ,EAAE,IAAI,KAAK;AAAA,MAAA,CACnB;AACD,UAAI,cAAc;AACjB,YAAI,SAAS;AAAA,UACZ,MAAM,CAAC,UAAU;AAAA,UACjB,MAAM,EAAE,aAAa;AAAA,UACrB,SAAS;AAAA,QAAA,CACT;AACD;AAAA,MACD;AAAA,IAAA,CACA,EAAE,UAAU,OAAM,SAAQ;AAC1B,UAAI,WAAW;AAAM,eAAO,EAAE,GAAG,MAAM,SAAS,KAAK;AAErD,YAAMU,WAAU,MAAM,OAAO,EAAE,GAAG,MAAM,OAAO;AAC/C,aAAO,EAAE,GAAG,MAAM,SAAAA,SAAQ;AAAA,IAAA,CAC1B;AAAA,IACF,OAAO;AAAA,EAAA,CACP;AAED,MAAI,WAAW,WAAW,aAAa,CAAC,WAAW,MAAM,SAAS;AAC1D,WAAA;AAAA,MACN,EAAE,QAAQ,WAAW,QAAQ;AAAA,MAC7B,EAAE,QAAQ,WAAW,WAAW,UAAU,MAAM,IAAI;AAAA,IAAA;AAAA,EAEtD;AAEA,QAAM,EAAE,SAAS,UAAAC,WAAU,WAAA,IAAe,WAAW;AAE/C,QAAA,cAAc,MAAM,mBAAmB;AAAA,IAC5C,QAAQ,QAAQ,IAAI,QAAQ;AAAA,EAAA;AAEjB,cAAA,IAAI,YAAY,QAAQ,EAAE;AAChC,QAAA,gBAAgB,MAAM,qBAAqB;AAC3C,QAAA1B,WAAU,IAAI;AACZ,EAAAA,SAAA;AAAA,IACP;AAAA,IACA,MAAM,mBAAmB,cAAc,aAAa;AAAA,MACnD,SAAS0B,YAAW,QAAQ,iBAAiB;AAAA,IAAA,CAC7C;AAAA,EAAA;AAEM,EAAA1B,SAAA;AAAA,IACP;AAAA,IACA,MAAM,qBAAqB,eAAe,aAAa;AAAA,EAAA;AAGjD,SAAA;AAAA,IACN,aAAa,UAAU;AAAA,IACvB,EAAE,OAAO,WAAW,aAAa,yBAAyB;AAAA,IAC1D,EAAE,SAAAA,SAAQ;AAAA,EAAA;AAEZ;AAEO,MAAMkB,SAAqB,MAAM;AACvC,SAAO,CAAC,EAAE,OAAO,2BAAA,CAA4B;AAC9C;AAEA,SAAwB,kBAAkB;AACzC,QAAM,OAAO;AACb,QAAM,aAAa;AACnB,QAAM,YAAY;AACZ,QAAA,CAAC,YAAY,IAAI;AACjB,QAAA,aAAa,aAAa,IAAI,YAAY;AAEhD,QAAM,CAAC,MAAM,MAAM,IAAI,QAAQ;AAAA,IAC9B,IAAI;AAAA,IACJ,YAAY,iBAAiBM,kBAAgB;AAAA,IAC7C,cAAc,EAAE,WAAW;AAAA,IAC3B,YAAY,yCAAY;AAAA,IACxB,WAAW,EAAE,YAAY;AACxB,aAAO,aAAa,UAAU,EAAE,QAAQA,mBAAkB,CAAA;AAAA,IAC3D;AAAA,IACA,kBAAkB;AAAA,EAAA,CAClB;AAED,6BACE,OAAI,EAAA,WAAU,iEACd,UAAC,qBAAA,OAAA,EAAI,WAAU,2BACd,UAAA;AAAA,IAAC,qBAAA,OAAA,EAAI,WAAU,mCACd,UAAA;AAAA,MAAC,qBAAA,MAAA,EAAG,WAAU,WAAU,UAAA;AAAA,QAAA;AAAA,QAAgB,KAAK;AAAA,QAAM;AAAA,MAAA,GAAC;AAAA,MACnD,oBAAA,KAAA,EAAE,WAAU,sCAAqC,UAElD,8BAAA;AAAA,IAAA,GACD;AAAA,IACA,oBAAC,QAAO,EAAA,MAAK,KAAK,CAAA;AAAA,IAClB;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,QAAO;AAAA,QACP,WAAU;AAAA,QACT,GAAG,aAAa,IAAI;AAAA,QAErB,UAAA;AAAA,UAAA,oBAAC,gBAAe,EAAA;AAAA,UAChB;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,YAAY,EAAE,SAAS,OAAO,SAAS,IAAI,UAAU,WAAW;AAAA,cAChE,YAAY;AAAA,gBACX,GAAG,cAAc,OAAO,UAAU,EAAE,MAAM,QAAQ;AAAA,gBAClD,cAAc;AAAA,gBACd,WAAW;AAAA,cACZ;AAAA,cACA,QAAQ,OAAO,SAAS;AAAA,YAAA;AAAA,UACzB;AAAA,UACA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,YAAY,EAAE,SAAS,OAAO,KAAK,IAAI,UAAU,OAAO;AAAA,cACxD,YAAY;AAAA,gBACX,GAAG,cAAc,OAAO,MAAM,EAAE,MAAM,QAAQ;AAAA,gBAC9C,cAAc;AAAA,cACf;AAAA,cACA,QAAQ,OAAO,KAAK;AAAA,YAAA;AAAA,UACrB;AAAA,UACA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,YAAY,EAAE,SAAS,OAAO,SAAS,IAAI,UAAU,WAAW;AAAA,cAChE,YAAY;AAAA,gBACX,GAAG,cAAc,OAAO,UAAU,EAAE,MAAM,YAAY;AAAA,gBACtD,cAAc;AAAA,cACf;AAAA,cACA,QAAQ,OAAO,SAAS;AAAA,YAAA;AAAA,UACzB;AAAA,UAEA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,YAAY;AAAA,gBACX,SAAS,OAAO,gBAAgB;AAAA,gBAChC,UAAU;AAAA,cACX;AAAA,cACA,YAAY;AAAA,gBACX,GAAG,cAAc,OAAO,iBAAiB,EAAE,MAAM,YAAY;AAAA,gBAC7D,cAAc;AAAA,cACf;AAAA,cACA,QAAQ,OAAO,gBAAgB;AAAA,YAAA;AAAA,UAChC;AAAA,UAEA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,YAAY;AAAA,gBACX,SAAS,OAAO,sCAAsC;AAAA,gBACtD,UACC;AAAA,cACF;AAAA,cACA,aAAa;AAAA,gBACZ,OAAO;AAAA,gBACP,EAAE,MAAM,WAAW;AAAA,cACpB;AAAA,cACA,QAAQ,OAAO,sCAAsC;AAAA,YAAA;AAAA,UACtD;AAAA,UACA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,YAAY;AAAA,gBACX,SAAS,OAAO,SAAS;AAAA,gBACzB,UAAU;AAAA,cACX;AAAA,cACA,aAAa,cAAc,OAAO,UAAU,EAAE,MAAM,YAAY;AAAA,cAChE,QAAQ,OAAO,SAAS;AAAA,YAAA;AAAA,UACzB;AAAA,UAEA,oBAAC,SAAO,EAAA,GAAG,cAAc,OAAO,YAAY,EAAE,MAAM,SAAU,CAAA,GAAG;AAAA,8BAChE,WAAU,EAAA,QAAQ,KAAK,QAAQ,IAAI,KAAK,SAAS;AAAA,UAElD,oBAAC,OAAI,EAAA,WAAU,2CACd,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,WAAU;AAAA,cACV,QAAQ,YAAY,YAAY,KAAK,UAAU;AAAA,cAC/C,MAAK;AAAA,cACL,UAAU;AAAA,cACV,UAAA;AAAA,YAAA;AAAA,UAAA,GAGF;AAAA,QAAA;AAAA,MAAA;AAAA,IACD;AAAA,EAAA,EACD,CAAA,EACD,CAAA;AAEF;;;;;;;;;AC3OsB,eAAAD,qBAAmB,EAAE,cAAkC;AAC5E;AAAA,IACC,WAAW,WAAW;AAAA,IACtB;AAAA,EAAA;AAEK,QAAA,gBAAgB,MAAM,qBAAqB;AACjD,gBAAc,IAAI,2BAA2B,WAAW,MAAM,MAAM;AACpE,SAAOT,WAAS,eAAe;AAAA,IAC9B,SAAS;AAAA,MACR,cAAc,MAAM,qBAAqB,cAAc,aAAa;AAAA,IACrE;AAAA,EAAA,CACA;AACF;ACAO,MAAM,kCAAkC;AAE/C,MAAM,sBAAsB;AAE5B,eAAe,6BAA6B,SAAkB;AAC7D,QAAM,iBAAiB,OAAO;AACxB,QAAA,gBAAgB,MAAM,qBAAqB;AAAA,IAChD,QAAQ,QAAQ,IAAI,QAAQ;AAAA,EAAA;AAE7B,QAAM,wBAAwB,cAAc;AAAA,IAC3C;AAAA,EAAA;AAED,MAAI,OAAO,0BAA0B,YAAY,CAAC,uBAAuB;AACxE,UAAMA,WAAS,QAAQ;AAAA,EACxB;AACO,SAAA;AACR;AAEsB,eAAAK,SAAO,EAAE,WAA+B;AACvD,QAAA,wBAAwB,MAAM,6BAA6B,OAAO;AACjE,SAAA,KAAK,EAAE,sBAAA,CAAuB;AACtC;AAEsB,eAAAZ,SAAO,EAAE,WAA+B;AACvD,QAAA,wBAAwB,MAAM,6BAA6B,OAAO;AAClE,QAAA,WAAW,MAAM,QAAQ;AACzB,QAAA,aAAa,aAAa,UAAU;AAAA,IACzC,QAAQ;AAAA,EAAA,CACR;AACG,MAAA,WAAW,WAAW,WAAW;AAC7B,WAAA;AAAA,MACN,EAAE,QAAQ,WAAW,QAAQ;AAAA,MAC7B,EAAE,QAAQ,WAAW,WAAW,UAAU,MAAM,IAAI;AAAA,IAAA;AAAA,EAEtD;AACM,QAAA,EAAE,SAAS,IAAI,WAAW;AAEhC,QAAM,kBAAkB,EAAE,UAAU,uBAAuB,SAAU,CAAA;AAC/D,QAAA,gBAAgB,MAAM,qBAAqB;AACjD,SAAOO,WAAS,UAAU;AAAA,IACzB,SAAS;AAAA,MACR,cAAc,MAAM,qBAAqB,eAAe,aAAa;AAAA,IACtE;AAAA,EAAA,CACA;AACF;AAEO,MAAMI,SAAqB,MAAM;AACvC,SAAO,CAAC,EAAE,OAAO,8BAAA,CAA+B;AACjD;AAEA,SAAwB,oBAAoB;AAC3C,QAAM,OAAO;AACb,QAAM,aAAa;AACnB,QAAM,YAAY;AAElB,QAAM,CAAC,MAAM,MAAM,IAAI,QAAQ;AAAA,IAC9B,IAAI;AAAA,IACJ,YAAY,iBAAiB,mBAAmB;AAAA,IAChD,YAAY,yCAAY;AAAA,IACxB,WAAW,EAAE,YAAY;AACxB,aAAO,aAAa,UAAU,EAAE,QAAQ,oBAAqB,CAAA;AAAA,IAC9D;AAAA,IACA,kBAAkB;AAAA,EAAA,CAClB;AAGA,SAAA,qBAAC,OAAI,EAAA,WAAU,sDACd,UAAA;AAAA,IAAC,qBAAA,OAAA,EAAI,WAAU,eACd,UAAA;AAAA,MAAC,oBAAA,MAAA,EAAG,WAAU,WAAU,UAAc,kBAAA;AAAA,MACtC,qBAAC,KAAE,EAAA,WAAU,2CAA0C,UAAA;AAAA,QAAA;AAAA,QACjD,KAAK;AAAA,QAAsB;AAAA,MAAA,GACjC;AAAA,IAAA,GACD;AAAA,IACA,oBAAC,OAAI,EAAA,WAAU,sDACd,UAAA,qBAAC,MAAK,EAAA,QAAO,QAAQ,GAAG,aAAa,IAAI,GACxC,UAAA;AAAA,MAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,YAAY;AAAA,YACX,SAAS,OAAO,SAAS;AAAA,YACzB,UAAU;AAAA,UACX;AAAA,UACA,YAAY;AAAA,YACX,GAAG,cAAc,OAAO,UAAU,EAAE,MAAM,YAAY;AAAA,YACtD,cAAc;AAAA,YACd,WAAW;AAAA,UACZ;AAAA,UACA,QAAQ,OAAO,SAAS;AAAA,QAAA;AAAA,MACzB;AAAA,MACA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,YAAY;AAAA,YACX,SAAS,OAAO,gBAAgB;AAAA,YAChC,UAAU;AAAA,UACX;AAAA,UACA,YAAY;AAAA,YACX,GAAG,cAAc,OAAO,iBAAiB,EAAE,MAAM,YAAY;AAAA,YAC7D,cAAc;AAAA,UACf;AAAA,UACA,QAAQ,OAAO,gBAAgB;AAAA,QAAA;AAAA,MAChC;AAAA,0BAEC,WAAU,EAAA,QAAQ,KAAK,QAAQ,IAAI,KAAK,SAAS;AAAA,MAElD;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,WAAU;AAAA,UACV,QAAQ,YAAY,YAAY,KAAK,UAAU;AAAA,UAC/C,MAAK;AAAA,UACL,UAAU;AAAA,UACV,UAAA;AAAA,QAAA;AAAA,MAED;AAAA,IAAA,EAAA,CACD,EACD,CAAA;AAAA,EACD,EAAA,CAAA;AAEF;AAEO,SAASE,kBAAgB;AAC/B,6BAAQ,sBAAqB,CAAA,CAAA;AAC9B;;;;;;;;;;AChIsB,eAAAG,qBAAmB,EAAE,cAAkC;AAC5E;AAAA,IACC,WAAW,WAAW;AAAA,IACtB;AAAA,EAAA;AAEK,QAAA,SAAS,WAAW,MAAM;AAChC,QAAM,OAAO,MAAMR,SAAO,KAAK,UAAU;AAAA,IACxC,OAAO,EAAE,IAAI,CAAC,EAAE,OAAO,OAAO,GAAG,EAAE,UAAU,OAAO,CAAC,EAAE;AAAA,IACvD,QAAQ,EAAE,OAAO,MAAM,UAAU,KAAK;AAAA,EAAA,CACtC;AAGD,MAAI,CAAC,MAAM;AACH,WAAA;AAAA,MACN,EAAE,QAAQ,WAAW,MAAM,EAAE,aAAa,EAAE,MAAM,CAAC,cAAc,EAAE,EAAA,CAAG,EAAE;AAAA,MACxE,EAAE,QAAQ,IAAI;AAAA,IAAA;AAAA,EAEhB;AAEM,QAAA,gBAAgB,MAAM,qBAAqB;AACnC,gBAAA,IAAI,iCAAiC,KAAK,QAAQ;AAChE,SAAOD,WAAS,mBAAmB;AAAA,IAClC,SAAS;AAAA,MACR,cAAc,MAAM,qBAAqB,cAAc,aAAa;AAAA,IACrE;AAAA,EAAA,CACA;AACF;ACnBO,MAAM,iBAAiB;AACvB,MAAM,mBAAmB;AACzB,MAAM,iBAAiB;AACvB,MAAM,uBAAuB;AACpC,MAAM,QAAQ,CAAC,cAAc,kBAAkB,gBAAgB,KAAK;AACpE,MAAM,yBAAyB,EAAE,KAAK,KAAK;AAG9B,MAAAa,iBAAe,EAAE,OAAO;AAAA,EACpC,CAAC,cAAc,GAAG,EAAE,SAAS,IAAI,CAAC,EAAE,IAAI,CAAC;AAAA,EACzC,CAAC,cAAc,GAAG;AAAA,EAClB,CAAC,gBAAgB,GAAG,EAAE,OAAO;AAAA,EAC7B,CAAC,oBAAoB,GAAG,EAAE,OAAA,EAAS,SAAS;AAC7C,CAAC;AAEqB,eAAApB,SAAO,EAAE,WAA+B;AACvD,QAAA,WAAW,MAAM,QAAQ;AAC/B,gBAAc,QAAQ;AACf,SAAA,gBAAgB,SAAS,QAAQ;AACzC;AAEA,SAAwB,cAAc;AAC/B,QAAA,CAAC,YAAY,IAAI;AACvB,QAAM,YAAY;AAClB,QAAM,aAAa;AACnB,QAAM,oBAAoB,uBAAuB;AAAA,IAChD,aAAa,IAAI,cAAc;AAAA,EAAA;AAEhC,QAAM,OAAO,kBAAkB,UAAU,kBAAkB,OAAO;AAElE,QAAM,aAEJ,qBAAA,UAAA,EAAA,UAAA;AAAA,IAAC,oBAAA,MAAA,EAAG,WAAU,WAAU,UAAgB,oBAAA;AAAA,IACvC,oBAAA,KAAA,EAAE,WAAU,2CAA0C,UAEvD,uDAAA;AAAA,EACD,EAAA,CAAA;AAGD,QAAM,WAAuD;AAAA,IAC5D,YAAY;AAAA,IACZ,kBAAkB;AAAA,IAClB,gBAAgB;AAAA,IAChB,OAEE,qBAAA,UAAA,EAAA,UAAA;AAAA,MAAC,oBAAA,MAAA,EAAG,WAAU,WAAU,UAAkB,sBAAA;AAAA,MACzC,oBAAA,KAAA,EAAE,WAAU,2CAA0C,UAEvD,uDAAA;AAAA,IAAA,GACD;AAAA,EAAA;AAIF,QAAM,CAAC,MAAM,MAAM,IAAI,QAAQ;AAAA,IAC9B,IAAI;AAAA,IACJ,YAAY,iBAAiBoB,cAAY;AAAA,IACzC,YAAY,yCAAY;AAAA,IACxB,WAAW,EAAE,YAAY;AACxB,aAAO,aAAa,UAAU,EAAE,QAAQA,eAAc,CAAA;AAAA,IACvD;AAAA,IACA,cAAc;AAAA,MACb,MAAM,aAAa,IAAI,cAAc;AAAA,MACrC;AAAA,MACA,QAAQ,aAAa,IAAI,gBAAgB;AAAA,MACzC,YAAY,aAAa,IAAI,oBAAoB;AAAA,IAClD;AAAA,EAAA,CACA;AAGA,SAAA,qBAAC,QAAK,EAAA,WAAU,sDACf,UAAA;AAAA,IAAA,oBAAC,SAAI,WAAU,eACb,iBAAO,SAAS,IAAI,IAAI,6BAC1B;AAAA,IAEA,oBAAC,QAAO,EAAA,MAAK,KAAK,CAAA;AAAA,IAElB,qBAAC,OAAI,EAAA,WAAU,8DACd,UAAA;AAAA,MAAC,oBAAA,OAAA,EACA,8BAAC,WAAU,EAAA,QAAQ,KAAK,QAAQ,IAAI,KAAK,QAAA,CAAS,EACnD,CAAA;AAAA,MACC,oBAAA,OAAA,EAAI,WAAU,qBACd,UAAC,qBAAA,MAAA,EAAK,QAAO,QAAQ,GAAG,aAAa,IAAI,GAAG,WAAU,UACrD,UAAA;AAAA,QAAA,oBAAC,gBAAe,EAAA;AAAA,QAChB,oBAAC,OAAI,EAAA,WAAU,oCACd,UAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,YAAY;AAAA,cACX,SAAS,OAAO,cAAc,EAAE;AAAA,cAChC,UAAU;AAAA,YACX;AAAA,YACA,YAAY;AAAA,cACX,GAAG,cAAc,OAAO,cAAc,GAAG,EAAE,MAAM,QAAQ;AAAA,cACzD,cAAc;AAAA,YACf;AAAA,YACA,QAAQ,OAAO,cAAc,EAAE;AAAA,UAAA;AAAA,QAAA,GAEjC;AAAA,QACA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,GAAG,cAAc,OAAO,cAAc,GAAG,EAAE,MAAM,UAAU;AAAA,UAAA;AAAA,QAC7D;AAAA,QACA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,GAAG,cAAc,OAAO,gBAAgB,GAAG,EAAE,MAAM,UAAU;AAAA,UAAA;AAAA,QAC/D;AAAA,QACA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,GAAG,cAAc,OAAO,oBAAoB,GAAG;AAAA,cAC/C,MAAM;AAAA,YAAA,CACN;AAAA,UAAA;AAAA,QACF;AAAA,QACA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,WAAU;AAAA,YACV,QAAQ,YAAY,YAAY,KAAK,UAAU;AAAA,YAC/C,MAAK;AAAA,YACL,UAAU;AAAA,YACV,UAAA;AAAA,UAAA;AAAA,QAED;AAAA,MAAA,EAAA,CACD,EACD,CAAA;AAAA,IAAA,GACD;AAAA,EACD,EAAA,CAAA;AAEF;AAEO,SAASP,kBAAgB;AAC/B,6BAAQ,sBAAqB,CAAA,CAAA;AAC9B;;;;;;;;;;;;ACpGO,SAAS,iBAAiB;AAAA,EAChC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAKG;AACF,QAAM,gBAAgB,IAAI,IAAI,GAAG,aAAa,OAAO,CAAC,SAAS;AACjD,gBAAA,aAAa,IAAI,gBAAgB,IAAI;AACrC,gBAAA,aAAa,IAAI,kBAAkB,MAAM;AACvD,MAAI,YAAY;AACD,kBAAA,aAAa,IAAI,sBAAsB,UAAU;AAAA,EAChE;AACO,SAAA;AACR;AAEA,eAAsB,0BAA0B,SAAkB;AAC3D,QAAA,SAAS,MAAM,cAAc,OAAO;AACpC,QAAA,iBAAiB,MAAM,mBAAmB,OAAO;AACvD,MAAI,gBAAgB;AACnB,UAAM,SAAS,IAAI,IAAI,QAAQ,GAAG;AAClC,UAAM,cAAc,iBAAiB;AAAA,MACpC;AAAA,MACA,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,YAAY,OAAO,WAAW,OAAO;AAAA,IAAA,CACrC;AACD,UAAM,MAAM,kBAAkB,YAAY,YAAY;AAAA,MACrD,OAAO;AAAA,MACP,aAAa;AAAA,IAAA,CACb;AAAA,EACF;AACD;AAEA,eAAsB,oBAAoB;AAAA,EACzC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAKG;AACF,QAAM,YAAY,iBAAiB,EAAE,SAAS,MAAM,QAAQ;AAC5D,QAAM,aAAa,IAAI,IAAI,UAAU,SAAU,CAAA;AAE/C,QAAM,EAAE,KAAK,GAAG,mBAAA,IAAuB,aAAa;AAAA,IACnD,WAAW;AAAA;AAAA,IAEX,SAAS;AAAA,IACT;AAAA,EAAA,CACA;AACD,QAAM,mBAAmB;AAAA,IACxB;AAAA,IACA;AAAA,IACA,GAAG;AAAA,IACH,WAAW,IAAI,KAAK,KAAK,QAAQ,mBAAmB,SAAS,GAAI;AAAA,EAAA;AAE5D,QAAAL,SAAO,aAAa,OAAO;AAAA,IAChC,OAAO,EAAE,aAAa,EAAE,QAAQ,OAAO;AAAA,IACvC,QAAQ;AAAA,IACR,QAAQ;AAAA,EAAA,CACR;AAGS,YAAA,aAAa,IAAI,gBAAgB,GAAG;AAEvC,SAAA,EAAE,KAAK,YAAY;AAC3B;AAEA,eAAsB,YAAY;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AACD,GAIG;AACF,QAAM,eAAe,MAAMA,SAAO,aAAa,WAAW;AAAA,IACzD,OAAO;AAAA,MACN,aAAa,EAAE,QAAQ,KAAK;AAAA,MAC5B,IAAI,CAAC,EAAE,WAAW,EAAE,IAAI,oBAAI,KAAK,EAAA,KAAO,EAAE,WAAW,MAAM;AAAA,IAC5D;AAAA,IACA,QAAQ,EAAE,WAAW,MAAM,QAAQ,MAAM,QAAQ,MAAM,SAAS,KAAK;AAAA,EAAA,CACrE;AACD,MAAI,CAAC;AAAqB,WAAA;AAC1B,QAAM,SAAS,WAAW;AAAA,IACzB,KAAK;AAAA,IACL,GAAG;AAAA,EAAA,CACH;AACD,MAAI,CAAC;AAAe,WAAA;AAEb,SAAA;AACR;AAEsB,eAAA,gBACrB,SACA,MACC;AACK,QAAA,aAAa,MAAM,aAAa,MAAM;AAAA,IAC3C,QAAQY,eAAa,YAAY,OAAO,MAAM,QAAQ;AAC/C,YAAA,cAAc,MAAM,YAAY;AAAA,QACrC,MAAM,KAAK,cAAc;AAAA,QACzB,MAAM,KAAK,cAAc;AAAA,QACzB,QAAQ,KAAK,gBAAgB;AAAA,MAAA,CAC7B;AACD,UAAI,CAAC,aAAa;AACjB,YAAI,SAAS;AAAA,UACZ,MAAM,CAAC,MAAM;AAAA,UACb,MAAM,EAAE,aAAa;AAAA,UACrB,SAAS;AAAA,QAAA,CACT;AACD;AAAA,MACD;AAAA,IAAA,CACA;AAAA,IACD,OAAO;AAAA,EAAA,CACP;AAEG,MAAA,WAAW,WAAW,WAAW;AAC7B,WAAA;AAAA,MACN,EAAE,QAAQ,WAAW,QAAQ;AAAA,MAC7B,EAAE,QAAQ,WAAW,WAAW,UAAU,MAAM,IAAI;AAAA,IAAA;AAAA,EAEtD;AAIA,QAAM,cAAc;AAEd,QAAA,EAAE,OAAO,gBAAoB,IAAA;AAEnC,iBAAe,qBAAqB;AAC7B,UAAAZ,SAAO,aAAa,OAAO;AAAA,MAChC,OAAO;AAAA,QACN,aAAa;AAAA,UACZ,MAAM,gBAAgB,cAAc;AAAA,UACpC,QAAQ,gBAAgB,gBAAgB;AAAA,QACzC;AAAA,MACD;AAAA,IAAA,CACA;AAAA,EACF;AAEQ,UAAA,gBAAgB,cAAc,GAAG;AAAA,IACxC,KAAK,kBAAkB;AACtB,YAAM,mBAAmB;AACzB,aAAOa,qBAAgC,EAAE,SAAS,MAAM,WAAY,CAAA;AAAA,IACrE;AAAA,IACA,KAAK,cAAc;AAClB,YAAM,mBAAmB;AACzB,aAAOC,qBAA6B,EAAE,SAAS,MAAM,WAAY,CAAA;AAAA,IAClE;AAAA,IACA,KAAK,gBAAgB;AACpB,YAAM,mBAAmB;AACzB,aAAOC,qBAA8B,EAAE,SAAS,MAAM,WAAY,CAAA;AAAA,IACnE;AAAA,IACA,KAAK,OAAO;AACX,aAAOC,mBAAiC,EAAE,SAAS,MAAM,WAAY,CAAA;AAAA,IACtE;AAAA,EACD;AACD;AChMA,MAAM,kBAAkB;AACxB,MAAM,yBAAyB;AAC/B,MAAM,cAAc;AAEpB,eAAsB,iBACrB;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAAL;AACD,GAMA,cACC;AACD,QAAM,eAAe,MAAMX,SAAO,aAAa,WAAW;AAAA,IACzD,QAAQ,EAAE,IAAI,KAAK;AAAA,IACnB,OAAO;AAAA,MACN,aAAa,EAAE,QAAQ,QAAQ,QAAQ,MAAM,sBAAsB;AAAA,IACpE;AAAA,EAAA,CACA;AACK,QAAA,mBAAmB,QAAQ,YAAY;AAE7C,MAAI,kBAAkB;AACf,UAAA,gBAAgB,MAAM,qBAAqB;AACnC,kBAAA,IAAI,wBAAwB,QAAQ,EAAE;AACtC,kBAAA,IAAI,aAAaW,SAAQ;AACvC,UAAM,cAAc,iBAAiB;AAAA,MACpC;AAAA,MACA,MAAM;AAAA,MACN,QAAQ,QAAQ;AAAA,MAChB;AAAA,IAAA,CACA;AACM,WAAAZ;AAAAA,MACN,GAAG,YAAY,QAAQ,IAAI,YAAY,YAAY;AAAA,MACnD;AAAA,QACC;AAAA,UACC,SAAS;AAAA,YACR,cACC,MAAM,qBAAqB,cAAc,aAAa;AAAA,UACxD;AAAA,QACD;AAAA,QACA;AAAA,MACD;AAAA,IAAA;AAAA,EACD,OACM;AACA,UAAA,cAAc,MAAM,mBAAmB;AAAA,MAC5C,QAAQ,QAAQ,IAAI,QAAQ;AAAA,IAAA;AAEjB,gBAAA,IAAI,YAAY,QAAQ,EAAE;AAE/B,WAAAA;AAAAA,MACN,aAAa,UAAU;AAAA,MACvB;AAAA,QACC;AAAA,UACC,SAAS;AAAA,YACR,cAAc,MAAM,mBAAmB,cAAc,aAAa;AAAA,cACjE,SAASY,YAAW,QAAQ,iBAAiB;AAAA,YAAA,CAC7C;AAAA,UACF;AAAA,QACD;AAAA,QACA;AAAA,MACD;AAAA,IAAA;AAAA,EAEF;AACD;AAEA,eAAsB,mBAAmB;AAAA,EACxC;AAAA,EACA;AACD,GAAuB;AACtB;AAAA,IACC,WAAW,WAAW;AAAA,IACtB;AAAA,EAAA;AAEK,QAAA,cAAc,MAAM,mBAAmB;AAAA,IAC5C,QAAQ,QAAQ,IAAI,QAAQ;AAAA,EAAA;AAEvB,QAAA,gBAAgB,MAAM,qBAAqB;AAAA,IAChD,QAAQ,QAAQ,IAAI,QAAQ;AAAA,EAAA;AAGvB,QAAAA,YAAW,cAAc,IAAI,WAAW;AACxC,QAAA,EAAE,WAAW,IAAI,WAAW;AAC5B,QAAA1B,WAAU,IAAI;AACpB,cAAY,IAAI,iBAAiB,KAAK,IAAK,CAAA;AAErC,QAAA,sBAAsB,cAAc,IAAI,sBAAsB;AACpE,MAAI,qBAAqB;AACxB,UAAM,UAAU,MAAMe,SAAO,QAAQ,WAAW;AAAA,MAC/C,QAAQ,EAAE,gBAAgB,KAAK;AAAA,MAC/B,OAAO,EAAE,IAAI,oBAAoB;AAAA,IAAA,CACjC;AACD,QAAI,CAAC,SAAS;AACP,YAAA,MAAM,kBAAkB,UAAU;AAAA,QACvC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAa;AAAA,MAAA,CACb;AAAA,IACF;AACY,gBAAA,IAAI,YAAY,mBAAmB;AAEvC,IAAAf,SAAA;AAAA,MACP;AAAA,MACA,MAAM,mBAAmB,cAAc,aAAa;AAAA,QACnD,SAAS0B,YAAW,QAAQ,iBAAiB;AAAA,MAAA,CAC7C;AAAA,IAAA;AAAA,EACF,OACM;AACE,IAAA1B,SAAA;AAAA,MACP;AAAA,MACA,MAAM,mBAAmB,cAAc,WAAW;AAAA,IAAA;AAAA,EAEpD;AAEQ,EAAAA,SAAA;AAAA,IACP;AAAA,IACA,MAAM,qBAAqB,eAAe,aAAa;AAAA,EAAA;AAGxD,SAAOc,WAAS,aAAa,UAAU,GAAG,EAAE,SAAAd,SAAS,CAAA;AACtD;AAEA,eAAsB,mBAAmB,SAAkB;AACpD,QAAA,cAAc,MAAM,mBAAmB;AAAA,IAC5C,QAAQ,QAAQ,IAAI,QAAQ;AAAA,EAAA;AAEvB,QAAA,gBAAgB,MAAM,qBAAqB;AAAA,IAChD,QAAQ,QAAQ,IAAI,QAAQ;AAAA,EAAA;AAEzB,MAAA,cAAc,IAAI,sBAAsB;AAAU,WAAA;AAChD,QAAA,SAAS,MAAM,UAAU,OAAO;AACtC,MAAI,CAAC;AAAe,WAAA;AAEpB,QAAM,eAAe,MAAMe,SAAO,aAAa,WAAW;AAAA,IACzD,QAAQ,EAAE,IAAI,KAAK;AAAA,IACnB,OAAO,EAAE,aAAa,EAAE,QAAQ,QAAQ,MAAM,wBAAwB;AAAA,EAAA,CACtE;AACD,MAAI,CAAC;AAAqB,WAAA;AAC1B,QAAM,eAAe,YAAY,IAAI,eAAe,KAAK,oBAAI,KAAK,CAAC;AAC7D,QAAA,WAAW,MAAO,KAAK;AACtB,SAAA,KAAK,QAAQ,eAAe;AACpC;ACnHO,MAAM,gBAAgB;AACtB,MAAM,sBAAsB;AAEnC,MAAM,mBAAmB,EAAE,OAAO;AAAA,EACjC,UAAU,EAAE,OAAO,EAAE,SAAS;AAAA,EAC9B,UAAU;AAAA,EACV,MAAM;AAAA,EACN,uCAAuC,EAAE,QAAQ;AAAA,IAChD,gBAAgB;AAAA,EAAA,CAChB;AAAA,EACD,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC/B,YAAY,EAAE,OAAO,EAAE,SAAS;AACjC,CAAC;AAED,eAAe,YAAY;AAAA,EAC1B;AAAA,EACA;AACD,GAGG;AACF,QAAM,iBAAiB,OAAO;AACxB,QAAA,gBAAgB,MAAM,qBAAqB;AAAA,IAChD,QAAQ,QAAQ,IAAI,QAAQ;AAAA,EAAA;AAEvB,QAAA,QAAQ,cAAc,IAAI,yBAAyB;AACnD,QAAA,aAAa,cAAc,IAAI,aAAa;AAC5C,QAAA,SAAS,EACb,OAAO;AAAA,IACP,OAAO,EAAE,OAAO;AAAA,IAChB,cAAc;AAAA,IACd,YAAY,EAAE,OAAO;AAAA,EAAA,CACrB,EACA,UAAU,EAAE,OAAO,cAAc,OAAO,UAAU,WAAA,CAAY;AAChE,MAAI,OAAO,SAAS;AACnB,WAAO,OAAO;AAAA,EAAA,OACR;AACE,YAAA,MAAM,OAAO,KAAK;AAC1B,UAAMD,WAAS,SAAS;AAAA,EACzB;AACD;AAEA,eAAsBK,SAAO,EAAE,SAAS,UAA8B;AAC/D,QAAA,EAAE,UAAU,MAAM,YAAY,EAAE,SAAS,QAAQ;AACjD,QAAA,oBAAoB,MAAM,yBAAyB;AAAA,IACxD,QAAQ,QAAQ,IAAI,QAAQ;AAAA,EAAA;AAEvB,QAAA,gBAAgB,MAAM,qBAAqB;AAAA,IAChD,QAAQ,QAAQ,IAAI,QAAQ;AAAA,EAAA;AAEvB,QAAA,mBAAmB,cAAc,IAAI,mBAAmB;AAE9D,QAAM,YAAY,kBAAkB,IAAI,cAAc,eAAe;AAC/D,QAAA,WAAW,OAAO,cAAc;AAEtC,SAAO,KAAK;AAAA,IACX;AAAA,IACA,QAAQ;AAAA,IACR,YAAY;AAAA,MACX,QAAQ,WAAW,UAAU;AAAA,MAC7B,cAAc,oBAAoB,CAAC;AAAA,MACnC,OAAO,EAAE,IAAI,WAAW,CAAC,SAAS,IAAI,CAAA,EAAG;AAAA,IAC1C;AAAA,EAAA,CACA;AACF;AAEA,eAAsBZ,SAAO,EAAE,SAAS,UAA8B;AACrE,QAAM,EAAE,OAAO,YAAY,aAAa,IAAI,MAAM,YAAY;AAAA,IAC7D;AAAA,IACA;AAAA,EAAA,CACA;AACK,QAAA,WAAW,MAAM,QAAQ;AACzB,QAAA,gBAAgB,MAAM,qBAAqB;AAAA,IAChD,QAAQ,QAAQ,IAAI,QAAQ;AAAA,EAAA;AAGvB,QAAA,aAAa,MAAM,aAAa,UAAU;AAAA,IAC/C,QAAQ,iBAAiB,YAAY,OAAO,MAAM,QAAQ;AACzD,YAAM,eAAe,MAAMQ,SAAO,KAAK,WAAW;AAAA,QACjD,OAAO,EAAE,UAAU,KAAK,SAAS;AAAA,QACjC,QAAQ,EAAE,IAAI,KAAK;AAAA,MAAA,CACnB;AACD,UAAI,cAAc;AACjB,YAAI,SAAS;AAAA,UACZ,MAAM,CAAC,UAAU;AAAA,UACjB,MAAM,EAAE,aAAa;AAAA,UACrB,SAAS;AAAA,QAAA,CACT;AACD;AAAA,MACD;AAAA,IAAA,CACA,EAAE,UAAU,OAAM,SAAQ;AACpBU,YAAAA,WAAU,MAAM,qBAAqB;AAAA,QAC1C,GAAG;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,MAAA,CACA;AACD,aAAO,EAAE,GAAG,MAAM,SAAAA,SAAQ;AAAA,IAAA,CAC1B;AAAA,IACD,OAAO;AAAA,EAAA,CACP;AAEG,MAAA,WAAW,WAAW,WAAW;AAC7B,WAAA;AAAA,MACN,EAAE,QAAQ,WAAW,QAAQ;AAAA,MAC7B,EAAE,QAAQ,WAAW,WAAW,UAAU,MAAM,IAAI;AAAA,IAAA;AAAA,EAEtD;AAEA,QAAM,EAAE,SAAS,UAAAC,WAAU,WAAA,IAAe,WAAW;AAE/C,QAAA,cAAc,MAAM,mBAAmB;AAAA,IAC5C,QAAQ,QAAQ,IAAI,QAAQ;AAAA,EAAA;AAEjB,cAAA,IAAI,YAAY,QAAQ,EAAE;AAChC,QAAA1B,WAAU,IAAI;AACZ,EAAAA,SAAA;AAAA,IACP;AAAA,IACA,MAAM,mBAAmB,cAAc,aAAa;AAAA,MACnD,SAAS0B,YAAW,QAAQ,iBAAiB;AAAA,IAAA,CAC7C;AAAA,EAAA;AAEM,EAAA1B,SAAA;AAAA,IACP;AAAA,IACA,MAAM,qBAAqB,eAAe,aAAa;AAAA,EAAA;AAGjD,SAAA;AAAA,IACN,aAAa,UAAU;AAAA,IACvB,EAAE,OAAO,WAAW,aAAa,yBAAyB;AAAA,IAC1D,EAAE,SAAAA,SAAQ;AAAA,EAAA;AAEZ;AAEO,MAAMkB,SAAqB,MAAM;AACvC,SAAO,CAAC,EAAE,OAAO,2BAAA,CAA4B;AAC9C;AAEA,SAAwB,0BAA0B;AACjD,QAAM,OAAO;AACb,QAAM,aAAa;AACnB,QAAM,YAAY;AACZ,QAAA,CAAC,YAAY,IAAI;AACjB,QAAA,aAAa,aAAa,IAAI,YAAY;AAEhD,QAAM,CAAC,MAAM,MAAM,IAAI,QAAQ;AAAA,IAC9B,IAAI;AAAA,IACJ,YAAY,iBAAiB,gBAAgB;AAAA,IAC7C,aAAY,yCAAY,WAAU,KAAK;AAAA,IACvC,WAAW,EAAE,YAAY;AACxB,aAAO,aAAa,UAAU,EAAE,QAAQ,iBAAkB,CAAA;AAAA,IAC3D;AAAA,IACA,kBAAkB;AAAA,EAAA,CAClB;AAED,6BACE,OAAI,EAAA,WAAU,iEACd,UAAC,qBAAA,OAAA,EAAI,WAAU,2BACd,UAAA;AAAA,IAAC,qBAAA,OAAA,EAAI,WAAU,mCACd,UAAA;AAAA,MAAC,qBAAA,MAAA,EAAG,WAAU,WAAU,UAAA;AAAA,QAAA;AAAA,QAAgB,KAAK;AAAA,QAAM;AAAA,MAAA,GAAC;AAAA,MACnD,oBAAA,KAAA,EAAE,WAAU,sCAAqC,UAElD,8BAAA;AAAA,IAAA,GACD;AAAA,IACA,oBAAC,QAAO,EAAA,MAAK,KAAK,CAAA;AAAA,IAClB;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,QAAO;AAAA,QACP,WAAU;AAAA,QACT,GAAG,aAAa,IAAI;AAAA,QAEpB,UAAA;AAAA,UAAA,OAAO,SAAS,eACf,qBAAA,OAAA,EAAI,WAAU,wDACd,UAAA;AAAA,YAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACA,KAAK,OAAO,SAAS;AAAA,gBACrB,KAAI;AAAA,gBACJ,WAAU;AAAA,cAAA;AAAA,YACX;AAAA,YACC,oBAAA,KAAA,EAAE,WAAU,sCAAqC,UAElD,mCAAA;AAAA,YACA,oBAAC,SAAO,EAAA,GAAG,cAAc,OAAO,UAAU,EAAE,MAAM,SAAU,CAAA,GAAG;AAAA,UAAA,EAAA,CAChE,IACG;AAAA,UACJ;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,YAAY,EAAE,SAAS,OAAO,SAAS,IAAI,UAAU,WAAW;AAAA,cAChE,YAAY;AAAA,gBACX,GAAG,cAAc,OAAO,UAAU,EAAE,MAAM,QAAQ;AAAA,gBAClD,cAAc;AAAA,gBACd,WAAW;AAAA,cACZ;AAAA,cACA,QAAQ,OAAO,SAAS;AAAA,YAAA;AAAA,UACzB;AAAA,UACA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,YAAY,EAAE,SAAS,OAAO,KAAK,IAAI,UAAU,OAAO;AAAA,cACxD,YAAY;AAAA,gBACX,GAAG,cAAc,OAAO,MAAM,EAAE,MAAM,QAAQ;AAAA,gBAC9C,cAAc;AAAA,cACf;AAAA,cACA,QAAQ,OAAO,KAAK;AAAA,YAAA;AAAA,UACrB;AAAA,UAEA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,YAAY;AAAA,gBACX,SAAS,OAAO,sCAAsC;AAAA,gBACtD,UACC;AAAA,cACF;AAAA,cACA,aAAa;AAAA,gBACZ,OAAO;AAAA,gBACP,EAAE,MAAM,WAAW;AAAA,cACpB;AAAA,cACA,QAAQ,OAAO,sCAAsC;AAAA,YAAA;AAAA,UACtD;AAAA,UACA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,YAAY;AAAA,gBACX,SAAS,OAAO,SAAS;AAAA,gBACzB,UAAU;AAAA,cACX;AAAA,cACA,aAAa,cAAc,OAAO,UAAU,EAAE,MAAM,YAAY;AAAA,cAChE,QAAQ,OAAO,SAAS;AAAA,YAAA;AAAA,UACzB;AAAA,UAEC,iCACC,SAAM,EAAA,MAAK,UAAS,MAAK,cAAa,OAAO,WAAA,CAAY,IACvD;AAAA,8BAEH,WAAU,EAAA,QAAQ,KAAK,QAAQ,IAAI,KAAK,SAAS;AAAA,UAElD,oBAAC,OAAI,EAAA,WAAU,2CACd,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,WAAU;AAAA,cACV,QAAQ,YAAY,YAAY,KAAK,UAAU;AAAA,cAC/C,MAAK;AAAA,cACL,UAAU;AAAA,cACV,UAAA;AAAA,YAAA;AAAA,UAAA,GAGF;AAAA,QAAA;AAAA,MAAA;AAAA,IACD;AAAA,EAAA,EACD,CAAA,EACD,CAAA;AAEF;;;;;;;;;;ACjQA,MAAM,oBAAoB,EAAE,cAAc;AAE1C,eAAsBC,SAAO,EAAE,SAAS,UAA8B;AAGrE,QAAM,cAAc;AAEpB,QAAM,eAAe,mBAAmB,MAAM,OAAO,QAAQ;AACvD,QAAA,aAAa,uBAAuB,OAAO;AAC3C,QAAA,QAAQ,eAAe,YAAY;AAEnC,QAAA,aAAa,MAAM,cACvB,aAAa,cAAc,SAAS,EAAE,cAAc,KAAM,CAAA,EAC1D;AAAA,IACA,CAAS,UAAA,EAAE,SAAS,MAAM,KAAK;AAAA,IAC/B,CAAU,WAAA,EAAE,SAAS,OAAO,MAAM;AAAA,EAAA;AAGhC,MAAA,CAAC,WAAW,SAAS;AAChB,YAAA,MAAM,WAAW,KAAK;AAC9B,UAAM,MAAM;AAAA,MACX;AAAA,MACA;AAAA,QACC,OAAO;AAAA,QACP,aAAa,0CAA0C,KAAK;AAAA,QAC5D,MAAM;AAAA,MACP;AAAA,MACA,EAAE,SAAS,kBAAkB;AAAA,IAAA;AAAA,EAE/B;AAEM,QAAA,EAAE,MAAM,QAAY,IAAA;AAE1B,QAAM,qBAAqB,MAAMJ,SAAO,WAAW,WAAW;AAAA,IAC7D,QAAQ,EAAE,QAAQ,KAAK;AAAA,IACvB,OAAO;AAAA,MACN,yBAAyB,EAAE,cAAc,YAAY,QAAQ,GAAG;AAAA,IACjE;AAAA,EAAA,CACA;AAEK,QAAA,SAAS,MAAM,UAAU,OAAO;AAEtC,MAAI,sBAAsB,QAAQ;AAC7B,QAAA,mBAAmB,WAAW,QAAQ;AAClC,aAAA;AAAA,QACN;AAAA,QACA;AAAA,UACC,OAAO;AAAA,UACP,aAAa,SAAS,QAAQ,QAAQ,KAAK,KAAK;AAAA,QACjD;AAAA,QACA,EAAE,SAAS,kBAAkB;AAAA,MAAA;AAAA,IAC9B,OACM;AACC,aAAA;AAAA,QACN;AAAA,QACA;AAAA,UACC,OAAO;AAAA,UACP,aAAa,QAAQ,QAAQ,QAAQ,KAAK,KAAK;AAAA,QAChD;AAAA,QACA,EAAE,SAAS,kBAAkB;AAAA,MAAA;AAAA,IAE/B;AAAA,EACD;AAGA,MAAI,QAAQ;AACL,UAAAA,SAAO,WAAW,OAAO;AAAA,MAC9B,MAAM;AAAA,QACL;AAAA,QACA,YAAY,QAAQ;AAAA,QACpB;AAAA,MACD;AAAA,IAAA,CACA;AACM,WAAA;AAAA,MACN;AAAA,MACA;AAAA,QACC,OAAO;AAAA,QACP,MAAM;AAAA,QACN,aAAa,SAAS,QAAQ,QAAQ,KAAK,KAAK;AAAA,MACjD;AAAA,MACA,EAAE,SAAS,kBAAkB;AAAA,IAAA;AAAA,EAE/B;AAGA,MAAI,oBAAoB;AACvB,WAAO,YAAY,EAAE,SAAS,QAAQ,mBAAmB,QAAQ;AAAA,EAClE;AAIA,QAAM,OAAO,MAAMA,SAAO,KAAK,WAAW;AAAA,IACzC,QAAQ,EAAE,IAAI,KAAK;AAAA,IACnB,OAAO,EAAE,OAAO,QAAQ,MAAM,cAAc;AAAA,EAAA,CAC5C;AACD,MAAI,MAAM;AACH,UAAAA,SAAO,WAAW,OAAO;AAAA,MAC9B,MAAM;AAAA,QACL;AAAA,QACA,YAAY,QAAQ;AAAA,QACpB,QAAQ,KAAK;AAAA,MACd;AAAA,IAAA,CACA;AACM,WAAA;AAAA,MACN,EAAE,SAAS,QAAQ,KAAK,GAAG;AAAA,MAC3B;AAAA,QACC,SAAS,MAAM,mBAAmB;AAAA,UACjC,OAAO;AAAA,UACP,aAAa,SAAS,QAAQ,QAAQ,KAAK,KAAK;AAAA,QAAA,CAChD;AAAA,MACF;AAAA,IAAA;AAAA,EAEF;AAGM,QAAA,gBAAgB,MAAM,qBAAqB;AACnC,gBAAA,IAAI,2BAA2B,QAAQ,KAAK;AAC1D,gBAAc,IAAI,qBAAqB;AAAA,IACtC,GAAG;AAAA,IACH,OAAO,eAAe,QAAQ,KAAK;AAAA,IACnC,UACC,OAAO,QAAQ,aAAa,WACzB,kBAAkB,QAAQ,QAAQ,IAClC;AAAA,EAAA,CACJ;AACa,gBAAA,IAAI,eAAe,QAAQ,EAAE;AAC3C,QAAM,qBAAqB;AAAA,IAC1B,eAAe,YAAY;AAAA,IAC3B,aAAa,IAAI,gBAAgB,EAAE,WAAA,CAAY,IAAI;AAAA,EAElD,EAAA,OAAO,OAAO,EACd,KAAK,GAAG;AACV,SAAOD,WAAS,oBAAoB;AAAA,IACnC,SAAS;AAAA,MACR,EAAE,cAAc,MAAM,qBAAqB,cAAc,aAAa,EAAE;AAAA,MACxE;AAAA,IACD;AAAA,EAAA,CACA;AACF;AAEA,eAAe,YACd;AAAA,EACC;AAAA,EACA;AAAA,EACA;AACD,GACA,cACC;AACc,8BAAA;AACf,QAAM,UAAU,MAAMC,SAAO,QAAQ,OAAO;AAAA,IAC3C,QAAQ,EAAE,IAAI,MAAM,gBAAgB,MAAM,QAAQ,KAAK;AAAA,IACvD,MAAM;AAAA,MACL,gBAAgB,yBAAyB;AAAA,MACzC;AAAA,IACD;AAAA,EAAA,CACA;AACM,SAAA;AAAA,IACN,EAAE,SAAS,SAAS,YAAY,UAAU,KAAK;AAAA,IAC/C,EAAE,SAAS,eAAe,6CAAc,SAAS,iBAAiB,EAAE;AAAA,EAAA;AAEtE;;;;;ACtKA,MAAM,uBAAuB,EAAE,OAAO;AAAA,EACrC,iBAAiB,EAAE,MAAM,CAAC,aAAa,cAAc,CAAC;AACvD,CAAC;AAEqB,eAAAR,SAAO,EAAE,WAA+B;AACvD,QAAA,WAAW,MAAM,QAAQ;AAC/B,gBAAc,QAAQ;AAChB,QAAA,aAAa,MAAM,aAAa,UAAU;AAAA,IAC/C,QAAQ,qBAAqB,YAAY,OAAO,MAAM,QAAQ;AAC7D,YAAMyB,QAAO,MAAMjB,SAAO,KAAK,UAAU;AAAA,QACxC,OAAO;AAAA,UACN,IAAI;AAAA,YACH,EAAE,OAAO,KAAK,gBAAgB;AAAA,YAC9B,EAAE,UAAU,KAAK,gBAAgB;AAAA,UAClC;AAAA,QACD;AAAA,QACA,QAAQ,EAAE,IAAI,KAAK;AAAA,MAAA,CACnB;AACD,UAAI,CAACiB,OAAM;AACV,YAAI,SAAS;AAAA,UACZ,MAAM,CAAC,iBAAiB;AAAA,UACxB,MAAM,EAAE,aAAa;AAAA,UACrB,SAAS;AAAA,QAAA,CACT;AACD;AAAA,MACD;AAAA,IAAA,CACA;AAAA,IACD,OAAO;AAAA,EAAA,CACP;AACG,MAAA,WAAW,WAAW,WAAW;AAC7B,WAAA;AAAA,MACN,EAAE,QAAQ,WAAW,QAAQ;AAAA,MAC7B,EAAE,QAAQ,WAAW,WAAW,UAAU,MAAM,IAAI;AAAA,IAAA;AAAA,EAEtD;AACM,QAAA,EAAE,gBAAgB,IAAI,WAAW;AAEvC,QAAM,OAAO,MAAMjB,SAAO,KAAK,iBAAiB;AAAA,IAC/C,OAAO,EAAE,IAAI,CAAC,EAAE,OAAO,gBAAgB,GAAG,EAAE,UAAU,gBAAgB,CAAC,EAAE;AAAA,IACzE,QAAQ,EAAE,OAAO,MAAM,UAAU,KAAK;AAAA,EAAA,CACtC;AAED,QAAM,EAAE,WAAW,YAAY,IAAI,IAAI,MAAM,oBAAoB;AAAA,IAChE,QAAQ,KAAK;AAAA,IACb;AAAA,IACA,MAAM;AAAA,IACN,QAAQ;AAAA,EAAA,CACR;AAEK,QAAA,WAAW,MAAM,UAAU;AAAA,IAChC,IAAI,KAAK;AAAA,IACT,SAAS;AAAA,IACT,OACE,oBAAA,qBAAA,EAAoB,eAAe,UAAU,SAAA,GAAY,KAAU;AAAA,EAAA,CAErE;AAEG,MAAA,SAAS,WAAW,WAAW;AAC3B,WAAAD,WAAS,WAAW,SAAA,CAAU;AAAA,EAAA,OAC/B;AACC,WAAA;AAAA,MACN,EAAE,QAAQ,WAAW,MAAM,EAAE,YAAY,CAAC,SAAS,MAAM,OAAO,EAAE,CAAC,EAAE;AAAA,MACrE,EAAE,QAAQ,IAAI;AAAA,IAAA;AAAA,EAEhB;AACD;AAEA,SAAS,oBAAoB;AAAA,EAC5B;AAAA,EACA;AACD,GAGG;AAED,SAAA,oBAAC,EAAE,MAAF,EAAO,MAAK,MAAK,KAAI,OACrB,UAAA,qBAAC,EAAE,WAAF,EACA,UAAA;AAAA,IAAA,oBAAC,QACA,UAAC,oBAAA,EAAE,MAAF,EAAO,sCAAyB,CAAA,GAClC;AAAA,IACC,oBAAA,KAAA,EACA,UAAC,qBAAA,EAAE,MAAF,EAAO,UAAA;AAAA,MAAA;AAAA,MACwB,oBAAC,YAAQ,UAAI,IAAA,CAAA;AAAA,IAAA,EAAA,CAC7C,EACD,CAAA;AAAA,wBACC,KACA,EAAA,UAAA,oBAAC,EAAE,MAAF,EAAO,+BAAkB,CAAA,GAC3B;AAAA,wBACC,EAAE,MAAF,EAAO,MAAM,eAAgB,UAAc,eAAA;AAAA,EAAA,EAC7C,CAAA,EACD,CAAA;AAEF;AAEO,MAAMI,SAAqB,MAAM;AACvC,SAAO,CAAC,EAAE,OAAO,mCAAA,CAAoC;AACtD;AAEA,SAAwB,sBAAsB;;AAC7C,QAAM,iBAAiB;AAEvB,QAAM,CAAC,MAAM,MAAM,IAAI,QAAQ;AAAA,IAC9B,IAAI;AAAA,IACJ,YAAY,iBAAiB,oBAAoB;AAAA,IACjD,aAAYV,MAAA,eAAe,SAAf,gBAAAA,IAAqB;AAAA,IACjC,WAAW,EAAE,YAAY;AACxB,aAAO,aAAa,UAAU,EAAE,QAAQ,qBAAsB,CAAA;AAAA,IAC/D;AAAA,IACA,kBAAkB;AAAA,EAAA,CAClB;AAED,6BACE,OAAI,EAAA,WAAU,yBACd,UAAC,qBAAA,OAAA,EAAI,WAAU,gCACd,UAAA;AAAA,IAAC,qBAAA,OAAA,EAAI,WAAU,eACd,UAAA;AAAA,MAAC,oBAAA,MAAA,EAAG,WAAU,WAAU,UAAe,mBAAA;AAAA,MACtC,oBAAA,KAAA,EAAE,WAAU,2CAA0C,UAEvD,kDAAA;AAAA,IAAA,GACD;AAAA,IACA,qBAAC,OAAI,EAAA,WAAU,sDACd,UAAA;AAAA,MAAC,qBAAA,eAAe,MAAf,EAAoB,QAAO,QAAQ,GAAG,aAAa,IAAI,GACvD,UAAA;AAAA,QAAA,oBAAC,gBAAe,EAAA;AAAA,4BACf,OACA,EAAA,UAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,YAAY;AAAA,cACX,SAAS,OAAO,gBAAgB;AAAA,cAChC,UAAU;AAAA,YACX;AAAA,YACA,YAAY;AAAA,cACX,WAAW;AAAA,cACX,GAAG,cAAc,OAAO,iBAAiB,EAAE,MAAM,QAAQ;AAAA,YAC1D;AAAA,YACA,QAAQ,OAAO,gBAAgB;AAAA,UAAA;AAAA,QAAA,GAEjC;AAAA,4BACC,WAAU,EAAA,QAAQ,KAAK,QAAQ,IAAI,KAAK,SAAS;AAAA,QAElD,oBAAC,OAAI,EAAA,WAAU,QACd,UAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,WAAU;AAAA,YACV,QACC,eAAe,UAAU,eACtB,YACA,KAAK,UAAU;AAAA,YAEnB,MAAK;AAAA,YACL,UAAU,eAAe,UAAU;AAAA,YACnC,UAAA;AAAA,UAAA;AAAA,QAAA,GAGF;AAAA,MAAA,GACD;AAAA,MACA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,IAAG;AAAA,UACH,WAAU;AAAA,UACV,UAAA;AAAA,QAAA;AAAA,MAED;AAAA,IAAA,GACD;AAAA,EAAA,EACD,CAAA,EACD,CAAA;AAEF;AAEO,SAASY,kBAAgB;AAC/B,6BAAQ,sBAAqB,CAAA,CAAA;AAC9B;;;;;;;;ACnKA,MAAM,kBAAkB,EAAE,OAAO;AAAA,EAChC,UAAU;AAAA,EACV,UAAU;AAAA,EACV,YAAY,EAAE,OAAO,EAAE,SAAS;AAAA,EAChC,UAAU,EAAE,QAAQ,EAAE,SAAS;AAChC,CAAC;AAEqB,eAAAD,SAAO,EAAE,WAA+B;AAC7D,QAAM,iBAAiB,OAAO;AACvB,SAAA,KAAK,CAAA,CAAE;AACf;AAEsB,eAAAZ,SAAO,EAAE,WAA+B;AAC7D,QAAM,iBAAiB,OAAO;AACxB,QAAA,WAAW,MAAM,QAAQ;AAC/B,gBAAc,QAAQ;AAChB,QAAA,aAAa,MAAM,aAAa,UAAU;AAAA,IAC/C,QAAQ,CACP,WAAA,gBAAgB,UAAU,OAAO,MAAM,QAAQ;AAC9C,UAAI,WAAW;AAAM,eAAO,EAAE,GAAG,MAAM,SAAS,KAAK;AAE/CkB,YAAAA,WAAU,MAAM,MAAM,IAAI;AAChC,UAAI,CAACA,UAAS;AACb,YAAI,SAAS;AAAA,UACZ,MAAM,EAAE,aAAa;AAAA,UACrB,SAAS;AAAA,QAAA,CACT;AACD,eAAO,EAAE;AAAA,MACV;AAEA,aAAO,EAAE,GAAG,MAAM,SAAAA,SAAQ;AAAA,IAAA,CAC1B;AAAA,IACF,OAAO;AAAA,EAAA,CACP;AAED,MAAI,WAAW,WAAW,aAAa,CAAC,WAAW,MAAM,SAAS;AAC1D,WAAA;AAAA,MACN,EAAE,QAAQ,WAAW,MAAM,EAAE,YAAY,CAAC,UAAU,EAAE,CAAC,EAAE;AAAA,MACzD,EAAE,QAAQ,WAAW,WAAW,UAAU,MAAM,IAAI;AAAA,IAAA;AAAA,EAEtD;AAEA,QAAM,EAAE,SAAS,UAAAC,WAAU,WAAA,IAAe,WAAW;AAErD,SAAO,iBAAiB;AAAA,IACvB;AAAA,IACA;AAAA,IACA,UAAUA,aAAY;AAAA,IACtB;AAAA,EAAA,CACA;AACF;AAEA,SAAwB,YAAY;AACnC,QAAM,aAAa;AACnB,QAAM,YAAY;AACZ,QAAA,CAAC,YAAY,IAAI;AACjB,QAAA,aAAa,aAAa,IAAI,YAAY;AAEhD,QAAM,CAAC,MAAM,MAAM,IAAI,QAAQ;AAAA,IAC9B,IAAI;AAAA,IACJ,YAAY,iBAAiB,eAAe;AAAA,IAC5C,cAAc,EAAE,WAAW;AAAA,IAC3B,YAAY,yCAAY;AAAA,IACxB,WAAW,EAAE,YAAY;AACxB,aAAO,aAAa,UAAU,EAAE,QAAQ,gBAAiB,CAAA;AAAA,IAC1D;AAAA,IACA,kBAAkB;AAAA,EAAA,CAClB;AAED,6BACE,OAAI,EAAA,WAAU,uDACd,UAAC,qBAAA,OAAA,EAAI,WAAU,2BACd,UAAA;AAAA,IAAC,qBAAA,OAAA,EAAI,WAAU,mCACd,UAAA;AAAA,MAAC,oBAAA,MAAA,EAAG,WAAU,WAAU,UAAa,iBAAA;AAAA,MACpC,oBAAA,KAAA,EAAE,WAAU,sCAAqC,UAElD,8BAAA;AAAA,IAAA,GACD;AAAA,IACA,oBAAC,QAAO,EAAA,MAAK,KAAK,CAAA;AAAA,IAEjB,oBAAA,OAAA,EACA,UAAC,qBAAA,OAAA,EAAI,WAAU,gCACd,UAAA;AAAA,MAAA,qBAAC,QAAK,QAAO,QAAQ,GAAG,aAAa,IAAI,GACxC,UAAA;AAAA,QAAA,oBAAC,gBAAe,EAAA;AAAA,QAChB;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,YAAY,EAAE,UAAU,WAAW;AAAA,YACnC,YAAY;AAAA,cACX,GAAG,cAAc,OAAO,UAAU,EAAE,MAAM,QAAQ;AAAA,cAClD,WAAW;AAAA,cACX,WAAW;AAAA,cACX,cAAc;AAAA,YACf;AAAA,YACA,QAAQ,OAAO,SAAS;AAAA,UAAA;AAAA,QACzB;AAAA,QAEA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,YAAY,EAAE,UAAU,WAAW;AAAA,YACnC,YAAY;AAAA,cACX,GAAG,cAAc,OAAO,UAAU;AAAA,gBACjC,MAAM;AAAA,cAAA,CACN;AAAA,cACD,cAAc;AAAA,YACf;AAAA,YACA,QAAQ,OAAO,SAAS;AAAA,UAAA;AAAA,QACzB;AAAA,QAEA,qBAAC,OAAI,EAAA,WAAU,wBACd,UAAA;AAAA,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,YAAY;AAAA,gBACX,SAAS,OAAO,SAAS;AAAA,gBACzB,UAAU;AAAA,cACX;AAAA,cACA,aAAa,cAAc,OAAO,UAAU;AAAA,gBAC3C,MAAM;AAAA,cAAA,CACN;AAAA,cACD,QAAQ,OAAO,SAAS;AAAA,YAAA;AAAA,UACzB;AAAA,8BACC,OACA,EAAA,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,IAAG;AAAA,cACH,WAAU;AAAA,cACV,UAAA;AAAA,YAAA;AAAA,UAAA,GAGF;AAAA,QAAA,GACD;AAAA,QAEA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,GAAG,cAAc,OAAO,YAAY,EAAE,MAAM,UAAU;AAAA,UAAA;AAAA,QACxD;AAAA,4BACC,WAAU,EAAA,QAAQ,KAAK,QAAQ,IAAI,KAAK,SAAS;AAAA,QAElD,oBAAC,OAAI,EAAA,WAAU,gDACd,UAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,WAAU;AAAA,YACV,QAAQ,YAAY,YAAY,KAAK,UAAU;AAAA,YAC/C,MAAK;AAAA,YACL,UAAU;AAAA,YACV,UAAA;AAAA,UAAA;AAAA,QAAA,GAGF;AAAA,MAAA,GACD;AAAA,MACA,oBAAC,QAAG,WAAU,qEACZ,wBAAc,IAAI,CAAA,qCACjB,MACA,EAAA,UAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,MAAK;AAAA,UACL;AAAA,UACA;AAAA,QAAA;AAAA,MAAA,KAJO,YAMT,CACA,GACF;AAAA,MACA,qBAAC,OAAI,EAAA,WAAU,+CACd,UAAA;AAAA,QAAC,oBAAA,QAAA,EAAK,WAAU,yBAAwB,UAAS,aAAA;AAAA,QACjD;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,IACC,aACG,WAAW,mBAAmB,UAAU,CAAC,KACzC;AAAA,YAEJ,UAAA;AAAA,UAAA;AAAA,QAED;AAAA,MAAA,GACD;AAAA,IAAA,EAAA,CACD,EACD,CAAA;AAAA,EAAA,EACD,CAAA,EACD,CAAA;AAEF;AAEO,MAAMR,SAAqB,MAAM;AACvC,SAAO,CAAC,EAAE,OAAO,sBAAA,CAAuB;AACzC;AAEO,SAASE,kBAAgB;AAC/B,6BAAQ,sBAAqB,CAAA,CAAA;AAC9B;;;;;;;;;ACzMA,eAAsBD,WAAS;AAC9B,SAAOL,WAAS,GAAG;AACpB;AAEsB,eAAAP,SAAO,EAAE,WAA+B;AACtD,SAAA,OAAO,EAAE,QAAA,CAAS;AAC1B;;;;;;ACiBA,MAAM,eAAe,EAAE,OAAO;AAAA,EAC7B,OAAO;AACR,CAAC;AAEqB,eAAAA,SAAO,EAAE,WAA+B;AACvD,QAAA,WAAW,MAAM,QAAQ;AAE/B,gBAAc,QAAQ;AAEhB,QAAA,aAAa,MAAM,aAAa,UAAU;AAAA,IAC/C,QAAQ,aAAa,YAAY,OAAO,MAAM,QAAQ;AACrD,YAAM,eAAe,MAAMQ,SAAO,KAAK,WAAW;AAAA,QACjD,OAAO,EAAE,OAAO,KAAK,MAAM;AAAA,QAC3B,QAAQ,EAAE,IAAI,KAAK;AAAA,MAAA,CACnB;AACD,UAAI,cAAc;AACjB,YAAI,SAAS;AAAA,UACZ,MAAM,CAAC,OAAO;AAAA,UACd,MAAM,EAAE,aAAa;AAAA,UACrB,SAAS;AAAA,QAAA,CACT;AACD;AAAA,MACD;AAAA,IAAA,CACA;AAAA,IACD,OAAO;AAAA,EAAA,CACP;AACG,MAAA,WAAW,WAAW,WAAW;AAC7B,WAAA;AAAA,MACN,EAAE,QAAQ,WAAW,QAAQ;AAAA,MAC7B,EAAE,QAAQ,WAAW,WAAW,UAAU,MAAM,IAAI;AAAA,IAAA;AAAA,EAEtD;AACM,QAAA,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,EAAE,WAAW,YAAY,IAAI,IAAI,MAAM,oBAAoB;AAAA,IAChE,QAAQ,KAAK;AAAA,IACb;AAAA,IACA,MAAM;AAAA,IACN,QAAQ;AAAA,EAAA,CACR;AAEK,QAAA,WAAW,MAAM,UAAU;AAAA,IAChC,IAAI;AAAA,IACJ,SAAS;AAAA,IACT,OAAQ,oBAAA,aAAA,EAAY,eAAe,UAAU,SAAA,GAAY,KAAU;AAAA,EAAA,CACnE;AAEG,MAAA,SAAS,WAAW,WAAW;AAC3B,WAAAD,WAAS,WAAW,SAAA,CAAU;AAAA,EAAA,OAC/B;AACC,WAAA;AAAA,MACN;AAAA,QACC,QAAQ,WAAW,MAAM,EAAE,YAAY,CAAC,SAAS,MAAM,OAAO,GAAG;AAAA,MAClE;AAAA,MACA;AAAA,QACC,QAAQ;AAAA,MACT;AAAA,IAAA;AAAA,EAEF;AACD;AAEO,SAAS,YAAY;AAAA,EAC3B;AAAA,EACA;AACD,GAGG;AAED,SAAA,oBAAC,EAAE,MAAF,EAAO,MAAK,MAAK,KAAI,OACrB,UAAA,qBAAC,EAAE,WAAF,EACA,UAAA;AAAA,IAAA,oBAAC,QACA,UAAC,oBAAA,EAAE,MAAF,EAAO,mCAAsB,CAAA,GAC/B;AAAA,IACC,oBAAA,KAAA,EACA,UAAC,qBAAA,EAAE,MAAF,EAAO,UAAA;AAAA,MAAA;AAAA,MACwB,oBAAC,YAAQ,UAAI,IAAA,CAAA;AAAA,IAAA,EAAA,CAC7C,EACD,CAAA;AAAA,wBACC,KACA,EAAA,UAAA,oBAAC,EAAE,MAAF,EAAO,8CAAiC,CAAA,GAC1C;AAAA,wBACC,EAAE,MAAF,EAAO,MAAM,eAAgB,UAAc,eAAA;AAAA,EAAA,EAC7C,CAAA,EACD,CAAA;AAEF;AAEO,MAAMI,SAAqB,MAAM;AACvC,SAAO,CAAC,EAAE,OAAO,uBAAA,CAAwB;AAC1C;AAEA,SAAwB,cAAc;AACrC,QAAM,aAAa;AACnB,QAAM,YAAY;AACZ,QAAA,CAAC,YAAY,IAAI;AACjB,QAAA,aAAa,aAAa,IAAI,YAAY;AAEhD,QAAM,CAAC,MAAM,MAAM,IAAI,QAAQ;AAAA,IAC9B,IAAI;AAAA,IACJ,YAAY,iBAAiB,YAAY;AAAA,IACzC,YAAY,yCAAY;AAAA,IACxB,WAAW,EAAE,YAAY;AACxB,YAAM,SAAS,aAAa,UAAU,EAAE,QAAQ,cAAc;AACvD,aAAA;AAAA,IACR;AAAA,IACA,kBAAkB;AAAA,EAAA,CAClB;AAGA,SAAA,qBAAC,OAAI,EAAA,WAAU,sDACd,UAAA;AAAA,IAAC,qBAAA,OAAA,EAAI,WAAU,eACd,UAAA;AAAA,MAAC,oBAAA,MAAA,EAAG,WAAU,WAAU,UAAyB,6BAAA;AAAA,MAChD,oBAAA,KAAA,EAAE,WAAU,2CAA0C,UAEvD,4BAAA;AAAA,IAAA,GACD;AAAA,IACA,qBAAC,OAAI,EAAA,WAAU,sDACd,UAAA;AAAA,MAAA,qBAAC,QAAK,QAAO,QAAQ,GAAG,aAAa,IAAI,GACxC,UAAA;AAAA,QAAA,oBAAC,gBAAe,EAAA;AAAA,QAChB;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,YAAY;AAAA,cACX,SAAS,OAAO,MAAM;AAAA,cACtB,UAAU;AAAA,YACX;AAAA,YACA,YAAY;AAAA,cACX,GAAG,cAAc,OAAO,OAAO,EAAE,MAAM,SAAS;AAAA,cAChD,WAAW;AAAA,cACX,cAAc;AAAA,YACf;AAAA,YACA,QAAQ,OAAO,MAAM;AAAA,UAAA;AAAA,QACtB;AAAA,4BACC,WAAU,EAAA,QAAQ,KAAK,QAAQ,IAAI,KAAK,SAAS;AAAA,QAClD;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,WAAU;AAAA,YACV,QAAQ,YAAY,YAAY,KAAK,UAAU;AAAA,YAC/C,MAAK;AAAA,YACL,UAAU;AAAA,YACV,UAAA;AAAA,UAAA;AAAA,QAED;AAAA,MAAA,GACD;AAAA,MACA,oBAAC,QAAG,WAAU,qEACZ,wBAAc,IAAI,CAAA,qCACjB,MACA,EAAA,UAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,MAAK;AAAA,UACL;AAAA,UACA;AAAA,QAAA;AAAA,MAAA,KAJO,YAMT,CACA,GACF;AAAA,IAAA,GACD;AAAA,EACD,EAAA,CAAA;AAEF;AAEO,SAASE,kBAAgB;AAC/B,6BAAQ,sBAAqB,CAAA,CAAA;AAC9B;;;;;;;;;ACzLA,SAAwB,aAAa;AAC7B,SAAA,oBAAC,SAAI,UAAU,aAAA,CAAA;AACvB;;;;;ACFA,MAAe,SAAA;ACAf,MAAe,SAAA;ACAf,MAAe,UAAA;ACAf,MAAe,MAAA;ACAf,MAAe,SAAA;ACAf,MAAe,MAAA;ACAf,MAAe,aAAA;ACAf,MAAe,WAAA;ACAf,MAAe,SAAA;ACAf,MAAe,UAAA;ACAf,MAAe,aAAA;ACAf,MAAe,QAAA;ACAf,MAAe,SAAA;ACAf,MAAe,SAAA;ACAf,MAAe,WAAA;ACAf,MAAe,SAAA;ACAf,MAAe,WAAA;ACAf,MAAe,iBAAA;ACAf,MAAe,aAAA;ACAf,MAAe,SAAA;ACAf,MAAe,MAAA;ACwBR,MAAM,QAAQ;AAAA,EACplKO,MAAMF,SAAqB,MAAM,CAAC,EAAE,OAAO,aAAc,CAAA;AAGhE,MAAM,gBAAkE;AAAA,EACvE,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AACJ;AACA,MAAM,aAA4D;AAAA,EACjE,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AACJ;AAEA,SAAwB,QAAQ;AAC/B,6BACE,QAAK,EAAA,WAAU,+CACf,UAAC,qBAAA,OAAA,EAAI,WAAU,+DACd,UAAA;AAAA,IAAC,qBAAA,OAAA,EAAI,WAAU,0FACd,UAAA;AAAA,MAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,MAAK;AAAA,UACL,WAAU;AAAA,UAEV,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,WAAU;AAAA,cACV,OAAM;AAAA,cACN,MAAK;AAAA,cACL,SAAQ;AAAA,cAER,UAAA;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACA,MAAK;AAAA,kBACL,GAAE;AAAA,gBAAA;AAAA,cACF;AAAA,YAAA;AAAA,UACF;AAAA,QAAA;AAAA,MACD;AAAA,MACA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,gBAAY;AAAA,UACZ,WAAU;AAAA,UAEV,UAAC,oBAAA,KAAA,EAAE,MAAK,iCAAgC,UAAc,kBAAA;AAAA,QAAA;AAAA,MACvD;AAAA,MACA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,kBAAc;AAAA,UACd,WAAU;AAAA,UACV,UAAA;AAAA,YAAA;AAAA,YACU;AAAA,YACV;AAAA,cAAC;AAAA,cAAA;AAAA,gBACA,WAAU;AAAA,gBACV,MAAK;AAAA,gBACL,UAAA;AAAA,cAAA;AAAA,YAED;AAAA,YAAK;AAAA,YAAI;AAAA,UAAA;AAAA,QAAA;AAAA,MAEV;AAAA,IAAA,GACD;AAAA,IACA,oBAAC,MAAG,EAAA,WAAU,+HACb,UAAA,oBAAC,mBACC,UAAM,MAAA,IAAI,CAAC,MAAM,MACjB;AAAA,MAAC;AAAA,MAAA;AAAA,QAEA,WAAW;AAAA,UACV,cAAc,KAAK,MAAM;AAAA,UACzB,WAAW,KAAK,GAAG;AAAA,UACnB;AAAA,QACD;AAAA,QACA,OAAO,EAAE,gBAAgB,GAAG,IAAI,IAAI,IAAI;AAAA,QAExC,+BAAC,SACA,EAAA,UAAA;AAAA,UAAC,oBAAA,gBAAA,EAAe,SAAO,MACtB,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,MAAM,KAAK;AAAA,cACX,WAAU;AAAA,cAEV,8BAAC,OAAI,EAAA,KAAK,KAAK,KAAK,KAAI,IAAG;AAAA,YAAA;AAAA,UAAA,GAE7B;AAAA,UACA,oBAAC,gBAAgB,EAAA,UAAA,KAAK,IAAI,CAAA;AAAA,QAAA,GAC3B;AAAA,MAAA;AAAA,MAlBK,KAAK;AAAA,IAAA,CAoBX,GACF,EACD,CAAA;AAAA,EAAA,EACD,CAAA,EACD,CAAA;AAEF;;;;;;ACpGA,SAAwB,eAAe;AAC/B,SAAA,oBAAC,SAAI,UAAO,UAAA,CAAA;AACpB;;;;;ACFA,SAAwB,eAAe;AAC/B,SAAA,oBAAC,SAAI,UAAO,UAAA,CAAA;AACpB;;;;;ACAO,MAAM,kBAAkB;AAAA,EAC9B,OAAO;AAAA,IACN,QAAQ;AAAA,MACP,WAAW;AAAA,QACV,eAAe;AAAA,UACd,MAAM,EAAE,WAAW,0BAA0B,SAAS,IAAI;AAAA,UAC1D,IAAI,EAAE,WAAW,yBAAyB,SAAS,IAAI;AAAA,QACxD;AAAA,QACA,cAAc;AAAA,UACb,MAAM,EAAE,WAAW,oBAAoB,SAAS,IAAI;AAAA,UACpD,IAAI,EAAE,WAAW,mBAAmB,SAAS,IAAI;AAAA,QAClD;AAAA,QACA,aAAa;AAAA,UACZ,MAAM,EAAE,WAAW,oBAAoB,SAAS,IAAI;AAAA,UACpD,IAAI,EAAE,WAAW,mBAAmB,SAAS,IAAI;AAAA,QAClD;AAAA,MACD;AAAA,MACA,WAAW;AAAA,QACV,eAAe;AAAA,QACf,cAAc;AAAA,QACd,aAAa;AAAA,MACd;AAAA,IACD;AAAA,EACD;AACD;;;;;AC1BA,SAAwB,sBAAsB;AACtC,SAAA,oBAAC,SAAI,UAAgB,mBAAA,CAAA;AAC7B;;;;;ACEgB,SAAAC,SAAO,EAAE,WAA+B;AACvD,SAAO,kBAAkB;AAAA,IACxB,EAAE,MAAM,WAAW,OAAO,GAAG,aAAa,OAAO,CAAC,eAAe;AAAA,EAAA,CACjE;AACF;;;;;ACJA,eAAsBA,SAAO,EAAE,SAAS,WAA+B;AAChE,QAAA,cAAe,MAAM,QAAQ;AAC5B,SAAA,gBAAgB,SAAS,YAAY,QAAQ;AAAA,IACnD,SAAS,aAAa,OAAO;AAAA,IAC7B,SAAS;AAAA,MACR,iBAAiB,mBAAmB,KAAK,CAAC;AAAA,IAC3C;AAAA,EAAA,CACA;AACF;;;;;ACPsB,eAAA,0BACrB,SACA,YACC;AACK,QAAA,SAAS,MAAM,cAAc,OAAO;AACpC,QAAA,iBAAiB,sBAAsB,UAAU;AACvD,QAAM,OAAO,MAAMJ,SAAO,KAAK,UAAU;AAAA,IACxC,QAAQ,EAAE,IAAI,KAAK;AAAA,IACnB,OAAO;AAAA,MACN,IAAI;AAAA,MACJ,OAAO;AAAA,QACN,MAAM;AAAA,UACL,aAAa;AAAA,YACZ,MAAM;AAAA,cACL,GAAG;AAAA,cACH,QAAQ,eAAe,SACpB,EAAE,IAAI,eAAe,OACrB,IAAA;AAAA,YACJ;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EAAA,CACA;AACD,MAAI,CAAC,MAAM;AACJ,UAAA;AAAA,MACL;AAAA,QACC,OAAO;AAAA,QACP,oBAAoB;AAAA,QACpB,SAAS,uCAAuC,UAAU;AAAA,MAC3D;AAAA,MACA,EAAE,QAAQ,IAAI;AAAA,IAAA;AAAA,EAEhB;AACA,SAAO,KAAK;AACb;AAEsB,eAAA,oBAAoB,SAAkB,MAAc;AACnE,QAAA,SAAS,MAAM,cAAc,OAAO;AAC1C,QAAM,OAAO,MAAMA,SAAO,KAAK,UAAU;AAAA,IACxC,QAAQ,EAAE,IAAI,KAAK;AAAA,IACnB,OAAO,EAAE,IAAI,QAAQ,OAAO,EAAE,MAAM,EAAE,KAAK,IAAI;AAAA,EAAA,CAC/C;AACD,MAAI,CAAC,MAAM;AACJ,UAAA;AAAA,MACL;AAAA,QACC,OAAO;AAAA,QACP,cAAc;AAAA,QACd,SAAS,gCAAgC,IAAI;AAAA,MAC9C;AAAA,MACA,EAAE,QAAQ,IAAI;AAAA,IAAA;AAAA,EAEhB;AACA,SAAO,KAAK;AACb;ACzBO,MAAMM,WAAoB;AAAA,EAChC,mBAAmB,MAAM;AAC1B;AAEsB,eAAAF,SAAO,EAAE,WAA+B;AACvD,QAAA,oBAAoB,SAAS,OAAO;AAC1C,QAAM,eAAe,IAAI,IAAI,QAAQ,GAAG,EAAE;AACpC,QAAA,QAAQ,aAAa,IAAI,OAAO;AACtC,MAAI,UAAU,IAAI;AACjB,iBAAa,OAAO,OAAO;AAC3B,WAAOL,WAAS,gBAAgB,aAAa,SAAA,CAAU,EAAE;AAAA,EAC1D;AACA,QAAM,QAAQ,OAAO,aAAa,IAAI,OAAO,KAAK,GAAG;AAE/C,QAAA,sBAAsB,MAAM;AAClC,QAAM,WACL,aAAa,IAAI,UAAU,KAAK,oBAAoB;AAC/C,QAAA,YAAY,MAAM;AACxB,QAAM,eAAe,QAAQ;AAEzB,MAAA;AACA,MAAA,OAAO,UAAU,UAAU;AAClB,gBAAA,MAAM,gBAAgB,OAAO,KAAK;AAAA,EAAA,OACxC;AACM,gBAAA,MAAM,gBAAgB,KAAK;AAAA,EACxC;AACA,SAAO,KAAK,EAAE,WAAW,UAAU,WAAW,qBAAqB;AACpE;AAEsB,eAAAP,SAAO,EAAE,WAA+B;AACvD,QAAA,oBAAoB,SAAS,OAAO;AACpC,QAAA,WAAW,MAAM,QAAQ;AACzB,QAAAV,OAAM,SAAS,IAAI,UAAU;AACnC,QAAM,EAAE,gBAAA,IAAoB,MAAM;AAClC,QAAM,WAAW,SAAS,IAAI,UAAU,KAAK;AACvC,QAAA,OAAO,SAAS,IAAI,MAAM;AAEd,oBAAA,OAAOA,SAAQ,UAAU,2BAA2B;AACpD,oBAAA,OAAO,SAAS,UAAU,uBAAuB;AACjD,oBAAA,OAAO,aAAa,UAAU,2BAA2B;AAC3E,QAAM,eAAe,QAAQ;AAE7B,UAAQ,MAAM;AAAA,IACb,KAAK,UAAU;AACR,YAAA,MAAM,OAAOA,IAAG;AACtB;AAAA,IACD;AAAA,IACA,KAAK,OAAO;AACX,eAAS,OAAOA,IAAG;AACnB;AAAA,IACD;AAAA,IACA,SAAS;AACR,YAAM,IAAI,MAAM,uBAAuB,IAAI,EAAE;AAAA,IAC9C;AAAA,EACD;AACA,SAAO,KAAK,EAAE,SAAS,KAAM,CAAA;AAC9B;AAEA,SAAwB,kBAAkB;AACzC,QAAM,OAAO;AACP,QAAA,CAAC,YAAY,IAAI;AACvB,QAAM,SAAS;AACf,QAAM,QAAQ,aAAa,IAAI,OAAO,KAAK;AAC3C,QAAM,QAAQ,aAAa,IAAI,OAAO,KAAK;AAC3C,QAAM,WAAW,aAAa,IAAI,UAAU,KAAK,KAAK;AAEhD,QAAA,mBAAmB,YAAY,CAAC,SAA0B;AAC/D,WAAO,IAAI;AAAA,KACT,GAAG;AAGL,SAAA,qBAAC,OAAI,EAAA,WAAU,aACd,UAAA;AAAA,IAAC,oBAAA,MAAA,EAAG,WAAU,WAAU,UAAW,eAAA;AAAA,IACnC,oBAAC,QAAO,EAAA,MAAK,MAAM,CAAA;AAAA,IACnB;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,QAAO;AAAA,QACP,WAAU;AAAA,QACV,UAAU,CAAA,MAAK,iBAAiB,EAAE,aAAa;AAAA,QAE/C,UAAA;AAAA,UAAA,oBAAC,SAAI,WAAU,UACd,UAAC,qBAAA,OAAA,EAAI,WAAU,qBACd,UAAA;AAAA,YAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACA,MAAK;AAAA,gBACL,WAAU;AAAA,gBACV,UAAA;AAAA,cAAA;AAAA,YAED;AAAA,YACA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACA,WAAU;AAAA,gBACV,YAAY,EAAE,UAAU,SAAS;AAAA,gBACjC,YAAY;AAAA,kBACX,MAAM;AAAA,kBACN,MAAM;AAAA,kBACN,cAAc;AAAA,gBACf;AAAA,cAAA;AAAA,YACD;AAAA,gCACC,OAAI,EAAA,WAAU,yEACd,UAAA,oBAAC,UAAK,OAAM,uBACV,UAAK,KAAA,UAAU,OAAO,SAAS,KAAK,UAAU,IAAI,OACpD,CAAA,GACD;AAAA,UAAA,EAAA,CACD,EACD,CAAA;AAAA,UACA,qBAAC,OAAI,EAAA,WAAU,qCACd,UAAA;AAAA,YAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACA,YAAY;AAAA,kBACX,UAAU;AAAA,gBACX;AAAA,gBACA,YAAY;AAAA,kBACX,MAAM;AAAA,kBACN,cAAc;AAAA,kBACd,MAAM;AAAA,kBACN,MAAM;AAAA,kBACN,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,aAAa;AAAA,gBACd;AAAA,cAAA;AAAA,YACD;AAAA,YACA,oBAAC,YAAO,MAAK,YAAW,cAAc,UACpC,UAAA,OAAO,QAAQ,KAAK,SAAS,EAAE,IAAI,CAAC,CAAC,MAAM,MAAM,MAChD,oBAAA,UAAA,EAAkB,OAAO,MACxB,UAAA;AAAA,cACA;AAAA,cACA,IAAI,MAAM;AAAA,cACV,SAAS,KAAK,oBAAoB,kBAC/B,cACA;AAAA,cACH,SAAS,KAAK,oBAAoB,kBAC/B,eACA;AAAA,YAAA,EAEF,OAAO,OAAO,EACd,KAAK,GAAG,KAZE,IAab,CACA,GACF;AAAA,UAAA,GACD;AAAA,QAAA;AAAA,MAAA;AAAA,IACD;AAAA,IACA,oBAAC,QAAO,EAAA,MAAK,MAAM,CAAA;AAAA,IACnB,qBAAC,OAAI,EAAA,WAAU,uBACd,UAAA;AAAA,MAAC,oBAAA,MAAA,EAAG,WAAU,WAAU,UAAU,cAAA;AAAA,MACjC,KAAK,UAAU,IAAI,IAAI,CACvBA,SAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UAEA,UAAUA;AAAA,UACV;AAAA,UACA,MAAK;AAAA,QAAA;AAAA,QAHAA;AAAA,MAAA,CAKN;AAAA,IAAA,GACF;AAAA,IACA,oBAAC,QAAO,EAAA,MAAK,MAAM,CAAA;AAAA,IACnB,qBAAC,OAAI,EAAA,WAAU,uBACd,UAAA;AAAA,MAAC,oBAAA,MAAA,EAAG,WAAU,WAAU,UAAa,iBAAA;AAAA,MACpC,KAAK,UAAU,OAAO,IAAI,CAC1BA,SAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UAEA,UAAUA;AAAA,UACV;AAAA,UACA,MAAK;AAAA,QAAA;AAAA,QAHAA;AAAA,MAAA,CAKN;AAAA,IAAA,GACF;AAAA,EACD,EAAA,CAAA;AAEF;AAEA,SAAS,YAAY;AAAA,EACpB;AAAA,EACA;AAAA,EACA;AACD,GAIG;AACF,QAAM,UAAU;AAChB,QAAM,KAAK;AACL,QAAA,aAAa,mBAAmB,QAAQ;AAC9C,QAAM,YAAY,gBAAgB,IAAI,IAAI,UAAU,aAAa,QAAQ;AAExE,SAAA,qBAAC,OAAI,EAAA,WAAU,qCACd,UAAA;AAAA,IAAA,qBAAC,QAAQ,MAAR,EAAa,QAAO,QACpB,UAAA;AAAA,MAAA,oBAAC,WAAM,MAAK,UAAS,MAAK,YAAW,OAAO,UAAU;AAAA,0BACrD,SAAM,EAAA,MAAK,UAAS,MAAK,YAAW,OAAO,UAAU;AAAA,0BACrD,SAAM,EAAA,MAAK,UAAS,MAAK,QAAO,OAAO,MAAM;AAAA,MAC9C;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,MAAK;AAAA,UACL,SAAQ;AAAA,UACP,GAAG,GAAG,eAAe,EAAE,MAAM,UAAU;AAAA,UAEvC,kBAAQ,UAAU,SAChB,GAAG,cACF,cACA,WACD;AAAA,QAAA;AAAA,MACJ;AAAA,IAAA,GACD;AAAA,wBACC,MAAK,EAAA,gBAAc,MAAC,IAAI,WACvB,UACF,UAAA;AAAA,EACD,EAAA,CAAA;AAEF;AAEO,SAASuB,kBAAgB;AAE9B,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACA,gBAAgB;AAAA,QACf,KAAK,CAAC,EAAE,MAAM,2BACZ,KAAE,EAAA,UAAA;AAAA,UAAA;AAAA,UAAiC,+BAAO,KAAK;AAAA,QAAA,GAAQ;AAAA,MAE1D;AAAA,IAAA;AAAA,EAAA;AAGH;;;;;;;;;AC9OA,eAAsBD,SAAO,EAAE,SAAS,UAA8B;AAC/D,QAAA,oBAAoB,SAAS,OAAO;AAC1C,QAAM,eAAe,IAAI,IAAI,QAAQ,GAAG,EAAE;AACpC,QAAA,sBAAsB,MAAM;AAC5B,QAAA,eAAe,MAAM;AAC3B,QAAM,WACL,aAAa,IAAI,UAAU,KAAK,oBAAoB;AACrD,QAAM,eAAe,QAAQ;AAEvB,QAAA,EAAE,SAAa,IAAA;AACrB,oBAAkB,UAAU,sBAAsB;AAClD,SAAO,KAAK;AAAA,IACX,UAAU;AAAA,MACT,UAAU;AAAA,MACV,QAAQ,aAAa,QAAQ;AAAA,MAC7B,WAAW,oBAAoB,oBAAoB;AAAA,IACpD;AAAA,IACA;AAAA,IACA,OAAO,SAAS,IAAI,QAAQ;AAAA,EAAA,CAC5B;AACF;;;;;ACzBsB,eAAAZ,SAAO,EAAE,WAA+B;AAC7D,QAAM,EAAE,kBAAkB,oBAAoB,MAAM,gBAAgB;AACpE,MAAI,CAAC,kBAAkB;AACtB,UAAM,IAAI;AAAA,MACT,GAAG,QAAQ,GAAG,mDAAmD,eAAe;AAAA,IAAA;AAAA,EAElF;AACM,QAAA,QAAQ,QAAQ,IAAI;AAC1B,QAAM,eACL,QAAQ,QAAQ,IAAI,eAAe,MAAM,UAAU,KAAK;AACzD,MAAI,CAAC,cAAc;AAElB,WAAOO,WAAS,6CAA6C;AAAA,EAC9D;AACM,QAAA,EAAE,KAAAjB,MAAK,eAAe,EAC1B,OAAO,EAAE,KAAK,EAAE,OAAO,GAAG,YAAY,EAAE,UAAU,WAAY,CAAA,EAC9D,MAAM,MAAM,QAAQ,KAAA,CAAM;AAC5B,MAAI,eAAe,QAAW;AACvB,UAAA,MAAM,OAAOA,IAAG;AAAA,EAAA,OAChB;AAEA,UAAA,MAAM,IAAIA,MAAK,UAAU;AAAA,EAChC;AACA,SAAO,KAAK,EAAE,SAAS,KAAM,CAAA;AAC9B;;;;;ACnBA,eAAsBsB,SAAO,EAAE,SAAS,UAA8B;AAC/D,QAAA,oBAAoB,SAAS,OAAO;AAC1C,QAAM,eAAe,IAAI,IAAI,QAAQ,GAAG,EAAE;AACpC,QAAA,sBAAsB,MAAM;AAC5B,QAAA,eAAe,MAAM;AAC3B,QAAM,WACL,aAAa,IAAI,UAAU,KAAK,oBAAoB;AACrD,QAAM,eAAe,QAAQ;AAEvB,QAAA,EAAE,SAAa,IAAA;AACrB,oBAAkB,UAAU,sBAAsB;AAClD,SAAO,KAAK;AAAA,IACX,UAAU;AAAA,MACT,UAAU;AAAA,MACV,QAAQ,aAAa,QAAQ;AAAA,MAC7B,WAAW,oBAAoB,oBAAoB;AAAA,IACpD;AAAA,IACA;AAAA,IACA,OAAO,MAAM,IAAI,QAAQ;AAAA,EAAA,CACzB;AACF;;;;;AC1BsB,eAAAA,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AACpC,QAAA,OAAO,MAAMJ,SAAO,KAAK,WAAW,EAAE,OAAO,EAAE,IAAI,OAAO,EAAA,CAAG;AACnE,MAAI,CAAC,MAAM;AACV,UAAM,aAAa,IAAI,IAAI,QAAQ,GAAG;AAChC,UAAA,cAAc,IAAI,gBAAgB;AAAA,MACvC,CAAC,cAAc,GAAG,WAAW,QAAQ,GAAG,WAAW,MAAM,EAAE;AAAA,IAAA,CAC3D;AACK,UAAA,aAAa,UAAU,WAAW;AACxC,UAAM,OAAO,EAAE,SAAS,WAAY,CAAA;AACpC,WAAOD,WAAS,UAAU;AAAA,EAC3B;AACA,SAAOA,WAAS,UAAU,KAAK,QAAQ,EAAE;AAC1C;;;;;ACZsB,eAAAK,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AAC1C,QAAM,OAAO,MAAMJ,SAAO,KAAK,kBAAkB;AAAA,IAChD,OAAO,EAAE,IAAI,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMpB,SAAS;AAAA,MACR,OAAO;AAAA,QACN,QAAQ;AAAA,UACP,IAAI;AAAA,UACJ,WAAW;AAAA,UACX,WAAW;AAAA,UACX,aAAa;AAAA,QACd;AAAA,MACD;AAAA,MACA,OAAO;AAAA,QACN,SAAS;AAAA,UACR,QAAQ;AAAA,YACP,QAAQ;AAAA,cACP,IAAI;AAAA,cACJ,WAAW;AAAA,cACX,WAAW;AAAA,cACX,aAAa;AAAA,YACd;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,MACA,UAAU;AAAA;AAAA,MACV,UAAU;AAAA,MACV,OAAO;AAAA,IACR;AAAA,EAAA,CACA;AAEK,QAAA,SAAS,aAAa,OAAO;AAEnC,SAAO,KAAK;AAAA,IACX,MAAM;AAAA,MACL,GAAG;AAAA,MACH,OAAO,KAAK,QACT;AAAA,QACA,GAAG,KAAK;AAAA,QACR,KAAK,GAAG,MAAM,0BAA0B,KAAK,MAAM,EAAE;AAAA,MAAA,IAErD;AAAA,MACH,OAAO,KAAK,MAAM,IAAI,CAAS,UAAA;AAAA,QAC9B,GAAG;AAAA,QACH,QAAQ,KAAK,OAAO,IAAI,CAAU,WAAA;AAAA,UACjC,GAAG;AAAA,UACH,KAAK,GAAG,MAAM,0BAA0B,MAAM,EAAE;AAAA,QAAA,EAC/C;AAAA,MAAA,EACD;AAAA,IACH;AAAA,EAAA,CACA;AACF;;;;;ACzDsB,eAAAI,SAAO,EAAE,WAA+B;AACvD,QAAA,OACL,QAAQ,QAAQ,IAAI,kBAAkB,KAAK,QAAQ,QAAQ,IAAI,MAAM;AAElE,MAAA;AAGH,UAAM,QAAQ,IAAI;AAAA,MACjBJ,SAAO,KAAK,MAAM;AAAA,MAClB,MAAM,GAAG,IAAI,IAAI,QAAQ,GAAG,EAAE,QAAQ,GAAG,IAAI,IAAI;AAAA,QAChD,QAAQ;AAAA,QACR,SAAS,EAAE,iBAAiB,OAAO;AAAA,MAAA,CACnC,EAAE,KAAK,CAAK,MAAA;AACZ,YAAI,CAAC,EAAE;AAAW,iBAAA,QAAQ,OAAO,CAAC;AAAA,MAAA,CAClC;AAAA,IAAA,CACD;AACM,WAAA,IAAI,SAAS,IAAI;AAAA,WAChB,OAAgB;AACxB,YAAQ,IAAI,iBAAiB,EAAE,MAAO,CAAA;AACtC,WAAO,IAAI,SAAS,SAAS,EAAE,QAAQ,IAAK,CAAA;AAAA,EAC7C;AACD;;;;;ACrBsB,eAAAI,SAAO,EAAE,UAA8B;AAC5D,oBAAkB,OAAO,SAAS,wBAAwB,EAAE,QAAQ,KAAK;AACzE,QAAM,QAAQ,MAAMJ,SAAO,UAAU,WAAW;AAAA,IAC/C,OAAO,EAAE,IAAI,OAAO,QAAQ;AAAA,IAC5B,QAAQ,EAAE,aAAa,MAAM,MAAM,KAAK;AAAA,EAAA,CACxC;AAED,oBAAkB,OAAO,aAAa,EAAE,QAAQ,IAAK,CAAA;AAE9C,SAAA,IAAI,SAAS,MAAM,MAAM;AAAA,IAC/B,SAAS;AAAA,MACR,gBAAgB,MAAM;AAAA,MACtB,kBAAkB,OAAO,WAAW,MAAM,IAAI,EAAE,SAAS;AAAA,MACzD,uBAAuB,qBAAqB,OAAO,OAAO;AAAA,MAC1D,iBAAiB;AAAA,IAClB;AAAA,EAAA,CACA;AACF;;;;;ACjBsB,eAAAI,SAAO,EAAE,UAA8B;AAC5D,oBAAkB,OAAO,SAAS,wBAAwB,EAAE,QAAQ,KAAK;AACzE,QAAM,QAAQ,MAAMJ,SAAO,UAAU,WAAW;AAAA,IAC/C,OAAO,EAAE,IAAI,OAAO,QAAQ;AAAA,IAC5B,QAAQ,EAAE,aAAa,MAAM,MAAM,KAAK;AAAA,EAAA,CACxC;AAED,oBAAkB,OAAO,aAAa,EAAE,QAAQ,IAAK,CAAA;AAE9C,SAAA,IAAI,SAAS,MAAM,MAAM;AAAA,IAC/B,SAAS;AAAA,MACR,gBAAgB,MAAM;AAAA,MACtB,kBAAkB,OAAO,WAAW,MAAM,IAAI,EAAE,SAAS;AAAA,MACzD,uBAAuB,qBAAqB,OAAO,OAAO;AAAA,MAC1D,iBAAiB;AAAA,IAClB;AAAA,EAAA,CACA;AACF;;;;;ACTa,MAAA,mBAAmB,EAAE,OAAO,EAAE,YAAY,EAAE,OAAO;AAGzD,MAAMM,WAAuC;AAAA,EACnD,YAAY,oBAAC,MAAK,EAAA,MAAK,aAAY,UAAY,gBAAA;AAAA,EAC/C,mBAAmB,MAAM;AAC1B;AAEsB,eAAAF,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AAC1C,QAAM,OAAO,MAAMJ,SAAO,KAAK,WAAW;AAAA,IACzC,OAAO,EAAE,IAAI,OAAO;AAAA,IACpB,QAAQ,EAAE,UAAU,KAAK;AAAA,EAAA,CACzB;AACD,oBAAkB,MAAM,kBAAkB,EAAE,QAAQ,IAAK,CAAA;AAClD,SAAA,KAAK,CAAA,CAAE;AACf;AAEA,MAAM,wBAAwB,EAAE,OAAO;AAAA,EACtC,QAAQ;AACT,CAAC;AAED,SAAwBkB,oBAAkB;AACzC,QAAM,OAAO;AACb,QAAM,UAAU;AACV,QAAA,cAAc,QAClB,IAAI,CAAK,MAAA;AACH,UAAA,SAAS,sBAAsB,UAAU,CAAC;AAChD,QAAI,CAAC,OAAO,WAAW,CAAC,OAAO,KAAK,OAAO;AAAmB,aAAA;AAC9D,WACE,oBAAA,MAAA,EAAgB,IAAI,EAAE,UAAU,WAAU,qBACzC,UAAA,OAAO,KAAK,OAAO,WADV,GAAA,EAAE,EAEb;AAAA,EAAA,CAED,EACA,OAAO,OAAO;AAGf,SAAA,qBAAC,OAAI,EAAA,WAAU,gCACd,UAAA;AAAA,IAAA,oBAAC,SAAI,WAAU,aACd,UAAC,qBAAA,MAAA,EAAG,WAAU,cACb,UAAA;AAAA,MAAA,oBAAC,MACA,EAAA,UAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,WAAU;AAAA,UACV,IAAI,UAAU,KAAK,QAAQ;AAAA,UAC3B,UAAA;AAAA,QAAA;AAAA,MAAA,GAGF;AAAA,MACC,YAAY,IAAI,CAAC,YAAY,GAAG,QAChC;AAAA,QAAC;AAAA,QAAA;AAAA,UAEA,WAAW,GAAG,2BAA2B;AAAA,YACxC,yBAAyB,IAAI,IAAI,SAAS;AAAA,UAAA,CAC1C;AAAA,UACD,UAAA;AAAA,YAAA;AAAA,YACI;AAAA,UAAA;AAAA,QAAA;AAAA,QALC;AAAA,MAAA,CAON;AAAA,IAAA,EAAA,CACF,EACD,CAAA;AAAA,IACA,oBAAC,QAAO,EAAA,MAAK,KAAK,CAAA;AAAA,wBACjB,QAAK,EAAA,WAAU,0DACf,UAAA,oBAAC,SAAO,CAAA,GACT;AAAA,EACD,EAAA,CAAA;AAEF;;;;;;;;AC9CO,MAAMZ,WAAuC;AAAA,EACnD,YAAY,oBAAC,MAAK,EAAA,MAAK,UAAS,UAAW,eAAA;AAAA,EAC3C,mBAAmB,MAAM;AAC1B;AAEA,eAAe,yBAAyB,QAAgB;AACvD,QAAM,OAAO,MAAMN,SAAO,KAAK,WAAW;AAAA,IACzC,QAAQ;AAAA,MACP,UAAU,EAAE,QAAQ,EAAE,QAAQ,OAAO;AAAA,MACrC,QAAQ,EAAE,QAAQ,EAAE,aAAa,OAAO;AAAA,IACzC;AAAA,IACA,OAAO,EAAE,IAAI,OAAO;AAAA,EAAA,CACpB;AAED,MAAI,6BAAM;AAAiB,WAAA;AAE3B,SAAO,SAAQ,6BAAM,OAAO,iBAAe,6BAAM,OAAO,eAAc,CAAC;AACxE;AAEsB,eAAAI,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AACpC,QAAA,UAAU,YAAY,4BAA4B;AACxD,QAAM,iBAAiB,MAAMJ,SAAO,WAAW,SAAS;AAAA,IACvD,QAAQ,EAAE,IAAI,MAAM,cAAc,MAAM,YAAY,MAAM,WAAW,KAAK;AAAA,IAC1E,OAAO,EAAE,OAAO;AAAA,EAAA,CAChB;AACD,QAAM,cAMD,CAAA;AACL,aAAW,cAAc,gBAAgB;AACxC,UAAM,IAAI,mBAAmB,UAAU,WAAW,YAAY;AAC9D,QAAI,CAAC,EAAE;AAAS;AAChB,UAAM,eAAe,EAAE;AACvB,UAAM,iBAAiB,MAAM;AAAA,MAC5B;AAAA,MACA,WAAW;AAAA,MACX,EAAE,QAAQ;AAAA,IAAA;AAEX,gBAAY,KAAK;AAAA,MAChB,GAAG;AAAA,MACH;AAAA,MACA,IAAI,WAAW;AAAA,MACf,oBAAoB,WAAW,UAAU,eAAe;AAAA,IAAA,CACxD;AAAA,EACF;AAEO,SAAA;AAAA,IACN;AAAA,MACC;AAAA,MACA,sBAAsB,MAAM,yBAAyB,MAAM;AAAA,IAC5D;AAAA,IACA,EAAE,SAAS,EAAE,iBAAiB,QAAQ,aAAa;AAAA,EAAA;AAErD;AAEO,MAAM,UAA2B,CAAC,EAAE,oBAAoB;AAC9D,QAAMf,WAAU;AAAA,IACf,iBAAiB,cAAc,IAAI,eAAe,KAAK;AAAA,EAAA;AAEjDA,SAAAA;AACR;AAEsB,eAAAO,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AACpC,QAAA,WAAW,MAAM,QAAQ;AAC/B;AAAA,IACC,SAAS,IAAI,QAAQ,MAAM;AAAA,IAC3B;AAAA,EAAA;AAED;AAAA,IACC,MAAM,yBAAyB,MAAM;AAAA,IACrC;AAAA,EAAA;AAEK,QAAA,eAAe,SAAS,IAAI,cAAc;AAC9B,oBAAA,OAAO,iBAAiB,UAAU,sBAAsB;AACpE,QAAAQ,SAAO,WAAW,OAAO;AAAA,IAC9B,OAAO;AAAA,MACN,IAAI;AAAA,MACJ;AAAA,IACD;AAAA,EAAA,CACA;AACK,QAAA,eAAe,MAAM,mBAAmB;AAAA,IAC7C,OAAO;AAAA,IACP,aAAa;AAAA,EAAA,CACb;AACM,SAAA,KAAK,EAAE,QAAQ,aAAsB,EAAE,SAAS,cAAc;AACtE;AAEA,SAAwB,cAAc;AACrC,QAAM,OAAO;AAGZ,SAAA,qBAAC,OAAI,EAAA,WAAU,oBACb,UAAA;AAAA,IAAA,KAAK,YAAY,SAChB,qBAAA,OAAA,EAAI,WAAU,uBACd,UAAA;AAAA,MAAA,oBAAC,OAAE,UAAkC,qCAAA,CAAA;AAAA,MACrC,oBAAC,QAAG,WAAU,uBACZ,eAAK,YAAY,IAAI,CACrB,MAAA,oBAAC,MACA,EAAA,UAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,YAAY;AAAA,UACZ,WAAW,KAAK;AAAA,QAAA;AAAA,MAHT,EAAA,GAAA,EAAE,EAKX,CACA,GACF;AAAA,IAAA,EACD,CAAA,IAEC,oBAAA,KAAA,EAAE,UAAmC,sCAAA,CAAA;AAAA,wBAEtC,OAAI,EAAA,WAAU,qEACb,UAAA,cAAc,IAAI,CAClB,iBAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QAEA,MAAK;AAAA,QACL;AAAA,MAAA;AAAA,MAFK;AAAA,IAIN,CAAA,GACF;AAAA,EACD,EAAA,CAAA;AAEF;AAEA,SAAS,WAAW;AAAA,EACnB;AAAA,EACA;AACD,GAGG;;AACF,QAAM,gBAAgB;AACtB,QAAM,CAAC,UAAU,WAAW,IAAI,SAAS,KAAK;AACxC,QAAA,OAAO,cAAc,WAAW,YAAY;AAEjD,SAAA,qBAAC,OAAI,EAAA,WAAU,8BACd,UAAA;AAAA,IAAC,qBAAA,QAAA,EAAK,WAAW,oCACf,UAAA;AAAA,MAAA;AAAA,2BACA,QACC,EAAA,UAAA;AAAA,QAAW,WAAA,OACV,oBAAA,KAAA,EAAE,MAAM,WAAW,MAAM,WAAU,aAClC,UAAA,WAAW,YACb,CAAA,IAEA,WAAW;AAAA,QACT;AAAA,QAAI;AAAA,QACL,WAAW;AAAA,QAAmB;AAAA,MAAA,GACjC;AAAA,IAAA,GACD;AAAA,IACC,YACC,qBAAA,cAAc,MAAd,EAAmB,QAAO,QAC1B,UAAA;AAAA,MAAA,oBAAC,WAAM,MAAK,gBAAe,OAAO,WAAW,IAAI,MAAK,UAAS;AAAA,MAC/D,oBAAC,iBACA,EAAA,UAAA,qBAAC,SACA,EAAA,UAAA;AAAA,QAAC,oBAAA,gBAAA,EAAe,SAAO,MACtB,UAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,MAAK;AAAA,YACL,OAAM;AAAA,YACN,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,QACC,cAAc,UAAU,SACrB,cACAP,MAAA,cAAc,SAAd,gBAAAA,IAAoB,WAAU;AAAA,YAGlC,UAAA,oBAAC,MAAK,EAAA,MAAK,UAAU,CAAA;AAAA,UAAA;AAAA,QAAA,GAEvB;AAAA,QACA,oBAAC,kBAAe,UAAuB,0BAAA,CAAA;AAAA,MAAA,EAAA,CACxC,EACD,CAAA;AAAA,IACD,EAAA,CAAA,wBAEC,iBACA,EAAA,UAAA,qBAAC,WAAQ,MAAM,UAAU,cAAc,aACtC,UAAA;AAAA,MAAC,oBAAA,gBAAA,EAAe,SAAS,MAAM,YAAY,IAAI,GAC9C,UAAC,oBAAA,MAAA,EAAK,MAAK,wBAAA,CAAwB,EACpC,CAAA;AAAA,MACA,oBAAC,kBAAe,UAEhB,qEAAA,CAAA;AAAA,IAAA,EAAA,CACD,EACD,CAAA;AAAA,EAEF,EAAA,CAAA;AAEF;;;;;;;;;ACxMO,MAAMa,WAAoB;AAAA,EAChC,mBAAmB,MAAM;AAC1B;AAEA,MAAM,oBAAoB,EAAE,OAAO;AAAA,EAClC,MAAM,WAAW,SAAS;AAAA,EAC1B,UAAU;AACX,CAAC;AAEqB,eAAAF,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AAC1C,QAAM,OAAO,MAAMJ,SAAO,KAAK,kBAAkB;AAAA,IAChD,OAAO,EAAE,IAAI,OAAO;AAAA,IACpB,QAAQ;AAAA,MACP,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,MACV,OAAO;AAAA,MACP,OAAO;AAAA,QACN,QAAQ,EAAE,IAAI,KAAK;AAAA,MACpB;AAAA,MACA,QAAQ;AAAA,QACP,QAAQ;AAAA,UACP,UAAU;AAAA,YACT,OAAO;AAAA,cACN,gBAAgB,EAAE,IAAI,oBAAI,OAAO;AAAA,YAClC;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EAAA,CACA;AAED,QAAM,wBAAwB,MAAMA,SAAO,aAAa,WAAW;AAAA,IAClE,QAAQ,EAAE,IAAI,KAAK;AAAA,IACnB,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,QAAQ,SAAS;AAAA,EAAA,CACtE;AAED,QAAM,WAAW,MAAMA,SAAO,SAAS,WAAW;AAAA,IACjD,QAAQ,EAAE,QAAQ,KAAK;AAAA,IACvB,OAAO,EAAE,OAAO;AAAA,EAAA,CAChB;AAED,SAAO,KAAK;AAAA,IACX;AAAA,IACA,aAAa,QAAQ,QAAQ;AAAA,IAC7B,oBAAoB,QAAQ,qBAAqB;AAAA,EAAA,CACjD;AACF;AAOA,MAAM,4BAA4B;AAClC,MAAM,gCAAgC;AACtC,MAAM,yBAAyB;AAET,eAAAR,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AACpC,QAAA,WAAW,MAAM,QAAQ;AACzB,QAAA,SAAS,SAAS,IAAI,QAAQ;AACpC,UAAQ,QAAQ;AAAA,IACf,KAAK,2BAA2B;AAC/B,aAAO,oBAAoB,EAAE,SAAS,QAAQ,SAAU,CAAA;AAAA,IACzD;AAAA,IACA,KAAK,+BAA+B;AACnC,aAAO,wBAAwB,EAAE,SAAS,QAAQ,SAAU,CAAA;AAAA,IAC7D;AAAA,IACA,KAAK,wBAAwB;AAC5B,aAAO,iBAAiB,EAAE,SAAS,QAAQ,SAAU,CAAA;AAAA,IACtD;AAAA,IACA,SAAS;AACF,YAAA,IAAI,SAAS,mBAAmB,MAAM,KAAK,EAAE,QAAQ,KAAK;AAAA,IACjE;AAAA,EACD;AACD;AAEA,SAAwB,kBAAkB;;AACzC,QAAM,OAAO;AAGZ,SAAA,qBAAC,OAAI,EAAA,WAAU,wBACd,UAAA;AAAA,IAAA,oBAAC,SAAI,WAAU,uBACd,UAAC,qBAAA,OAAA,EAAI,WAAU,sBACd,UAAA;AAAA,MAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,KAAK,eAAcC,MAAA,KAAK,KAAK,UAAV,gBAAAA,IAAiB,EAAE;AAAA,UACtC,KAAK,KAAK,KAAK;AAAA,UACf,WAAU;AAAA,QAAA;AAAA,MACX;AAAA,MACA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,SAAO;AAAA,UACP,SAAQ;AAAA,UACR,WAAU;AAAA,UAEV,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,oBAAkB;AAAA,cAClB,IAAG;AAAA,cACH,OAAM;AAAA,cACN,cAAW;AAAA,cAEX,UAAC,oBAAA,MAAA,EAAK,MAAK,UAAS,WAAU,WAAU;AAAA,YAAA;AAAA,UACzC;AAAA,QAAA;AAAA,MACD;AAAA,IAAA,EAAA,CACD,EACD,CAAA;AAAA,wBACC,eAAc,EAAA;AAAA,IAEf,oBAAC,OAAI,EAAA,WAAU,yDAAyD,CAAA;AAAA,IACxE,qBAAC,OAAI,EAAA,WAAU,qCACd,UAAA;AAAA,MAAC,oBAAA,OAAA,EACA,8BAAC,MAAK,EAAA,IAAG,gBACR,UAAC,qBAAA,MAAA,EAAK,MAAK,mBAAkB,UAAA;AAAA,QAAA;AAAA,QACT,KAAK,KAAK;AAAA,MAAA,EAC9B,CAAA,EACD,CAAA,GACD;AAAA,MACA,oBAAC,SACA,UAAC,oBAAA,MAAA,EAAK,IAAG,cACP,UAAA,KAAK,qBACJ,oBAAA,MAAA,EAAK,MAAK,eAAc,UAAA,kBAAc,IAEtC,oBAAA,MAAA,EAAK,MAAK,eAAc,UAAA,aAAA,CAAU,GAErC,EACD,CAAA;AAAA,0BACC,OACA,EAAA,UAAA,oBAAC,QAAK,IAAI,KAAK,cAAc,aAAa,mBACzC,UAAC,oBAAA,MAAA,EAAK,MAAK,mBACT,UAAA,KAAK,cAAc,oBAAoB,qBACzC,GACD,EACD,CAAA;AAAA,MACC,oBAAA,OAAA,EACA,UAAC,oBAAA,MAAA,EAAK,IAAG,eACR,UAAC,oBAAA,MAAA,EAAK,MAAK,UAAS,UAAkB,qBAAA,CAAA,EACvC,CAAA,GACD;AAAA,0BACC,OACA,EAAA,UAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,gBAAc;AAAA,UACd,UAAS;AAAA,UACT,IAAG;AAAA,UAEH,UAAC,oBAAA,MAAA,EAAK,MAAK,YAAW,UAAkB,sBAAA;AAAA,QAAA;AAAA,MAAA,GAE1C;AAAA,0BACC,mBAAkB,EAAA;AAAA,0BAClB,YAAW,EAAA;AAAA,IAAA,GACb;AAAA,EACD,EAAA,CAAA;AAEF;AAEA,eAAe,oBAAoB,EAAE,QAAQ,YAA+B;AACrE,QAAA,aAAa,MAAM,aAAa,UAAU;AAAA,IAC/C,OAAO;AAAA,IACP,QAAQ,kBAAkB,YAAY,OAAO,EAAE,SAAA,GAAY,QAAQ;AAClE,YAAM,mBAAmB,MAAMO,SAAO,KAAK,WAAW;AAAA,QACrD,OAAO,EAAE,SAAS;AAAA,QAClB,QAAQ,EAAE,IAAI,KAAK;AAAA,MAAA,CACnB;AACG,UAAA,oBAAoB,iBAAiB,OAAO,QAAQ;AACvD,YAAI,SAAS;AAAA,UACZ,MAAM,CAAC,UAAU;AAAA,UACjB,MAAM,EAAE,aAAa;AAAA,UACrB,SAAS;AAAA,QAAA,CACT;AAAA,MACF;AAAA,IAAA,CACA;AAAA,EAAA,CACD;AACG,MAAA,WAAW,WAAW,WAAW;AAC7B,WAAA;AAAA,MACN,EAAE,QAAQ,WAAW,QAAQ;AAAA,MAC7B,EAAE,QAAQ,WAAW,WAAW,UAAU,MAAM,IAAI;AAAA,IAAA;AAAA,EAEtD;AAEA,QAAM,OAAO,WAAW;AAElB,QAAAA,SAAO,KAAK,OAAO;AAAA,IACxB,QAAQ,EAAE,UAAU,KAAK;AAAA,IACzB,OAAO,EAAE,IAAI,OAAO;AAAA,IACpB,MAAM;AAAA,MACL,MAAM,KAAK;AAAA,MACX,UAAU,KAAK;AAAA,IAChB;AAAA,EAAA,CACA;AAED,SAAO,KAAK;AAAA,IACX,QAAQ,WAAW,MAAM;AAAA,EAAA,CACzB;AACF;AAEA,SAAS,gBAAgB;;AACxB,QAAM,OAAO;AAEb,QAAM,UAAU;AAEhB,QAAM,CAAC,MAAM,MAAM,IAAI,QAAQ;AAAA,IAC9B,IAAI;AAAA,IACJ,YAAY,iBAAiB,iBAAiB;AAAA,IAC9C,aAAYP,MAAA,QAAQ,SAAR,gBAAAA,IAAc;AAAA,IAC1B,WAAW,EAAE,YAAY;AACxB,aAAO,aAAa,UAAU,EAAE,QAAQ,kBAAmB,CAAA;AAAA,IAC5D;AAAA,IACA,cAAc;AAAA,MACb,UAAU,KAAK,KAAK;AAAA,MACpB,MAAM,KAAK,KAAK;AAAA,IACjB;AAAA,EAAA,CACA;AAGA,SAAA,qBAAC,QAAQ,MAAR,EAAa,QAAO,QAAQ,GAAG,aAAa,IAAI,GAChD,UAAA;AAAA,IAAC,qBAAA,OAAA,EAAI,WAAU,6BACd,UAAA;AAAA,MAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,WAAU;AAAA,UACV,YAAY;AAAA,YACX,SAAS,OAAO,SAAS;AAAA,YACzB,UAAU;AAAA,UACX;AAAA,UACA,YAAY,cAAc,OAAO,UAAU,EAAE,MAAM,QAAQ;AAAA,UAC3D,QAAQ,OAAO,SAAS;AAAA,QAAA;AAAA,MACzB;AAAA,MACA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,WAAU;AAAA,UACV,YAAY,EAAE,SAAS,OAAO,KAAK,IAAI,UAAU,OAAO;AAAA,UACxD,YAAY,cAAc,OAAO,MAAM,EAAE,MAAM,QAAQ;AAAA,UACvD,QAAQ,OAAO,KAAK;AAAA,QAAA;AAAA,MACrB;AAAA,IAAA,GACD;AAAA,wBAEC,WAAU,EAAA,QAAQ,KAAK,QAAQ,IAAI,KAAK,SAAS;AAAA,IAElD,oBAAC,OAAI,EAAA,WAAU,4BACd,UAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,MAAK;AAAA,QACL,MAAK;AAAA,QACL,MAAK;AAAA,QACL,OAAO;AAAA,QACP,QAAQ,QAAQ,UAAU,SAAS,YAAY,KAAK,UAAU;AAAA,QAC9D,UAAA;AAAA,MAAA;AAAA,IAAA,GAGF;AAAA,EACD,EAAA,CAAA;AAEF;AAEA,eAAe,wBAAwB,EAAE,SAAS,UAA6B;AACxE,QAAA,cAAc,MAAM,mBAAmB;AAAA,IAC5C,QAAQ,QAAQ,IAAI,QAAQ;AAAA,EAAA;AAEvB,QAAA,YAAY,YAAY,IAAI,UAAU;AAC5C;AAAA,IACC;AAAA,IACA;AAAA,EAAA;AAEK,QAAAO,SAAO,QAAQ,WAAW;AAAA,IAC/B,OAAO;AAAA,MACN;AAAA,MACA,IAAI,EAAE,KAAK,UAAU;AAAA,IACtB;AAAA,EAAA,CACA;AACD,SAAO,KAAK,EAAE,QAAQ,UAAoB,CAAA;AAC3C;AAEA,SAAS,oBAAoB;;AAC5B,QAAM,OAAO;AACb,QAAM,KAAK;AAEX,QAAM,UAAU;AAChB,QAAM,qBAAqB,KAAK,KAAK,OAAO,WAAW;AAEtD,SAAA,oBAAC,SACC,UACA,qBAAA,oBAAC,QAAQ,MAAR,EAAa,QAAO,QACpB,UAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,GAAG,GAAG,eAAe;AAAA,QACrB,MAAM;AAAA,QACN,MAAM;AAAA,QACN,OAAO;AAAA,MAAA,CACP;AAAA,MACD,SAAS,GAAG,cAAc,gBAAgB;AAAA,MAC1C,QACC,QAAQ,UAAU,SACf,cACAP,MAAA,QAAQ,SAAR,gBAAAA,IAAc,WAAU;AAAA,MAG5B,UAAA,oBAAC,QAAK,MAAK,UACT,aAAG,cACD,kBACA,eAAe,kBAAkB,mBACrC;AAAA,IAAA;AAAA,EAAA,GAEF,IAEA,oBAAC,QAAK,MAAK,UAAS,uCAAyB,EAE/C,CAAA;AAEF;AAEA,eAAe,iBAAiB,EAAE,UAA6B;AACxD,QAAAO,SAAO,KAAK,OAAO,EAAE,OAAO,EAAE,IAAI,OAAO,EAAA,CAAG;AAClD,SAAO,kBAAkB,KAAK;AAAA,IAC7B,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,EAAA,CACb;AACF;AAEA,SAAS,aAAa;AACrB,QAAM,KAAK;AAEX,QAAM,UAAU;AAChB,6BACE,OACA,EAAA,UAAA,oBAAC,QAAQ,MAAR,EAAa,QAAO,QACpB,UAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,GAAG,GAAG,eAAe;AAAA,QACrB,MAAM;AAAA,QACN,MAAM;AAAA,QACN,OAAO;AAAA,MAAA,CACP;AAAA,MACD,SAAS,GAAG,cAAc,gBAAgB;AAAA,MAC1C,QAAQ,QAAQ,UAAU,SAAS,YAAY;AAAA,MAE/C,8BAAC,MAAK,EAAA,MAAK,SACT,UAAG,GAAA,cAAc,kBAAkB,uBACrC,CAAA;AAAA,IAAA;AAAA,EAAA,EAEF,CAAA,EACD,CAAA;AAEF;;;;;;;;AC9UO,MAAMM,WAAuC;AAAA,EACnD,YAAY,oBAAC,MAAK,EAAA,MAAK,mBAAkB,UAAQ,YAAA;AAAA,EACjD,mBAAmB,MAAM;AAC1B;AAEA,MAAM,qBAAqB,EACzB,OAAO;AAAA,EACP,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,oBAAoB;AACrB,CAAC,EACA,YAAY,CAAC,EAAE,oBAAoB,YAAA,GAAe,QAAQ;AAC1D,MAAI,uBAAuB,aAAa;AACvC,QAAI,SAAS;AAAA,MACZ,MAAM,CAAC,oBAAoB;AAAA,MAC3B,MAAM,EAAE,aAAa;AAAA,MACrB,SAAS;AAAA,IAAA,CACT;AAAA,EACF;AACD,CAAC;AAEF,eAAe,gBAAgB,QAAgB;AAC9C,QAAM,WAAW,MAAMN,SAAO,SAAS,WAAW;AAAA,IACjD,QAAQ,EAAE,QAAQ,KAAK;AAAA,IACvB,OAAO,EAAE,OAAO;AAAA,EAAA,CAChB;AACD,MAAI,CAAC,UAAU;AACd,UAAMD,WAAS,mCAAmC;AAAA,EACnD;AACD;AAEsB,eAAAK,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AAC1C,QAAM,gBAAgB,MAAM;AACrB,SAAA,KAAK,CAAA,CAAE;AACf;AAEsB,eAAAZ,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AAC1C,QAAM,gBAAgB,MAAM;AACtB,QAAA,WAAW,MAAM,QAAQ;AACzB,QAAA,aAAa,MAAM,aAAa,UAAU;AAAA,IAC/C,OAAO;AAAA,IACP,QAAQ,mBAAmB;AAAA,MAC1B,OAAO,EAAE,iBAAiB,aAAA2B,aAAAA,GAAe,QAAQ;AAChD,YAAI,mBAAmBA,cAAa;AACnC,gBAAM,OAAO,MAAM,mBAAmB,EAAE,IAAI,OAAA,GAAU,eAAe;AACrE,cAAI,CAAC,MAAM;AACV,gBAAI,SAAS;AAAA,cACZ,MAAM,CAAC,iBAAiB;AAAA,cACxB,MAAM,EAAE,aAAa;AAAA,cACrB,SAAS;AAAA,YAAA,CACT;AAAA,UACF;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EAAA,CACA;AACG,MAAA,WAAW,WAAW,WAAW;AAC7B,WAAA;AAAA,MACN;AAAA,QACC,QAAQ,WAAW,MAAM;AAAA,UACxB,YAAY,CAAC,mBAAmB,eAAe,oBAAoB;AAAA,QAAA,CACnE;AAAA,MACF;AAAA,MACA,EAAE,QAAQ,WAAW,WAAW,UAAU,MAAM,IAAI;AAAA,IAAA;AAAA,EAEtD;AAEM,QAAA,EAAE,YAAY,IAAI,WAAW;AAE7B,QAAAnB,SAAO,KAAK,OAAO;AAAA,IACxB,QAAQ,EAAE,UAAU,KAAK;AAAA,IACzB,OAAO,EAAE,IAAI,OAAO;AAAA,IACpB,MAAM;AAAA,MACL,UAAU;AAAA,QACT,QAAQ;AAAA,UACP,MAAM,MAAM,gBAAgB,WAAW;AAAA,QACxC;AAAA,MACD;AAAA,IACD;AAAA,EAAA,CACA;AAEM,SAAA;AAAA,IACN;AAAA,IACA;AAAA,MACC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,aAAa;AAAA,IACd;AAAA,IACA,EAAE,QAAQ,IAAI;AAAA,EAAA;AAEhB;AAEA,SAAwB,sBAAsB;AAC7C,QAAM,aAAa;AACnB,QAAM,YAAY;AAElB,QAAM,CAAC,MAAM,MAAM,IAAI,QAAQ;AAAA,IAC9B,IAAI;AAAA,IACJ,YAAY,iBAAiB,kBAAkB;AAAA,IAC/C,YAAY,yCAAY;AAAA,IACxB,WAAW,EAAE,YAAY;AACxB,aAAO,aAAa,UAAU,EAAE,QAAQ,mBAAoB,CAAA;AAAA,IAC7D;AAAA,IACA,kBAAkB;AAAA,EAAA,CAClB;AAGA,SAAA,qBAAC,QAAK,QAAO,QAAQ,GAAG,aAAa,IAAI,GAAG,WAAU,oBACrD,UAAA;AAAA,IAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,YAAY,EAAE,UAAU,mBAAmB;AAAA,QAC3C,YAAY;AAAA,UACX,GAAG,cAAc,OAAO,iBAAiB,EAAE,MAAM,YAAY;AAAA,UAC7D,cAAc;AAAA,QACf;AAAA,QACA,QAAQ,OAAO,gBAAgB;AAAA,MAAA;AAAA,IAChC;AAAA,IACA;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,YAAY,EAAE,UAAU,eAAe;AAAA,QACvC,YAAY;AAAA,UACX,GAAG,cAAc,OAAO,aAAa,EAAE,MAAM,YAAY;AAAA,UACzD,cAAc;AAAA,QACf;AAAA,QACA,QAAQ,OAAO,YAAY;AAAA,MAAA;AAAA,IAC5B;AAAA,IACA;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,YAAY,EAAE,UAAU,uBAAuB;AAAA,QAC/C,YAAY;AAAA,UACX,GAAG,cAAc,OAAO,oBAAoB;AAAA,YAC3C,MAAM;AAAA,UAAA,CACN;AAAA,UACD,cAAc;AAAA,QACf;AAAA,QACA,QAAQ,OAAO,mBAAmB;AAAA,MAAA;AAAA,IACnC;AAAA,wBACC,WAAU,EAAA,IAAI,KAAK,SAAS,QAAQ,KAAK,QAAQ;AAAA,IAClD,qBAAC,OAAI,EAAA,WAAU,iCACd,UAAA;AAAA,MAAC,oBAAA,QAAA,EAAO,SAAQ,aAAY,SAAO,MAClC,8BAAC,MAAK,EAAA,IAAG,MAAK,UAAA,SAAM,CAAA,GACrB;AAAA,MACA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,MAAK;AAAA,UACL,QAAQ,YAAY,YAAY,KAAK,UAAU;AAAA,UAC/C,UAAA;AAAA,QAAA;AAAA,MAED;AAAA,IAAA,GACD;AAAA,EACD,EAAA,CAAA;AAEF;;;;;;;;AC5JO,MAAMM,WAAuC;AAAA,EACnD,YAAY,oBAAC,MAAK,EAAA,MAAK,mBAAkB,UAAQ,YAAA;AAAA,EACjD,mBAAmB,MAAM;AAC1B;AAEA,MAAM,qBAAqB;AAE3B,eAAe,kBAAkB,QAAgB;AAChD,QAAM,WAAW,MAAMN,SAAO,SAAS,WAAW;AAAA,IACjD,QAAQ,EAAE,QAAQ,KAAK;AAAA,IACvB,OAAO,EAAE,OAAO;AAAA,EAAA,CAChB;AACD,MAAI,UAAU;AACb,UAAMD,WAAS,4BAA4B;AAAA,EAC5C;AACD;AAEsB,eAAAK,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AAC1C,QAAM,kBAAkB,MAAM;AACvB,SAAA,KAAK,CAAA,CAAE;AACf;AAEsB,eAAAZ,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AAC1C,QAAM,kBAAkB,MAAM;AACxB,QAAA,WAAW,MAAM,QAAQ;AACzB,QAAA,aAAa,MAAM,aAAa,UAAU;AAAA,IAC/C,OAAO;AAAA,IACP,QAAQ;AAAA,EAAA,CACR;AACG,MAAA,WAAW,WAAW,WAAW;AAC7B,WAAA;AAAA,MACN;AAAA,QACC,QAAQ,WAAW,MAAM;AAAA,UACxB,YAAY,CAAC,YAAY,iBAAiB;AAAA,QAAA,CAC1C;AAAA,MACF;AAAA,MACA,EAAE,QAAQ,WAAW,WAAW,UAAU,MAAM,IAAI;AAAA,IAAA;AAAA,EAEtD;AAEM,QAAA,EAAE,SAAS,IAAI,WAAW;AAE1B,QAAAQ,SAAO,KAAK,OAAO;AAAA,IACxB,QAAQ,EAAE,UAAU,KAAK;AAAA,IACzB,OAAO,EAAE,IAAI,OAAO;AAAA,IACpB,MAAM;AAAA,MACL,UAAU;AAAA,QACT,QAAQ;AAAA,UACP,MAAM,MAAM,gBAAgB,QAAQ;AAAA,QACrC;AAAA,MACD;AAAA,IACD;AAAA,EAAA,CACA;AAED,SAAOD,WAAS,qBAAqB,EAAE,QAAQ,KAAK;AACrD;AAEA,SAAwB,sBAAsB;AAC7C,QAAM,aAAa;AACnB,QAAM,YAAY;AAElB,QAAM,CAAC,MAAM,MAAM,IAAI,QAAQ;AAAA,IAC9B,IAAI;AAAA,IACJ,YAAY,iBAAiB,kBAAkB;AAAA,IAC/C,YAAY,yCAAY;AAAA,IACxB,WAAW,EAAE,YAAY;AACxB,aAAO,aAAa,UAAU,EAAE,QAAQ,mBAAoB,CAAA;AAAA,IAC7D;AAAA,IACA,kBAAkB;AAAA,EAAA,CAClB;AAGA,SAAA,qBAAC,QAAK,QAAO,QAAQ,GAAG,aAAa,IAAI,GAAG,WAAU,oBACrD,UAAA;AAAA,IAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,YAAY,EAAE,UAAU,eAAe;AAAA,QACvC,YAAY;AAAA,UACX,GAAG,cAAc,OAAO,UAAU,EAAE,MAAM,YAAY;AAAA,UACtD,cAAc;AAAA,QACf;AAAA,QACA,QAAQ,OAAO,SAAS;AAAA,MAAA;AAAA,IACzB;AAAA,IACA;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,YAAY,EAAE,UAAU,uBAAuB;AAAA,QAC/C,YAAY;AAAA,UACX,GAAG,cAAc,OAAO,iBAAiB;AAAA,YACxC,MAAM;AAAA,UAAA,CACN;AAAA,UACD,cAAc;AAAA,QACf;AAAA,QACA,QAAQ,OAAO,gBAAgB;AAAA,MAAA;AAAA,IAChC;AAAA,wBACC,WAAU,EAAA,IAAI,KAAK,SAAS,QAAQ,KAAK,QAAQ;AAAA,IAClD,qBAAC,OAAI,EAAA,WAAU,iCACd,UAAA;AAAA,MAAC,oBAAA,QAAA,EAAO,SAAQ,aAAY,SAAO,MAClC,8BAAC,MAAK,EAAA,IAAG,MAAK,UAAA,SAAM,CAAA,GACrB;AAAA,MACA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,MAAK;AAAA,UACL,QAAQ,YAAY,YAAY,KAAK,UAAU;AAAA,UAC/C,UAAA;AAAA,QAAA;AAAA,MAED;AAAA,IAAA,GACD;AAAA,EACD,EAAA,CAAA;AAEF;;;;;;;;AC9FO,MAAMO,WAAuC;AAAA,EACnD,YAAY,oBAAC,MAAK,EAAA,MAAK,UAAS,UAAK,SAAA;AAAA,EACrC,mBAAmB,MAAM;AAC1B;AAEA,MAAM,WAAW,OAAO,OAAO;AAE/B,MAAM,oBAAoB,EAAE,OAAO;AAAA,EAClC,QAAQ,EAAE,QAAQ,QAAQ;AAC3B,CAAC;AAED,MAAM,iBAAiB,EAAE,OAAO;AAAA,EAC/B,QAAQ,EAAE,QAAQ,QAAQ;AAAA,EAC1B,WAAW,EACT,WAAW,IAAI,EACf,OAAO,CAAQ,SAAA,KAAK,OAAO,GAAG,mBAAmB,EACjD,OAAO,UAAQ,KAAK,QAAQ,UAAU,kCAAkC;AAC3E,CAAC;AAED,MAAM,kBAAkB,EAAE,mBAAmB,UAAU;AAAA,EACtD;AAAA,EACA;AACD,CAAC;AAEqB,eAAAF,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AAC1C,QAAM,OAAO,MAAMJ,SAAO,KAAK,WAAW;AAAA,IACzC,OAAO,EAAE,IAAI,OAAO;AAAA,IACpB,QAAQ;AAAA,MACP,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,MACV,OAAO,EAAE,QAAQ,EAAE,IAAI,OAAO;AAAA,IAC/B;AAAA,EAAA,CACA;AACD,oBAAkB,MAAM,kBAAkB,EAAE,QAAQ,IAAK,CAAA;AAClD,SAAA,KAAK,EAAE,KAAA,CAAM;AACrB;AAEsB,eAAAR,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AAC1C,QAAM,WAAW,MAAM;AAAA,IACtB;AAAA,IACA,mCAAmC,EAAE,aAAa,UAAU;AAAA,EAAA;AAGvD,QAAA,aAAa,MAAM,aAAa,UAAU;AAAA,IAC/C,QAAQ,gBAAgB,UAAU,OAAM,SAAQ;AAC/C,UAAI,KAAK,WAAW;AAAiB,eAAA,EAAE,QAAQ;AAC3C,UAAA,KAAK,UAAU,QAAQ;AAAG,eAAO,EAAE;AAChC,aAAA;AAAA,QACN,QAAQ,KAAK;AAAA,QACb,OAAO;AAAA,UACN,aAAa,KAAK,UAAU;AAAA,UAC5B,MAAM,OAAO,KAAK,MAAM,KAAK,UAAU,aAAa;AAAA,QACrD;AAAA,MAAA;AAAA,IACD,CACA;AAAA,IACD,OAAO;AAAA,EAAA,CACP;AAEG,MAAA,WAAW,WAAW,WAAW;AAC7B,WAAA;AAAA,MACN,EAAE,QAAQ,WAAW,QAAQ;AAAA,MAC7B,EAAE,QAAQ,WAAW,WAAW,UAAU,MAAM,IAAI;AAAA,IAAA;AAAA,EAEtD;AAEA,QAAM,EAAE,OAAO,WAAW,WAAW;AAErC,MAAI,WAAW,UAAU;AAClB,UAAAQ,SAAO,UAAU,WAAW,EAAE,OAAO,EAAE,UAAU;AACvD,WAAOD,WAAS,mBAAmB;AAAA,EACpC;AAEM,QAAAC,SAAO,aAAa,OAAM,YAAW;AACpC,UAAA,QAAQ,UAAU,WAAW,EAAE,OAAO,EAAE,UAAU;AAClD,UAAA,QAAQ,KAAK,OAAO;AAAA,MACzB,OAAO,EAAE,IAAI,OAAO;AAAA,MACpB,MAAM,EAAE,OAAO,EAAE,QAAQ,QAAQ;AAAA,IAAA,CACjC;AAAA,EAAA,CACD;AAED,SAAOD,WAAS,mBAAmB;AACpC;AAEA,SAAwB,aAAa;;AACpC,QAAM,OAAO;AAEb,QAAM,yBAAyB;AAE/B,QAAM,aAAa;AACnB,QAAM,aAAa;AAEnB,QAAM,CAAC,MAAM,MAAM,IAAI,QAAQ;AAAA,IAC9B,IAAI;AAAA,IACJ,YAAY,iBAAiB,eAAe;AAAA,IAC5C,YAAY,yCAAY;AAAA,IACxB,WAAW,EAAE,YAAY;AACxB,aAAO,aAAa,UAAU,EAAE,QAAQ,gBAAiB,CAAA;AAAA,IAC1D;AAAA,IACA,kBAAkB;AAAA,EAAA,CAClB;AAED,QAAM,YAAY;AAClB,QAAM,gBAAgB,aAAYN,MAAA,WAAW,aAAX,gBAAAA,IAAqB,IAAI,YAAY;AACjE,QAAA,uBAAuB,OAAO,OAAO;AAE3C,QAAM,CAAC,aAAa,cAAc,IAAI,SAAwB,IAAI;AAElE,6BACE,OACA,EAAA,UAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACA,QAAO;AAAA,MACP,SAAQ;AAAA,MACR,WAAU;AAAA,MACV,SAAS,MAAM,eAAe,IAAI;AAAA,MACjC,GAAG,aAAa,IAAI;AAAA,MAErB,UAAA;AAAA,QAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,KACC,gBAAgB,KAAK,OAAO,eAAc,UAAK,KAAK,UAAV,mBAAiB,EAAE,IAAI;AAAA,YAElE,WAAU;AAAA,YACV,OAAK,UAAK,SAAL,mBAAW,WAAQ,UAAK,SAAL,mBAAW;AAAA,UAAA;AAAA,QACpC;AAAA,QACA,oBAAC,aAAU,QAAQ,OAAO,UAAU,QAAQ,IAAI,OAAO,UAAU,GAAI,CAAA;AAAA,QACrE,qBAAC,OAAI,EAAA,WAAU,cAOd,UAAA;AAAA,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,GAAG,cAAc,OAAO,WAAW,EAAE,MAAM,QAAQ;AAAA,cACpD,QAAO;AAAA,cACP,WAAU;AAAA,cACV,UAAQ;AAAA,cACR,UAAU,cAAc,KAAK;AAAA,cAC7B,UAAU,CAAK,MAAA;;AACd,sBAAM,QAAOA,MAAA,EAAE,cAAc,UAAhB,gBAAAA,IAAwB;AACrC,oBAAI,MAAM;AACH,wBAAA,SAAS,IAAI;AACnB,yBAAO,SAAS,CAAS,UAAA;;AACxB,qCAAe2B,OAAA3B,MAAA,MAAM,WAAN,gBAAAA,IAAc,WAAd,gBAAA2B,IAAsB,eAAc,IAAI;AAAA,kBAAA;AAExD,yBAAO,cAAc,IAAI;AAAA,gBAC1B;AAAA,cACD;AAAA,YAAA;AAAA,UACD;AAAA,UACA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,SAAO;AAAA,cACP,WAAU;AAAA,cAEV,UAAA,oBAAC,SAAM,EAAA,SAAS,OAAO,UAAU,IAChC,UAAA,oBAAC,MAAK,EAAA,MAAK,YAAW,UAAA,SAAM,CAAA,GAC7B;AAAA,YAAA;AAAA,UACD;AAAA,UACA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,MAAK;AAAA,cACL,OAAM;AAAA,cACN,MAAK;AAAA,cACL,WAAU;AAAA,cACV,QACC,kBAAkB,WACf,YACA,yBAAyB,WACxB,KAAK,UAAU,SACf;AAAA,cAEL,UAAA;AAAA,YAAA;AAAA,UAED;AAAA,UACA;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,SAAQ;AAAA,cACR,WAAU;AAAA,cACT,GAAG,KAAK,MAAM,eAAe;AAAA,cAE9B,UAAC,oBAAA,MAAA,EAAK,MAAK,SAAQ,UAAK,SAAA;AAAA,YAAA;AAAA,UACzB;AAAA,YACC,UAAK,KAAK,UAAV,mBAAiB,MACjB;AAAA,YAAC;AAAA,YAAA;AAAA,cACA,WAAU;AAAA,cACV,SAAQ;AAAA,cACP,GAAG,uBAAuB,eAAe;AAAA,gBACzC,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,OAAO;AAAA,cAAA,CACP;AAAA,cACD,QACC,kBAAkB,WACf,YACA,yBAAyB,WACxB,KAAK,UAAU,SACf;AAAA,cAGL,8BAAC,MAAK,EAAA,MAAK,SACT,UAAuB,uBAAA,cACrB,kBACA,SACJ,CAAA;AAAA,YAAA;AAAA,UAAA,IAEE;AAAA,QAAA,GACL;AAAA,QACC,oBAAA,WAAA,EAAU,QAAQ,KAAK,OAAQ,CAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAElC,EAAA,CAAA;AAEF;;;;;;;;AClOO,MAAMd,WAAuC;AAAA,EACnD,YAAY,oBAAC,MAAK,EAAA,MAAK,eAAc,UAAO,WAAA;AAAA,EAC5C,mBAAmB,MAAM;AAC1B;AAEsB,eAAAF,SAAO,EAAE,WAA+B;AAC7D,QAAM,0BAA0B,OAAO;AAChC,SAAA,KAAK,CAAA,CAAE;AACf;AAEsB,eAAAZ,SAAO,EAAE,WAA+B;AAC7D,QAAM,0BAA0B,OAAO;AACjC,QAAA,SAAS,MAAM,cAAc,OAAO;AACpC,QAAAQ,SAAO,aAAa,OAAO;AAAA,IAChC,OAAO,EAAE,aAAa,EAAE,QAAQ,QAAQ,MAAM,wBAAwB;AAAA,EAAA,CACtE;AACD,SAAO,kBAAkB,gCAAgC;AAAA,IACxD,OAAO;AAAA,IACP,aAAa;AAAA,EAAA,CACb;AACF;AAEA,SAAwB,wBAAwB;AAC/C,QAAM,oBAAoB;AAC1B,QAAM,KAAK;AAGV,SAAA,oBAAC,SAAI,WAAU,oBACd,+BAAC,kBAAkB,MAAlB,EAAuB,QAAO,QAC9B,UAAA;AAAA,IAAA,oBAAC,OAAE,UAGH,2GAAA,CAAA;AAAA,IACA;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,SAAQ;AAAA,QACR,QAAQ,kBAAkB,UAAU,YAAY,YAAY;AAAA,QAC3D,GAAG,GAAG,eAAe;AAAA,UACrB,WAAW;AAAA,UACX,MAAM;AAAA,UACN,OAAO;AAAA,UACP,MAAM;AAAA,QAAA,CACN;AAAA,QAEA,UAAA,GAAG,cAAc,kBAAkB;AAAA,MAAA;AAAA,IACrC;AAAA,EAAA,EACD,CAAA,EACD,CAAA;AAEF;;;;;;;;ACpCO,MAAMM,WAAuC;AAAA,EACnD,YAAY,oBAAC,MAAK,EAAA,MAAK,SAAQ,UAAM,UAAA;AAAA,EACrC,mBAAmB,MAAM;AAC1B;AAEA,MAAM,eAAe,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,QAAQ,EAAA,CAAG;AAC7D,MAAM,eAAe,EAAE,OAAO;AAAA,EAC7B,QAAQ,EAAE,QAAQ,QAAQ;AAAA,EAC1B,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;AAC9B,CAAC;AAED,MAAM,eAAe,EAAE,mBAAmB,UAAU;AAAA,EACnD;AAAA,EACA;AACD,CAAC;AAEM,MAAM,8BAA8B;AAErB,eAAAF,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AAC1C,QAAM,eAAe,MAAMJ,SAAO,aAAa,WAAW;AAAA,IACzD,OAAO;AAAA,MACN,aAAa,EAAE,MAAM,6BAA6B,QAAQ,OAAO;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACP,IAAI;AAAA,MACJ,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,IACT;AAAA,EAAA,CACA;AACD,MAAI,CAAC,cAAc;AAClB,WAAOD,WAAS,8BAA8B;AAAA,EAC/C;AACA,QAAM,OAAO,MAAMC,SAAO,KAAK,kBAAkB;AAAA,IAChD,OAAO,EAAE,IAAI,OAAO;AAAA,IACpB,QAAQ,EAAE,OAAO,KAAK;AAAA,EAAA,CACtB;AACD,QAAM,SAAS,IAAI,IAAI,aAAa,OAAO,CAAC,EAAE;AAC9C,QAAM,SAAS,eAAe;AAAA,IAC7B,GAAG;AAAA,IACH,aAAa,KAAK;AAAA,IAClB;AAAA,EAAA,CACA;AACD,QAAM,SAAS,MAAM,OAAO,UAAU,MAAM;AAC5C,SAAO,KAAK,EAAE,QAAQ,OAAQ,CAAA;AAC/B;AAEsB,eAAAR,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AACpC,QAAA,WAAW,MAAM,QAAQ;AAEzB,QAAA,aAAa,MAAM,aAAa,UAAU;AAAA,IAC/C,QAAQ,MACP,aAAa,YAAY,OAAO,MAAM,QAAQ;AAC7C,UAAI,KAAK,WAAW;AAAiB,eAAA;AAC/B,YAAA,cAAc,MAAM,YAAY;AAAA,QACrC,MAAM,KAAK;AAAA,QACX,MAAM;AAAA,QACN,QAAQ;AAAA,MAAA,CACR;AACD,UAAI,CAAC,aAAa;AACjB,YAAI,SAAS;AAAA,UACZ,MAAM,CAAC,MAAM;AAAA,UACb,MAAM,EAAE,aAAa;AAAA,UACrB,SAAS;AAAA,QAAA,CACT;AACD,eAAO,EAAE;AAAA,MACV;AAAA,IAAA,CACA;AAAA,IACF,OAAO;AAAA,EAAA,CACP;AAEG,MAAA,WAAW,WAAW,WAAW;AAC7B,WAAA;AAAA,MACN,EAAE,QAAQ,WAAW,QAAQ;AAAA,MAC7B,EAAE,QAAQ,WAAW,WAAW,UAAU,MAAM,IAAI;AAAA,IAAA;AAAA,EAEtD;AAEQ,UAAA,WAAW,MAAM,QAAQ;AAAA,IAChC,KAAK,UAAU;AACR,YAAAQ,SAAO,aAAa,WAAW;AAAA,QACpC,OAAO,EAAE,MAAM,6BAA6B,QAAQ,OAAO;AAAA,MAAA,CAC3D;AACD,aAAOD,WAAS,8BAA8B;AAAA,IAC/C;AAAA,IACA,KAAK,UAAU;AACR,YAAAC,SAAO,aAAa,OAAO;AAAA,QAChC,OAAO;AAAA,UACN,aAAa,EAAE,MAAM,6BAA6B,QAAQ,OAAO;AAAA,QAClE;AAAA,QACA,MAAM,EAAE,MAAM,sBAAsB;AAAA,MAAA,CACpC;AACD,aAAO,kBAAkB,gCAAgC;AAAA,QACxD,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAa;AAAA,MAAA,CACb;AAAA,IACF;AAAA,EACD;AACD;AAEA,SAAwBO,mBAAiB;;AACxC,QAAM,OAAO;AACb,QAAM,aAAa;AACnB,QAAM,aAAa;AAEnB,QAAM,YAAY;AAClB,QAAM,gBAAgB,aAAYd,MAAA,WAAW,aAAX,gBAAAA,IAAqB,IAAI,YAAY;AAEvE,QAAM,CAAC,MAAM,MAAM,IAAI,QAAQ;AAAA,IAC9B,IAAI;AAAA,IACJ,YAAY,iBAAiB,YAAY;AAAA,IACzC,YAAY,yCAAY;AAAA,IACxB,WAAW,EAAE,YAAY;AACxB,aAAO,aAAa,UAAU,EAAE,QAAQ,aAAc,CAAA;AAAA,IACvD;AAAA,EAAA,CACA;AACK,QAAA,uBAAuB,OAAO,OAAO;AAE3C,SACE,oBAAA,OAAA,EACA,UAAC,qBAAA,OAAA,EAAI,WAAU,oCACd,UAAA;AAAA,IAAA,oBAAC,SAAI,KAAI,WAAU,KAAK,KAAK,QAAQ,WAAU,aAAY;AAAA,IAC3D,oBAAC,OAAE,UAA8C,iDAAA,CAAA;AAAA,IAChD,oBAAA,KAAA,EAAE,WAAU,WAAU,UAGvB,gHAAA;AAAA,IACA,oBAAC,OAAI,EAAA,WAAU,OACd,UAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,WAAU;AAAA,QACV,cAAW;AAAA,QAEV,UAAK,KAAA;AAAA,MAAA;AAAA,IAAA,GAER;AAAA,IACC,oBAAA,KAAA,EAAE,WAAU,WAAU,UAMvB,8SAAA;AAAA,IACC,oBAAA,OAAA,EAAI,WAAU,sDACd,UAAC,qBAAA,MAAA,EAAK,QAAO,QAAQ,GAAG,aAAa,IAAI,GAAG,WAAU,UACrD,UAAA;AAAA,MAAC,oBAAA,OAAA,EAAI,WAAU,oCACd,UAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,YAAY;AAAA,YACX,SAAS,OAAO,KAAK;AAAA,YACrB,UAAU;AAAA,UACX;AAAA,UACA,YAAY;AAAA,YACX,GAAG,cAAc,OAAO,MAAM,EAAE,MAAM,QAAQ;AAAA,YAC9C,WAAW;AAAA,YACX,cAAc;AAAA,UACf;AAAA,UACA,QAAQ,OAAO,KAAK;AAAA,QAAA;AAAA,MAAA,GAEtB;AAAA,MAEC,oBAAA,OAAA,EAAI,WAAU,+BACd,UAAC,oBAAA,WAAA,EAAU,IAAI,KAAK,SAAS,QAAQ,KAAK,OAAQ,CAAA,GACnD;AAAA,MAEA,qBAAC,OAAI,EAAA,WAAU,8BACd,UAAA;AAAA,QAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,WAAU;AAAA,YACV,QACC,kBAAkB,WACf,YACA,yBAAyB,WACxB,KAAK,UAAU,SACf;AAAA,YAEL,MAAK;AAAA,YACL,MAAK;AAAA,YACL,OAAM;AAAA,YACN,UAAA;AAAA,UAAA;AAAA,QAED;AAAA,QACA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,WAAU;AAAA,YACV,SAAQ;AAAA,YACR,QACC,kBAAkB,WACf,YACA,yBAAyB,WACxB,KAAK,UAAU,SACf;AAAA,YAEL,MAAK;AAAA,YACL,MAAK;AAAA,YACL,OAAM;AAAA,YACN,UAAU;AAAA,YACV,UAAA;AAAA,UAAA;AAAA,QAED;AAAA,MAAA,GACD;AAAA,IAAA,EAAA,CACD,EACD,CAAA;AAAA,EAAA,EACD,CAAA,EACD,CAAA;AAEF;;;;;;;;;AC3NO,MAAM,SAAoB;AAAA,EAChC,mBAAmB,MAAM;AAC1B;AAEsB,eAAAW,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AAC1C,QAAM,eAAe,MAAMJ,SAAO,aAAa,WAAW;AAAA,IACzD,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,QAAQ,SAAS;AAAA,IACtE,QAAQ,EAAE,IAAI,KAAK;AAAA,EAAA,CACnB;AACD,SAAO,KAAK,EAAE,cAAc,QAAQ,YAAY,EAAG,CAAA;AACpD;AAEsB,eAAAR,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AAC1C,QAAM,EAAE,KAAK,MAAM,GAAG,WAAW,aAAa;AAC9C,QAAM,mBAAmB;AAAA,IACxB,GAAG;AAAA,IACH,MAAM;AAAA,IACN,QAAQ;AAAA,EAAA;AAEH,QAAAQ,SAAO,aAAa,OAAO;AAAA,IAChC,OAAO;AAAA,MACN,aAAa,EAAE,QAAQ,QAAQ,MAAM,4BAA4B;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,IACR,QAAQ;AAAA,EAAA,CACR;AACD,SAAOD,WAAS,qCAAqC;AACtD;AAEA,SAAwB,iBAAiB;AACxC,QAAM,OAAO;AACb,QAAM,mBAAmB;AAEzB,6BACE,OAAI,EAAA,WAAU,uBACb,UAAA,KAAK,eAEJ,qBAAA,UAAA,EAAA,UAAA;AAAA,IAAC,oBAAA,KAAA,EAAE,WAAU,WACZ,UAAA,oBAAC,QAAK,MAAK,SAAQ,yDAEnB,EACD,CAAA;AAAA,IACA,oBAAC,QAAK,IAAG,WACR,8BAAC,MAAK,EAAA,MAAK,eAAc,UAAA,cAAA,CAAW,EACrC,CAAA;AAAA,EAAA,EAAA,CACD,IAGC,qBAAA,UAAA,EAAA,UAAA;AAAA,IAAA,oBAAC,OACA,UAAC,oBAAA,MAAA,EAAK,MAAK,eAAc,iEAEzB,EACD,CAAA;AAAA,IACA,qBAAC,KAAE,EAAA,WAAU,WAAU,UAAA;AAAA,MAAA;AAAA,MAGjB;AAAA,0BACJ,KAAE,EAAA,WAAU,aAAY,MAAK,0BAAyB,UAEvD,aAAA;AAAA,MAAK;AAAA,MAAI;AAAA,IAAA,GAEV;AAAA,IACC,oBAAA,iBAAiB,MAAjB,EAAsB,QAAO,QAC7B,UAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,MAAK;AAAA,QACL,MAAK;AAAA,QACL,OAAM;AAAA,QACN,QAAQ,iBAAiB,UAAU,YAAY,YAAY;AAAA,QAC3D,WAAU;AAAA,QACV,UAAA;AAAA,MAAA;AAAA,IAAA,GAGF;AAAA,EAAA,EACD,CAAA,EAEF,CAAA;AAEF;;;;;;;;ACpFsB,eAAAK,SAAO,EAAE,UAA8B;AAC5D,QAAM,OAAO,MAAMJ,SAAO,KAAK,UAAU;AAAA,IACxC,QAAQ;AAAA,MACP,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,MACV,WAAW;AAAA,MACX,OAAO,EAAE,QAAQ,EAAE,IAAI,OAAO;AAAA,IAC/B;AAAA,IACA,OAAO;AAAA,MACN,UAAU,OAAO;AAAA,IAClB;AAAA,EAAA,CACA;AAED,oBAAkB,MAAM,kBAAkB,EAAE,QAAQ,IAAK,CAAA;AAElD,SAAA,KAAK,EAAE,MAAM,mBAAmB,KAAK,UAAU,sBAAsB;AAC7E;AAEA,SAAwB,eAAe;;AACtC,QAAM,OAAO;AACb,QAAM,OAAO,KAAK;AACZ,QAAA,kBAAkB,KAAK,QAAQ,KAAK;AAC1C,QAAM,eAAe;AACrB,QAAM,iBAAiB,KAAK,KAAK,QAAO,6CAAc;AAGrD,SAAA,qBAAC,OAAI,EAAA,WAAU,mEACd,UAAA;AAAA,IAAC,oBAAA,QAAA,EAAO,MAAK,MAAM,CAAA;AAAA,IAEnB,qBAAC,OAAI,EAAA,WAAU,kEACd,UAAA;AAAA,MAAC,oBAAA,OAAA,EAAI,WAAU,iBACd,UAAC,oBAAA,OAAA,EAAI,WAAU,oBACd,UAAA,oBAAC,OAAI,EAAA,WAAU,YACd,UAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,KAAK,eAAcP,MAAA,KAAK,KAAK,UAAV,gBAAAA,IAAiB,EAAE;AAAA,UACtC,KAAK;AAAA,UACL,WAAU;AAAA,QAAA;AAAA,MAAA,EAEZ,CAAA,EACD,CAAA,GACD;AAAA,MAEA,oBAAC,QAAO,EAAA,MAAK,KAAK,CAAA;AAAA,MAElB,qBAAC,OAAI,EAAA,WAAU,8BACd,UAAA;AAAA,QAAC,oBAAA,OAAA,EAAI,WAAU,oDACd,UAAA,oBAAC,QAAG,WAAU,uBAAuB,2BAAgB,EACtD,CAAA;AAAA,QACA,qBAAC,KAAE,EAAA,WAAU,0CAAyC,UAAA;AAAA,UAAA;AAAA,UAC7C,KAAK;AAAA,QAAA,GACd;AAAA,QACC,iBACC,oBAAA,MAAA,EAAK,QAAO,WAAU,QAAO,QAAO,WAAU,QAC9C,UAAC,oBAAA,QAAA,EAAO,MAAK,UAAS,SAAQ,QAAO,MAAK,QACzC,UAAA,oBAAC,MAAK,EAAA,MAAK,QAAO,WAAU,8BAA6B,UAAA,SAEzD,CAAA,EACD,CAAA,EACD,CAAA,IACG;AAAA,QACH,oBAAA,OAAA,EAAI,WAAU,oBACb,2BAEC,qBAAA,UAAA,EAAA,UAAA;AAAA,UAAC,oBAAA,QAAA,EAAO,SAAO,MACd,UAAC,oBAAA,MAAA,EAAK,IAAG,SAAQ,UAAS,UAAS,UAAA,WAEnC,CAAA,GACD;AAAA,UACA,oBAAC,QAAO,EAAA,SAAO,MACd,UAAA,oBAAC,MAAK,EAAA,IAAG,qBAAoB,UAAS,UAAS,UAAA,eAE/C,CAAA,GACD;AAAA,QAAA,EACD,CAAA,IAEC,oBAAA,QAAA,EAAO,SAAO,MACd,+BAAC,MAAK,EAAA,IAAG,SAAQ,UAAS,UACxB,UAAA;AAAA,UAAA;AAAA,UAAgB;AAAA,QAAA,EAClB,CAAA,EACD,CAAA,GAEF;AAAA,MAAA,GACD;AAAA,IAAA,GACD;AAAA,EACD,EAAA,CAAA;AAEF;AAEO,MAAMU,SAAoC,CAAC,EAAE,MAAM,aAAa;AACtE,QAAM,eAAc,6BAAM,KAAK,SAAQ,OAAO;AACvC,SAAA;AAAA,IACN,EAAE,OAAO,GAAG,WAAW,gBAAgB;AAAA,IACvC;AAAA,MACC,MAAM;AAAA,MACN,SAAS,cAAc,WAAW;AAAA,IACnC;AAAA,EAAA;AAEF;AAEO,SAASE,kBAAgB;AAE9B,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACA,gBAAgB;AAAA,QACf,KAAK,CAAC,EAAE,OAAO,2BACb,KAAE,EAAA,UAAA;AAAA,UAAA;AAAA,UAA4B,OAAO;AAAA,UAAS;AAAA,QAAA,GAAQ;AAAA,MAEzD;AAAA,IAAA;AAAA,EAAA;AAGH;;;;;;;;AChHsB,eAAAD,SAAO,EAAE,UAA8B;AAC5D,QAAM,QAAQ,MAAMJ,SAAO,KAAK,UAAU;AAAA,IACzC,QAAQ;AAAA,MACP,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,MACV,OAAO,EAAE,QAAQ,EAAE,IAAI,OAAO;AAAA,MAC9B,OAAO,EAAE,QAAQ,EAAE,IAAI,MAAM,OAAO,OAAO;AAAA,IAC5C;AAAA,IACA,OAAO,EAAE,UAAU,OAAO,SAAS;AAAA,EAAA,CACnC;AAED,oBAAkB,OAAO,mBAAmB,EAAE,QAAQ,IAAK,CAAA;AAEpD,SAAA,KAAK,EAAE,MAAA,CAAO;AACtB;AAEA,SAAwB,aAAa;;AACpC,QAAM,OAAO;AACb,QAAM,OAAO;AACb,QAAM,WAAU,6BAAM,QAAO,KAAK,MAAM;AACxC,QAAM,mBAAmB,KAAK,MAAM,QAAQ,KAAK,MAAM;AACvD,QAAM,0BACL;AACD,6BACE,QAAK,EAAA,WAAU,0DACf,UAAC,qBAAA,OAAA,EAAI,WAAU,6EACd,UAAA;AAAA,IAAA,oBAAC,SAAI,WAAU,uBACd,UAAC,qBAAA,OAAA,EAAI,WAAU,kCACd,UAAA;AAAA,MAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,IAAI,UAAU,KAAK,MAAM,QAAQ;AAAA,UACjC,WAAU;AAAA,UAEV,UAAA;AAAA,YAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACA,KAAK,eAAcP,MAAA,KAAK,MAAM,UAAX,gBAAAA,IAAkB,EAAE;AAAA,gBACvC,KAAK;AAAA,gBACL,WAAU;AAAA,cAAA;AAAA,YACX;AAAA,YACA,qBAAC,MAAG,EAAA,WAAU,uEACZ,UAAA;AAAA,cAAA;AAAA,cAAiB;AAAA,YAAA,GACnB;AAAA,UAAA;AAAA,QAAA;AAAA,MACD;AAAA,MACA,qBAAC,MAAG,EAAA,WAAU,2CACZ,UAAA;AAAA,QACA,UAAA,oBAAC,MAAG,EAAA,WAAU,YACb,UAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,IAAG;AAAA,YACH,WAAW,CAAC,EAAE,eACb,GAAG,yBAAyB,YAAY,WAAW;AAAA,YAGpD,UAAC,oBAAA,MAAA,EAAK,MAAK,QAAO,UAAQ,YAAA;AAAA,UAAA;AAAA,WAE5B,IACG;AAAA,QACH,KAAK,MAAM,MAAM,IAAI,UACpB,oBAAA,MAAA,EAAiB,WAAU,YAC3B,UAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,IAAI,KAAK;AAAA,YACT,oBAAkB;AAAA,YAClB,UAAS;AAAA,YACT,WAAW,CAAC,EAAE,eACb,GAAG,yBAAyB,YAAY,WAAW;AAAA,YAGnD,UAAK,KAAA;AAAA,UAAA;AAAA,QAAA,KATC,KAAK,EAWd,CACA;AAAA,MAAA,GACF;AAAA,IAAA,EAAA,CACD,EACD,CAAA;AAAA,wBACC,OAAI,EAAA,WAAU,kDACd,UAAA,oBAAC,SAAO,CAAA,GACT;AAAA,EAAA,EACD,CAAA,EACD,CAAA;AAEF;AAEO,SAASY,kBAAgB;AAE9B,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACA,gBAAgB;AAAA,QACf,KAAK,CAAC,EAAE,OAAO,2BACb,KAAE,EAAA,UAAA;AAAA,UAAA;AAAA,UAA4B,OAAO;AAAA,UAAS;AAAA,QAAA,GAAQ;AAAA,MAEzD;AAAA,IAAA;AAAA,EAAA;AAGH;;;;;;;ACnGO,MAAM,2BACZ;AC8BqB,eAAAD,SAAO,EAAE,UAA8B;AAC5D,QAAM,OAAO,MAAMJ,SAAO,KAAK,WAAW;AAAA,IACzC,OAAO,EAAE,IAAI,OAAO,OAAO;AAAA,IAC3B,QAAQ;AAAA,MACP,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,WAAW;AAAA,MACX,QAAQ;AAAA,QACP,QAAQ;AAAA,UACP,IAAI;AAAA,UACJ,SAAS;AAAA,QACV;AAAA,MACD;AAAA,IACD;AAAA,EAAA,CACA;AAED,oBAAkB,MAAM,aAAa,EAAE,QAAQ,IAAK,CAAA;AAEpD,QAAM,OAAO,IAAI,KAAK,KAAK,SAAS;AAC9B,QAAA,UAAU,oBAAoB,IAAI;AAExC,SAAO,KAAK;AAAA,IACX;AAAA,IACA;AAAA,EAAA,CACA;AACF;AAEA,MAAM,mBAAmB,EAAE,OAAO;AAAA,EACjC,QAAQ,EAAE,QAAQ,aAAa;AAAA,EAC/B,QAAQ,EAAE,OAAO;AAClB,CAAC;AAEqB,eAAAR,SAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AACpC,QAAA,WAAW,MAAM,QAAQ;AACzB,QAAA,aAAa,aAAa,UAAU;AAAA,IACzC,QAAQ;AAAA,EAAA,CACR;AACG,MAAA,WAAW,WAAW,WAAW;AAC7B,WAAA;AAAA,MACN,EAAE,QAAQ,WAAW,QAAQ;AAAA,MAC7B,EAAE,QAAQ,WAAW,WAAW,UAAU,MAAM,IAAI;AAAA,IAAA;AAAA,EAEtD;AAEM,QAAA,EAAE,OAAO,IAAI,WAAW;AAE9B,QAAM,OAAO,MAAMQ,SAAO,KAAK,UAAU;AAAA,IACxC,QAAQ,EAAE,IAAI,MAAM,SAAS,MAAM,OAAO,EAAE,QAAQ,EAAE,UAAU,SAAS;AAAA,IACzE,OAAO,EAAE,IAAI,OAAO;AAAA,EAAA,CACpB;AACD,oBAAkB,MAAM,aAAa,EAAE,QAAQ,IAAK,CAAA;AAE9C,QAAA,UAAU,KAAK,YAAY;AAC3B,QAAA;AAAA,IACL;AAAA,IACA,UAAU,oBAAoB;AAAA,EAAA;AAGzB,QAAAA,SAAO,KAAK,OAAO,EAAE,OAAO,EAAE,IAAI,KAAK,GAAG,EAAA,CAAG;AAEnD,SAAO,kBAAkB,UAAU,KAAK,MAAM,QAAQ,UAAU;AAAA,IAC/D,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,EAAA,CACb;AACF;AAEA,SAAwB,YAAY;AACnC,QAAM,OAAO;AACb,QAAM,OAAO;AACb,QAAM,WAAU,6BAAM,QAAO,KAAK,KAAK;AACvC,QAAM,YAAY;AAAA,IACjB;AAAA,IACA,UAAU,oBAAoB;AAAA,EAAA;AAE/B,QAAM,aAAa,aAAa;AAG/B,SAAA,qBAAC,OAAI,EAAA,WAAU,wCACd,UAAA;AAAA,IAAA,oBAAC,MAAG,EAAA,WAAU,8BAA8B,UAAA,KAAK,KAAK,OAAM;AAAA,yBAC3D,OAAI,EAAA,WAAW,GAAG,aAAa,UAAU,OAAO,oBAChD,UAAA;AAAA,MAAA,oBAAC,QAAG,WAAU,6BACZ,UAAK,KAAA,KAAK,OAAO,IAAI,CAAA,UACpB,oBAAA,MAAA,EACA,8BAAC,KAAE,EAAA,MAAM,cAAc,MAAM,EAAE,GAC9B,UAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,KAAK,cAAc,MAAM,EAAE;AAAA,UAC3B,KAAK,MAAM,WAAW;AAAA,UACtB,WAAU;AAAA,QAAA;AAAA,MAEZ,EAAA,CAAA,EAAA,GAPQ,MAAM,EAQf,CACA,EACF,CAAA;AAAA,0BACC,KAAE,EAAA,WAAU,8CACX,UAAA,KAAK,KAAK,SACZ;AAAA,IAAA,GACD;AAAA,IACC,aACA,qBAAC,OAAI,EAAA,WAAW,0BACf,UAAA;AAAA,MAAC,oBAAA,QAAA,EAAK,WAAU,iDACf,UAAA,qBAAC,QAAK,MAAK,SAAQ,WAAU,aAC3B,UAAA;AAAA,QAAK,KAAA;AAAA,QAAQ;AAAA,MAAA,EAAA,CACf,EACD,CAAA;AAAA,MACA,qBAAC,OAAI,EAAA,WAAU,uEACb,UAAA;AAAA,QAAA,gCAAa,YAAW,EAAA,IAAI,KAAK,KAAK,GAAI,CAAA,IAAK;AAAA,QAChD;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,SAAO;AAAA,YACP,WAAU;AAAA,YAEV,8BAAC,MAAK,EAAA,IAAG,QACR,UAAA,oBAAC,QAAK,MAAK,YAAW,WAAU,8BAC/B,8BAAC,QAAK,EAAA,WAAU,iBAAgB,UAAA,QAAI,GACrC,EACD,CAAA;AAAA,UAAA;AAAA,QACD;AAAA,MAAA,GACD;AAAA,IAAA,EAAA,CACD,IACG;AAAA,EACL,EAAA,CAAA;AAEF;AAEgB,SAAA,WAAW,EAAE,MAAsB;AAClD,QAAM,aAAa;AACnB,QAAM,YAAY;AACZ,QAAA,CAAC,IAAI,IAAI,QAAQ;AAAA,IACtB,IAAI;AAAA,IACJ,YAAY,yCAAY;AAAA,EAAA,CACxB;AAED,8BACE,MAAK,EAAA,QAAO,QAAQ,GAAG,aAAa,IAAI,GACxC,UAAA;AAAA,IAAA,oBAAC,WAAM,MAAK,UAAS,MAAK,UAAS,OAAO,IAAI;AAAA,IAC9C;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,MAAK;AAAA,QACL,MAAK;AAAA,QACL,OAAM;AAAA,QACN,SAAQ;AAAA,QACR,QAAQ,YAAY,YAAY,KAAK,UAAU;AAAA,QAC/C,UAAU;AAAA,QACV,WAAU;AAAA,QAEV,UAAA,oBAAC,MAAK,EAAA,MAAK,SAAQ,WAAU,8BAC5B,UAAA,oBAAC,QAAK,EAAA,WAAU,iBAAgB,UAAA,SAAM,CAAA,GACvC;AAAA,MAAA;AAAA,IACD;AAAA,wBACC,WAAU,EAAA,QAAQ,KAAK,QAAQ,IAAI,KAAK,SAAS;AAAA,EACnD,EAAA,CAAA;AAEF;AAEO,MAAMG,SAGT,CAAC,EAAE,MAAM,QAAQ,cAAc;;AAClC,QAAM,aAAa,QAAQ;AAAA,IAC1B,CAAA,MAAK,EAAE,OAAO;AAAA,EAAA;AAEf,QAAM,gBAAcV,MAAA,yCAAY,SAAZ,gBAAAA,IAAkB,MAAM,SAAQ,OAAO;AACrD,QAAA,aAAY,6BAAM,KAAK,UAAS;AACtC,QAAM,sBACL,QAAQ,KAAK,KAAK,QAAQ,SAAS,OAChC,6BAAM,KAAK,QAAQ,MAAM,GAAG,OAAM,QAClC;AACG,SAAA;AAAA,IACN,EAAE,OAAO,GAAG,SAAS,MAAM,WAAW,wBAAwB;AAAA,IAC9D;AAAA,MACC,MAAM;AAAA,MACN,SAAS;AAAA,IACV;AAAA,EAAA;AAEF;AAEO,SAASY,kBAAgB;AAE9B,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACA,gBAAgB;AAAA,QACf,KAAK,MAAO,oBAAA,KAAA,EAAE,UAA8B,iCAAA,CAAA;AAAA,QAC5C,KAAK,CAAC,EAAE,OAAO,2BACb,KAAE,EAAA,UAAA;AAAA,UAAA;AAAA,UAAsB,OAAO;AAAA,UAAO;AAAA,QAAA,GAAQ;AAAA,MAEjD;AAAA,IAAA;AAAA,EAAA;AAGH;;;;;;;;;;AClMA,MAAM,iBAAiB;AACvB,MAAM,iBAAiB;AACvB,MAAM,mBAAmB;AACzB,MAAM,mBAAmB;AAEZ,MAAA,kBAAkB,OAAO,OAAO;AAE7C,MAAM,sBAAsB,EAAE,OAAO;AAAA,EACpC,IAAI,EAAE,OAAO,EAAE,SAAS;AAAA,EACxB,MAAM,EACJ,WAAW,IAAI,EACf,WACA,OAAO,CAAQ,SAAA;AACR,WAAA,CAAC,QAAQ,KAAK,QAAQ;AAAA,KAC3B,iCAAiC;AAAA,EACrC,SAAS,EAAE,OAAO,EAAE,SAAS;AAC9B,CAAC;AAIY,MAAA,mBAAmB,EAAE,OAAO;AAAA,EACxC,IAAI,EAAE,OAAO,EAAE,SAAS;AAAA,EACxB,OAAO,EAAE,OAAO,EAAE,IAAI,cAAc,EAAE,IAAI,cAAc;AAAA,EACxD,SAAS,EAAE,OAAO,EAAE,IAAI,gBAAgB,EAAE,IAAI,gBAAgB;AAAA,EAC9D,QAAQ,EAAE,MAAM,mBAAmB,EAAE,IAAI,CAAC,EAAE,SAAS;AACtD,CAAC;AAEM,SAAS,WAAW;AAAA,EAC1B;AACD,GAMG;AACF,QAAM,aAAa;AACnB,QAAM,YAAY;AAElB,QAAM,CAAC,MAAM,MAAM,IAAI,QAAQ;AAAA,IAC9B,IAAI;AAAA,IACJ,YAAY,iBAAiB,gBAAgB;AAAA,IAC7C,YAAY,yCAAY;AAAA,IACxB,WAAW,EAAE,YAAY;AACxB,aAAO,aAAa,UAAU,EAAE,QAAQ,iBAAkB,CAAA;AAAA,IAC3D;AAAA,IACA,cAAc;AAAA,MACb,GAAG;AAAA,MACH,SAAQ,6BAAM,WAAU,CAAC,EAAE;AAAA,IAC5B;AAAA,IACA,kBAAkB;AAAA,EAAA,CAClB;AACK,QAAA,YAAY,OAAO,OAAO,aAAa;AAG5C,SAAA,oBAAC,SAAI,WAAU,oBACd,+BAAC,cAAa,EAAA,SAAS,KAAK,SAC3B,UAAA;AAAA,IAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,QAAO;AAAA,QACP,WAAU;AAAA,QACT,GAAG,aAAa,IAAI;AAAA,QACrB,SAAQ;AAAA,QAOR,UAAA;AAAA,UAAA,oBAAC,UAAO,EAAA,MAAK,UAAS,WAAU,UAAS;AAAA,UACxC,OAAQ,oBAAA,SAAA,EAAM,MAAK,UAAS,MAAK,MAAK,OAAO,KAAK,GAAA,CAAI,IAAK;AAAA,UAC5D,qBAAC,OAAI,EAAA,WAAU,uBACd,UAAA;AAAA,YAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACA,YAAY,EAAE,UAAU,QAAQ;AAAA,gBAChC,YAAY;AAAA,kBACX,WAAW;AAAA,kBACX,GAAG,cAAc,OAAO,OAAO,EAAE,MAAM,QAAQ;AAAA,gBAChD;AAAA,gBACA,QAAQ,OAAO,MAAM;AAAA,cAAA;AAAA,YACtB;AAAA,YACA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACA,YAAY,EAAE,UAAU,UAAU;AAAA,gBAClC,eAAe;AAAA,kBACd,GAAG,iBAAiB,OAAO,OAAO;AAAA,gBACnC;AAAA,gBACA,QAAQ,OAAO,QAAQ;AAAA,cAAA;AAAA,YACxB;AAAA,iCACC,OACA,EAAA,UAAA;AAAA,cAAA,oBAAC,SAAM,UAAM,SAAA,CAAA;AAAA,cACb,oBAAC,QAAG,WAAU,uBACZ,oBAAU,IAAI,CAAC,OAAO,UAAU;AACxB,wBAAA,IAAI,aAAa,MAAM,GAAG;AAEjC,uBAAA;AAAA,kBAAC;AAAA,kBAAA;AAAA,oBAEA,WAAU;AAAA,oBAEV,UAAA;AAAA,sBAAA;AAAA,wBAAC;AAAA,wBAAA;AAAA,0BACA,WAAU;AAAA,0BACT,GAAG,KAAK,OAAO,eAAe;AAAA,4BAC9B,MAAM,OAAO,OAAO;AAAA,4BACpB;AAAA,0BAAA,CACA;AAAA,0BAED,UAAA;AAAA,4BAAA,oBAAC,UAAK,eAAW,MAChB,8BAAC,MAAK,EAAA,MAAK,WAAU,EACtB,CAAA;AAAA,4BAAQ;AAAA,4BACR,qBAAC,QAAK,EAAA,WAAU,WAAU,UAAA;AAAA,8BAAA;AAAA,8BACX,QAAQ;AAAA,4BAAA,GACvB;AAAA,0BAAA;AAAA,wBAAA;AAAA,sBACD;AAAA,sBACA,oBAAC,cAAa,EAAA,MAAM,MAAO,CAAA;AAAA,oBAAA;AAAA,kBAAA;AAAA,kBAjBtB,MAAM;AAAA,gBAAA;AAAA,cAoBb,CAAA,GACF;AAAA,YAAA,GACD;AAAA,YACA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACA,WAAU;AAAA,gBACT,GAAG,KAAK,OAAO,eAAe,EAAE,MAAM,OAAO,OAAO,MAAM;AAAA,gBAE3D,UAAA;AAAA,kBAAC,oBAAA,QAAA,EAAK,eAAW,MAChB,UAAA,oBAAC,QAAK,MAAK,QAAO,mBAAK,EACxB,CAAA;AAAA,kBAAQ;AAAA,kBACP,oBAAA,QAAA,EAAK,WAAU,WAAU,UAAS,aAAA;AAAA,gBAAA;AAAA,cAAA;AAAA,YACpC;AAAA,UAAA,GACD;AAAA,8BACC,WAAU,EAAA,IAAI,KAAK,SAAS,QAAQ,KAAK,QAAQ;AAAA,QAAA;AAAA,MAAA;AAAA,IACnD;AAAA,IACA,qBAAC,OAAI,EAAA,WAAW,0BACf,UAAA;AAAA,MAAC,oBAAA,QAAA,EAAO,SAAQ,eAAe,GAAG,KAAK,MAAM,eAAA,GAAkB,UAE/D,QAAA,CAAA;AAAA,MACA;AAAA,QAAC;AAAA,QAAA;AAAA,UACA,MAAM,KAAK;AAAA,UACX,MAAK;AAAA,UACL,UAAU;AAAA,UACV,QAAQ,YAAY,YAAY;AAAA,UAChC,UAAA;AAAA,QAAA;AAAA,MAED;AAAA,IAAA,GACD;AAAA,EAAA,EACD,CAAA,EACD,CAAA;AAEF;AAEA,SAAS,aAAa,EAAE,MAAAF,SAAgD;AACjE,QAAA,SAASA,MAAK;AACpB,QAAM,gBAAgB,QAAQ,OAAO,GAAG,YAAY;AAC9C,QAAA,CAAC,cAAc,eAAe,IAAI;AAAA,IACvC,OAAO,GAAG,eAAe,cAAc,OAAO,GAAG,YAAY,IAAI;AAAA,EAAA;AAE5D,QAAA,CAAC,SAAS,UAAU,IAAI,SAAS,OAAO,QAAQ,gBAAgB,EAAE;AAExE,SACE,qBAAA,YAAA,EAAU,GAAG,iBAAiBA,KAAI,GAClC,UAAA;AAAA,IAAC,qBAAA,OAAA,EAAI,WAAU,cACd,UAAA;AAAA,MAAC,qBAAA,OAAA,EAAI,WAAU,QACd,UAAA;AAAA,QAAC,oBAAA,OAAA,EAAI,WAAU,sBACd,UAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,SAAS,OAAO,KAAK;AAAA,YACrB,WAAW,GAAG,uCAAuC;AAAA,cACpD,mEACC,CAAC;AAAA,cACF,sCAAsC,CAAC;AAAA,YAAA,CACvC;AAAA,YAEA,UAAA;AAAA,cACA,eAAA,qBAAC,OAAI,EAAA,WAAU,YACd,UAAA;AAAA,gBAAA;AAAA,kBAAC;AAAA,kBAAA;AAAA,oBACA,KAAK;AAAA,oBACL,KAAK,WAAW;AAAA,oBAChB,WAAU;AAAA,kBAAA;AAAA,gBACX;AAAA,gBACC,gBAAgB,OAChB,oBAAC,OAAI,EAAA,WAAU,4IAA2I,UAE1J,OAAA;AAAA,cAEF,EAAA,CAAA,wBAEC,OAAI,EAAA,WAAU,uHACd,UAAC,oBAAA,MAAA,EAAK,MAAK,OAAA,CAAO,EACnB,CAAA;AAAA,cAEA,gBACA,oBAAC,SAAO,EAAA,GAAG,cAAc,OAAO,IAAI,EAAE,MAAM,UAAU,EAAA,CAAG,IACtD;AAAA,cACJ;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACA,cAAW;AAAA,kBACX,WAAU;AAAA,kBACV,UAAU,CAAS,UAAA;;AAClB,0BAAM,QAAOV,MAAA,MAAM,OAAO,UAAb,gBAAAA,IAAqB;AAElC,wBAAI,MAAM;AACH,4BAAA,SAAS,IAAI;AACnB,6BAAO,YAAY,MAAM;AACxB,wCAAgB,OAAO,MAAgB;AAAA,sBAAA;AAExC,6BAAO,cAAc,IAAI;AAAA,oBAAA,OACnB;AACN,sCAAgB,IAAI;AAAA,oBACrB;AAAA,kBACD;AAAA,kBACA,QAAO;AAAA,kBACN,GAAG,cAAc,OAAO,MAAM,EAAE,MAAM,QAAQ;AAAA,gBAAA;AAAA,cAChD;AAAA,YAAA;AAAA,UAAA;AAAA,QAAA,GAEF;AAAA,QACC,oBAAA,OAAA,EAAI,WAAU,+BACd,8BAAC,WAAU,EAAA,IAAI,OAAO,KAAK,SAAS,QAAQ,OAAO,KAAK,OAAQ,CAAA,GACjE;AAAA,MAAA,GACD;AAAA,MACA,qBAAC,OAAI,EAAA,WAAU,UACd,UAAA;AAAA,QAAA,oBAAC,OAAM,EAAA,SAAS,OAAO,QAAQ,IAAI,UAAQ,YAAA;AAAA,QAC3C;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,UAAU,CAAA,MAAK,WAAW,EAAE,cAAc,KAAK;AAAA,YAC9C,GAAG,iBAAiB,OAAO,OAAO;AAAA,UAAA;AAAA,QACpC;AAAA,QACA,oBAAC,OAAI,EAAA,WAAU,+BACd,UAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,IAAI,OAAO,QAAQ;AAAA,YACnB,QAAQ,OAAO,QAAQ;AAAA,UAAA;AAAA,QAAA,GAEzB;AAAA,MAAA,GACD;AAAA,IAAA,GACD;AAAA,IACC,oBAAA,OAAA,EAAI,WAAU,+BACd,UAAC,oBAAA,WAAA,EAAU,IAAIU,MAAK,SAAS,QAAQA,MAAK,OAAQ,CAAA,GACnD;AAAA,EACD,EAAA,CAAA;AAEF;AChPA,SAAS,aACR,OACwE;;AACxE,SAAO,UAAQV,MAAA,MAAM,SAAN,gBAAAA,IAAY,WAAQ,WAAM,SAAN,mBAAY,QAAO,CAAC;AACxD;AAEA,SAAS,WACR,OACoE;AACpE,SAAO,MAAM,MAAM;AACpB;AAEsB,eAAA,OAAO,EAAE,WAA+B;AACvD,QAAA,SAAS,MAAM,cAAc,OAAO;AAE1C,QAAM,WAAW,MAAM4B;AAAAA,IACtB;AAAA,IACAC,mCAA0B,EAAE,aAAa,iBAAiB;AAAA,EAAA;AAGrD,QAAA,aAAa,MAAM,aAAa,UAAU;AAAA,IAC/C,QAAQ,iBAAiB,YAAY,OAAO,MAAM,QAAQ;AACzD,UAAI,CAAC,KAAK;AAAI;AAEd,YAAM,OAAO,MAAMtB,SAAO,KAAK,WAAW;AAAA,QACzC,QAAQ,EAAE,IAAI,KAAK;AAAA,QACnB,OAAO,EAAE,IAAI,KAAK,IAAI,SAAS,OAAO;AAAA,MAAA,CACtC;AACD,UAAI,CAAC,MAAM;AACV,YAAI,SAAS;AAAA,UACZ,MAAM,EAAE,aAAa;AAAA,UACrB,SAAS;AAAA,QAAA,CACT;AAAA,MACF;AAAA,IAAA,CACA,EAAE,UAAU,OAAO,EAAE,SAAS,CAAC,GAAG,GAAG,WAAW;AACzC,aAAA;AAAA,QACN,GAAG;AAAA,QACH,cAAc,MAAM,QAAQ;AAAA,UAC3B,OAAO,OAAO,UAAU,EAAE,IAAI,OAAM,MAAK;AACpC,gBAAA,aAAa,CAAC,GAAG;AACb,qBAAA;AAAA,gBACN,IAAI,EAAE;AAAA,gBACN,SAAS,EAAE;AAAA,gBACX,aAAa,EAAE,KAAK;AAAA,gBACpB,MAAM,OAAO,KAAK,MAAM,EAAE,KAAK,aAAa;AAAA,cAAA;AAAA,YAC7C,OACM;AACC,qBAAA;AAAA,gBACN,IAAI,EAAE;AAAA,gBACN,SAAS,EAAE;AAAA,cAAA;AAAA,YAEb;AAAA,UAAA,CACA;AAAA,QACF;AAAA,QACA,WAAW,MAAM,QAAQ;AAAA,UACxB,OACE,OAAO,YAAY,EACnB,OAAO,CAAA,MAAK,CAAC,EAAE,EAAE,EACjB,IAAI,OAAM,UAAS;AACZ,mBAAA;AAAA,cACN,SAAS,MAAM;AAAA,cACf,aAAa,MAAM,KAAK;AAAA,cACxB,MAAM,OAAO,KAAK,MAAM,MAAM,KAAK,aAAa;AAAA,YAAA;AAAA,UACjD,CACA;AAAA,QACH;AAAA,MAAA;AAAA,IACD,CACA;AAAA,IACD,OAAO;AAAA,EAAA,CACP;AAEG,MAAA,WAAW,WAAW,WAAW;AAC7B,WAAA;AAAA,MACN,EAAE,QAAQ,WAAW,QAAQ;AAAA,MAC7B,EAAE,QAAQ,WAAW,WAAW,UAAU,MAAM,IAAI;AAAA,IAAA;AAAA,EAEtD;AAEM,QAAA;AAAA,IACL,IAAI;AAAA,IACJ;AAAA,IACA;AAAA,IACA,eAAe,CAAC;AAAA,IAChB,YAAY,CAAC;AAAA,EAAA,IACV,WAAW;AAEf,QAAM,cAAc,MAAMA,SAAO,KAAK,OAAO;AAAA,IAC5C,QAAQ,EAAE,IAAI,MAAM,OAAO,EAAE,QAAQ,EAAE,UAAU,KAAK,IAAI;AAAA,IAC1D,OAAO,EAAE,IAAI,UAAU,eAAe;AAAA,IACtC,QAAQ;AAAA,MACP,SAAS;AAAA,MACT;AAAA,MACA;AAAA,MACA,QAAQ,EAAE,QAAQ,UAAU;AAAA,IAC7B;AAAA,IACA,QAAQ;AAAA,MACP;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,QACP,YAAY,EAAE,IAAI,EAAE,OAAO,aAAa,IAAI,CAAK,MAAA,EAAE,EAAE,IAAI;AAAA,QACzD,YAAY,aAAa,IAAI,CAAY,aAAA;AAAA,UACxC,OAAO,EAAE,IAAI,QAAQ,GAAG;AAAA,UACxB,MAAM,EAAE,GAAG,SAAS,IAAI,QAAQ,OAAOF,SAAA,IAAS,QAAQ,GAAG;AAAA,QAAA,EAC1D;AAAA,QACF,QAAQ;AAAA,MACT;AAAA,IACD;AAAA,EAAA,CACA;AAEM,SAAAC;AAAAA,IACN,UAAU,YAAY,MAAM,QAAQ,UAAU,YAAY,EAAE;AAAA,EAAA;AAE9D;ACxHA,eAAsBK,SAAO,EAAE,QAAQ,WAA+B;AAC/D,QAAA,SAAS,MAAM,cAAc,OAAO;AAC1C,QAAM,OAAO,MAAMJ,SAAO,KAAK,UAAU;AAAA,IACxC,QAAQ;AAAA,MACP,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,SAAS;AAAA,MACT,QAAQ;AAAA,QACP,QAAQ;AAAA,UACP,IAAI;AAAA,UACJ,SAAS;AAAA,QACV;AAAA,MACD;AAAA,IACD;AAAA,IACA,OAAO;AAAA,MACN,IAAI,OAAO;AAAA,MACX,SAAS;AAAA,IACV;AAAA,EAAA,CACA;AACD,oBAAkB,MAAM,aAAa,EAAE,QAAQ,IAAK,CAAA;AAC7C,SAAA,KAAK,EAAE,KAAA,CAAY;AAC3B;AAEA,SAAwB,WAAW;AAClC,QAAM,OAAO;AAEb,SAAQ,oBAAA,YAAA,EAAW,MAAM,KAAK,KAAM,CAAA;AACrC;AAEO,SAASK,kBAAgB;AAE9B,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACA,gBAAgB;AAAA,QACf,KAAK,CAAC,EAAE,OAAO,2BACb,KAAE,EAAA,UAAA;AAAA,UAAA;AAAA,UAAsB,OAAO;AAAA,UAAO;AAAA,QAAA,GAAQ;AAAA,MAEjD;AAAA,IAAA;AAAA,EAAA;AAGH;;;;;;;;AC9CA,SAAwB,kBAAkB;AAExC,SAAA,oBAAC,SAAI,WAAU,mBACd,8BAAC,KAAE,EAAA,WAAU,gBAAe,UAAA,gBAAa,CAAA,EAC1C,CAAA;AAEF;AAEO,MAAM,OAGT,CAAC,EAAE,QAAQ,cAAc;;AAC5B,QAAM,aAAa,QAAQ;AAAA,IAC1B,CAAA,MAAK,EAAE,OAAO;AAAA,EAAA;AAEf,QAAM,gBAAcZ,MAAA,yCAAY,SAAZ,gBAAAA,IAAkB,MAAM,SAAQ,OAAO;AAC3D,QAAM,cAAY,8CAAY,SAAZ,mBAAkB,MAAM,MAAM,WAAU;AACpD,QAAA,YAAY,cAAc,IAAI,SAAS;AACtC,SAAA;AAAA,IACN,EAAE,OAAO,GAAG,WAAW,wBAAwB;AAAA,IAC/C;AAAA,MACC,MAAM;AAAA,MACN,SAAS,YAAY,WAAW,MAAM,SAAS,IAAI,SAAS;AAAA,IAC7D;AAAA,EAAA;AAEF;;;;;;ACtBsB,eAAAW,SAAO,EAAE,WAA+B;AAC7D,QAAM,cAAc,OAAO;AACpB,SAAA,KAAK,CAAA,CAAE;AACf;;;;;;;ACAA,MAAM,yBAAyB,EAAE,OAAO;AAAA,EACvC,IAAI,EAAE,OAAO;AAAA,EACb,UAAU,EAAE,OAAO;AAAA,EACnB,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,SAAS,EAAE,OAAO,EAAE,SAAS;AAC9B,CAAC;AAED,MAAM,0BAA0B,EAAE,MAAM,sBAAsB;AAExC,eAAA,OAAO,EAAE,WAA+B;AACvD,QAAA,aAAa,IAAI,IAAI,QAAQ,GAAG,EAAE,aAAa,IAAI,QAAQ;AACjE,MAAI,eAAe,IAAI;AACtB,WAAOL,WAAS,QAAQ;AAAA,EACzB;AAEM,QAAA,OAAO,IAAI,cAAc,EAAE;AAC3B,QAAA,WAAW,MAAMC,SAAO;AAAA;AAAA;AAAA;AAAA,6BAIF,IAAI;AAAA,sBACX,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWnB,QAAA,SAAS,wBAAwB,UAAU,QAAQ;AACrD,MAAA,CAAC,OAAO,SAAS;AACb,WAAA,KAAK,EAAE,QAAQ,SAAS,OAAO,OAAO,MAAM,WAAoB;AAAA,MACtE,QAAQ;AAAA,IAAA,CACR;AAAA,EACF;AACA,SAAO,KAAK,EAAE,QAAQ,QAAQ,OAAO,OAAO,MAAe;AAC5D;AAEA,SAAwB,aAAa;AACpC,QAAM,OAAO;AACb,QAAM,YAAY,oBAAoB;AAAA,IACrC,YAAY;AAAA,IACZ,YAAY;AAAA,EAAA,CACZ;AAEG,MAAA,KAAK,WAAW,SAAS;AACpB,YAAA,MAAM,KAAK,KAAK;AAAA,EACzB;AAGC,SAAA,qBAAC,OAAI,EAAA,WAAU,yEACd,UAAA;AAAA,IAAC,oBAAA,MAAA,EAAG,WAAU,WAAU,UAAgB,oBAAA;AAAA,IACvC,oBAAA,OAAA,EAAI,WAAU,wBACd,UAAC,oBAAA,WAAA,EAAU,QAAQ,KAAK,QAAQ,WAAS,MAAC,YAAU,KAAC,CAAA,GACtD;AAAA,wBACC,QACC,EAAA,UAAA,KAAK,WAAW,SAChB,KAAK,MAAM,SACV;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,WAAW;AAAA,UACV;AAAA,UACA,EAAE,cAAc,UAAU;AAAA,QAC3B;AAAA,QAEC,UAAK,KAAA,MAAM,IAAI,CAAA,6BACd,MACA,EAAA,UAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACA,IAAI,KAAK;AAAA,YACT,WAAU;AAAA,YAEV,UAAA;AAAA,cAAA;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACA,KAAK,KAAK,QAAQ,KAAK;AAAA,kBACvB,KAAK,cAAc,KAAK,OAAO;AAAA,kBAC/B,WAAU;AAAA,gBAAA;AAAA,cACX;AAAA,cACC,KAAK,OACJ,oBAAA,QAAA,EAAK,WAAU,mFACd,UAAA,KAAK,MACP,IACG;AAAA,cACH,oBAAA,QAAA,EAAK,WAAU,uFACd,eAAK,UACP;AAAA,YAAA;AAAA,UAAA;AAAA,QAAA,KAjBO,KAAK,EAmBd,CACA;AAAA,MAAA;AAAA,IAAA,IAGF,oBAAC,KAAE,EAAA,UAAA,iBAAc,CAAA,IAEf,KAAK,WAAW,UACnB,oBAAC,aAAU,QAAQ,CAAC,wCAAwC,EAAG,CAAA,IAC5D,MACL;AAAA,EACD,EAAA,CAAA;AAEF;AAEO,SAAS,gBAAgB;AAC/B,6BAAQ,sBAAqB,CAAA,CAAA;AAC9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}